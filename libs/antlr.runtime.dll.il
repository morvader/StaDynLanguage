
//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.0.30319.1
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v2.0.50727
.assembly extern mscorlib
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly extern System
{
  .publickeytoken = (B7 7A 5C 56 19 34 E0 89 )                         // .z\V.4..
  .ver 2:0:0:0
}
.assembly antlr.runtime
{
  .custom instance void [mscorlib]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx
                                                                                                             63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.

  // 
  //  .custom instance void [mscorlib]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [mscorlib]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) 

  .custom instance void [mscorlib]System.CLSCompliantAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyTrademarkAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCopyrightAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 00 00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 0D 77 77 77 2E 61 6E 74 6C 72 2E 6F 72 67   // ...www.antlr.org
                                                                                                00 00 ) 
  .custom instance void [mscorlib]System.Reflection.AssemblyDescriptionAttribute::.ctor(string) = ( 01 00 16 41 4E 54 4C 52 20 52 75 6E 74 69 6D 65   // ...ANTLR Runtime
                                                                                                    20 66 6F 72 20 2E 4E 45 54 00 00 )                //  for .NET..
  .custom instance void [mscorlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 0D 61 6E 74 6C 72 2E 72 75 6E 74 69 6D 65   // ...antlr.runtime
                                                                                              00 00 ) 
  .hash algorithm 0x00008004
  .ver 2:7:7:1
}
.module antlr.runtime.dll
// MVID: {4A0851F4-753B-408F-BE43-C27906EF63CA}
.imagebase 0x10000000
.file alignment 0x00001000
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00000001    //  ILONLY
// Image base: 0x0000000000360000


// =============== CLASS MEMBERS DECLARATION ===================

.class public auto ansi beforefieldinit antlr.TreeParser
       extends [mscorlib]System.Object
{
  .field public static class antlr.ASTNULLType ASTNULL
  .field famorassem class antlr.collections.AST retTree_
  .field famorassem class antlr.TreeParserSharedInputState inputState
  .field famorassem string[] tokenNames
  .field famorassem class antlr.collections.AST returnAST
  .field famorassem class antlr.ASTFactory astFactory
  .field famorassem int32 traceDepth
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void antlr.ASTFactory::.ctor()
    IL_0006:  stfld      class antlr.ASTFactory antlr.TreeParser::astFactory
    IL_000b:  ldarg.0
    IL_000c:  ldc.i4.0
    IL_000d:  stfld      int32 antlr.TreeParser::traceDepth
    IL_0012:  ldarg.0
    IL_0013:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0018:  nop
    IL_0019:  nop
    IL_001a:  ldarg.0
    IL_001b:  newobj     instance void antlr.TreeParserSharedInputState::.ctor()
    IL_0020:  stfld      class antlr.TreeParserSharedInputState antlr.TreeParser::inputState
    IL_0025:  nop
    IL_0026:  ret
  } // end of method TreeParser::.ctor

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getAST() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.AST antlr.TreeParser::returnAST
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TreeParser::getAST

  .method public hidebysig newslot virtual 
          instance class antlr.ASTFactory 
          getASTFactory() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.ASTFactory V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTFactory antlr.TreeParser::astFactory
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TreeParser::getASTFactory

  .method public hidebysig newslot virtual 
          instance void  resetState() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.TreeParser::traceDepth
    IL_0008:  ldarg.0
    IL_0009:  ldnull
    IL_000a:  stfld      class antlr.collections.AST antlr.TreeParser::returnAST
    IL_000f:  ldarg.0
    IL_0010:  ldnull
    IL_0011:  stfld      class antlr.collections.AST antlr.TreeParser::retTree_
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class antlr.TreeParserSharedInputState antlr.TreeParser::inputState
    IL_001c:  callvirt   instance void antlr.TreeParserSharedInputState::reset()
    IL_0021:  nop
    IL_0022:  ret
  } // end of method TreeParser::resetState

  .method public hidebysig newslot virtual 
          instance string  getTokenName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.TreeParser::tokenNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method TreeParser::getTokenName

  .method public hidebysig newslot virtual 
          instance string[]  getTokenNames() cil managed
  {
    // 
    .maxstack  1
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.TreeParser::tokenNames
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TreeParser::getTokenNames

  .method famorassem hidebysig newslot virtual 
          instance void  match(class antlr.collections.AST t,
                               int32 ttype) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_0017

    IL_0004:  ldarg.1
    IL_0005:  ldsfld     class antlr.ASTNULLType antlr.TreeParser::ASTNULL
    IL_000a:  beq.s      IL_0017

    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_0012:  ldarg.2
    IL_0013:  ceq
    IL_0015:  br.s       IL_0018

    IL_0017:  ldc.i4.0
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  brtrue.s   IL_002c

    IL_001c:  nop
    IL_001d:  ldarg.0
    IL_001e:  callvirt   instance string[] antlr.TreeParser::getTokenNames()
    IL_0023:  ldarg.1
    IL_0024:  ldarg.2
    IL_0025:  ldc.i4.0
    IL_0026:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.collections.AST,
                                                                             int32,
                                                                             bool)
    IL_002b:  throw

    IL_002c:  ret
  } // end of method TreeParser::match

  .method public hidebysig newslot virtual 
          instance void  match(class antlr.collections.AST t,
                               class antlr.collections.impl.BitSet b) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_001a

    IL_0004:  ldarg.1
    IL_0005:  ldsfld     class antlr.ASTNULLType antlr.TreeParser::ASTNULL
    IL_000a:  beq.s      IL_001a

    IL_000c:  ldarg.2
    IL_000d:  ldarg.1
    IL_000e:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_0013:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0018:  br.s       IL_001b

    IL_001a:  ldc.i4.0
    IL_001b:  stloc.0
    IL_001c:  ldloc.0
    IL_001d:  brtrue.s   IL_002f

    IL_001f:  nop
    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance string[] antlr.TreeParser::getTokenNames()
    IL_0026:  ldarg.1
    IL_0027:  ldarg.2
    IL_0028:  ldc.i4.0
    IL_0029:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.collections.AST,
                                                                             class antlr.collections.impl.BitSet,
                                                                             bool)
    IL_002e:  throw

    IL_002f:  ret
  } // end of method TreeParser::match

  .method famorassem hidebysig newslot virtual 
          instance void  matchNot(class antlr.collections.AST t,
                                  int32 ttype) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_001a

    IL_0004:  ldarg.1
    IL_0005:  ldsfld     class antlr.ASTNULLType antlr.TreeParser::ASTNULL
    IL_000a:  beq.s      IL_001a

    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_0012:  ldarg.2
    IL_0013:  ceq
    IL_0015:  ldc.i4.0
    IL_0016:  ceq
    IL_0018:  br.s       IL_001b

    IL_001a:  ldc.i4.0
    IL_001b:  stloc.0
    IL_001c:  ldloc.0
    IL_001d:  brtrue.s   IL_002f

    IL_001f:  nop
    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance string[] antlr.TreeParser::getTokenNames()
    IL_0026:  ldarg.1
    IL_0027:  ldarg.2
    IL_0028:  ldc.i4.1
    IL_0029:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.collections.AST,
                                                                             int32,
                                                                             bool)
    IL_002e:  throw

    IL_002f:  ret
  } // end of method TreeParser::matchNot

  .method public hidebysig static void  panic() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 2D 61 63 74 69 76 61 74 65 64 20   // ..=De-activated 
                                                                              73 69 6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E   // since version 2.
                                                                              37 2E 32 2E 36 20 61 73 20 69 74 20 63 61 6E 6E   // 7.2.6 as it cann
                                                                              6F 74 20 62 65 20 6F 76 65 72 69 64 64 65 6E 2E   // ot be overidden.
                                                                              01 00 00 ) 
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldstr      "TreeWalker: panic"
    IL_000b:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0010:  nop
    IL_0011:  ldc.i4.1
    IL_0012:  call       void [mscorlib]System.Environment::Exit(int32)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method TreeParser::panic

  .method public hidebysig newslot virtual 
          instance void  reportError(class antlr.RecognitionException ex) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000c:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0011:  nop
    IL_0012:  ret
  } // end of method TreeParser::reportError

  .method public hidebysig newslot virtual 
          instance void  reportError(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldstr      "error: "
    IL_000b:  ldarg.1
    IL_000c:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0011:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0016:  nop
    IL_0017:  ret
  } // end of method TreeParser::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldstr      "warning: "
    IL_000b:  ldarg.1
    IL_000c:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0011:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0016:  nop
    IL_0017:  ret
  } // end of method TreeParser::reportWarning

  .method public hidebysig newslot virtual 
          instance void  setASTFactory(class antlr.ASTFactory f) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.ASTFactory antlr.TreeParser::astFactory
    IL_0008:  ret
  } // end of method TreeParser::setASTFactory

  .method public hidebysig newslot virtual 
          instance void  setASTNodeType(string nodeType) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.TreeParser::setASTNodeClass(string)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TreeParser::setASTNodeType

  .method public hidebysig newslot virtual 
          instance void  setASTNodeClass(string nodeType) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTFactory antlr.TreeParser::astFactory
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.ASTFactory::setASTNodeType(string)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TreeParser::setASTNodeClass

  .method public hidebysig newslot virtual 
          instance void  traceIndent() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0019

    IL_0005:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000a:  ldstr      " "
    IL_000f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0014:  nop
    IL_0015:  ldloc.0
    IL_0016:  ldc.i4.1
    IL_0017:  add
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  ldarg.0
    IL_001b:  ldfld      int32 antlr.TreeParser::traceDepth
    IL_0020:  clt
    IL_0022:  stloc.1
    IL_0023:  ldloc.1
    IL_0024:  brtrue.s   IL_0005

    IL_0026:  ret
  } // end of method TreeParser::traceIndent

  .method public hidebysig newslot virtual 
          instance void  traceIn(string rname,
                                 class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.TreeParser::traceDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.TreeParser::traceDepth
    IL_000f:  ldarg.0
    IL_0010:  callvirt   instance void antlr.TreeParser::traceIndent()
    IL_0015:  nop
    IL_0016:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_001b:  ldc.i4.6
    IL_001c:  newarr     [mscorlib]System.String
    IL_0021:  stloc.0
    IL_0022:  ldloc.0
    IL_0023:  ldc.i4.0
    IL_0024:  ldstr      "> "
    IL_0029:  stelem.ref
    IL_002a:  ldloc.0
    IL_002b:  ldc.i4.1
    IL_002c:  ldarg.1
    IL_002d:  stelem.ref
    IL_002e:  ldloc.0
    IL_002f:  ldc.i4.2
    IL_0030:  ldstr      "("
    IL_0035:  stelem.ref
    IL_0036:  ldloc.0
    IL_0037:  ldc.i4.3
    IL_0038:  ldarg.2
    IL_0039:  brtrue.s   IL_0042

    IL_003b:  ldstr      "null"
    IL_0040:  br.s       IL_0048

    IL_0042:  ldarg.2
    IL_0043:  callvirt   instance string antlr.collections.AST::ToString()
    IL_0048:  stelem.ref
    IL_0049:  ldloc.0
    IL_004a:  ldc.i4.4
    IL_004b:  ldstr      ")"
    IL_0050:  stelem.ref
    IL_0051:  ldloc.0
    IL_0052:  ldc.i4.5
    IL_0053:  ldarg.0
    IL_0054:  ldfld      class antlr.TreeParserSharedInputState antlr.TreeParser::inputState
    IL_0059:  ldfld      int32 antlr.TreeParserSharedInputState::guessing
    IL_005e:  ldc.i4.0
    IL_005f:  bgt.s      IL_0068

    IL_0061:  ldstr      ""
    IL_0066:  br.s       IL_006d

    IL_0068:  ldstr      " [guessing]"
    IL_006d:  stelem.ref
    IL_006e:  ldloc.0
    IL_006f:  call       string [mscorlib]System.String::Concat(string[])
    IL_0074:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0079:  nop
    IL_007a:  ret
  } // end of method TreeParser::traceIn

  .method public hidebysig newslot virtual 
          instance void  traceOut(string rname,
                                  class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.TreeParser::traceIndent()
    IL_0007:  nop
    IL_0008:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000d:  ldc.i4.6
    IL_000e:  newarr     [mscorlib]System.String
    IL_0013:  stloc.0
    IL_0014:  ldloc.0
    IL_0015:  ldc.i4.0
    IL_0016:  ldstr      "< "
    IL_001b:  stelem.ref
    IL_001c:  ldloc.0
    IL_001d:  ldc.i4.1
    IL_001e:  ldarg.1
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.2
    IL_0022:  ldstr      "("
    IL_0027:  stelem.ref
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.3
    IL_002a:  ldarg.2
    IL_002b:  brtrue.s   IL_0034

    IL_002d:  ldstr      "null"
    IL_0032:  br.s       IL_003a

    IL_0034:  ldarg.2
    IL_0035:  callvirt   instance string antlr.collections.AST::ToString()
    IL_003a:  stelem.ref
    IL_003b:  ldloc.0
    IL_003c:  ldc.i4.4
    IL_003d:  ldstr      ")"
    IL_0042:  stelem.ref
    IL_0043:  ldloc.0
    IL_0044:  ldc.i4.5
    IL_0045:  ldarg.0
    IL_0046:  ldfld      class antlr.TreeParserSharedInputState antlr.TreeParser::inputState
    IL_004b:  ldfld      int32 antlr.TreeParserSharedInputState::guessing
    IL_0050:  ldc.i4.0
    IL_0051:  bgt.s      IL_005a

    IL_0053:  ldstr      ""
    IL_0058:  br.s       IL_005f

    IL_005a:  ldstr      " [guessing]"
    IL_005f:  stelem.ref
    IL_0060:  ldloc.0
    IL_0061:  call       string [mscorlib]System.String::Concat(string[])
    IL_0066:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_006b:  nop
    IL_006c:  ldarg.0
    IL_006d:  dup
    IL_006e:  ldfld      int32 antlr.TreeParser::traceDepth
    IL_0073:  ldc.i4.1
    IL_0074:  sub
    IL_0075:  stfld      int32 antlr.TreeParser::traceDepth
    IL_007a:  ret
  } // end of method TreeParser::traceOut

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.ASTNULLType::.ctor()
    IL_0005:  stsfld     class antlr.ASTNULLType antlr.TreeParser::ASTNULL
    IL_000a:  ret
  } // end of method TreeParser::.cctor

} // end of class antlr.TreeParser

.class interface public abstract auto ansi antlr.IToken
{
  .method public hidebysig newslot abstract virtual 
          instance int32  getColumn() cil managed
  {
  } // end of method IToken::getColumn

  .method public hidebysig newslot abstract virtual 
          instance void  setColumn(int32 c) cil managed
  {
  } // end of method IToken::setColumn

  .method public hidebysig newslot abstract virtual 
          instance int32  getLine() cil managed
  {
  } // end of method IToken::getLine

  .method public hidebysig newslot abstract virtual 
          instance void  setLine(int32 l) cil managed
  {
  } // end of method IToken::setLine

  .method public hidebysig newslot abstract virtual 
          instance string  getFilename() cil managed
  {
  } // end of method IToken::getFilename

  .method public hidebysig newslot abstract virtual 
          instance void  setFilename(string name) cil managed
  {
  } // end of method IToken::setFilename

  .method public hidebysig newslot abstract virtual 
          instance string  getText() cil managed
  {
  } // end of method IToken::getText

  .method public hidebysig newslot abstract virtual 
          instance void  setText(string t) cil managed
  {
  } // end of method IToken::setText

  .method public hidebysig newslot specialname abstract virtual 
          instance int32  get_Type() cil managed
  {
  } // end of method IToken::get_Type

  .method public hidebysig newslot specialname abstract virtual 
          instance void  set_Type(int32 'value') cil managed
  {
  } // end of method IToken::set_Type

  .property instance int32 Type()
  {
    .set instance void antlr.IToken::set_Type(int32)
    .get instance int32 antlr.IToken::get_Type()
  } // end of property IToken::Type
} // end of class antlr.IToken

.class public auto ansi beforefieldinit antlr.Token
       extends [mscorlib]System.Object
       implements antlr.IToken
{
  .field public static literal int32 MIN_USER_TYPE = int32(0x00000004)
  .field public static literal int32 NULL_TREE_LOOKAHEAD = int32(0x00000003)
  .field public static literal int32 INVALID_TYPE = int32(0x00000000)
  .field public static literal int32 EOF_TYPE = int32(0x00000001)
  .field public static initonly int32 SKIP
  .field family int32 type_
  .field public static class antlr.Token badToken
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.0
    IL_000a:  stfld      int32 antlr.Token::type_
    IL_000f:  nop
    IL_0010:  ret
  } // end of method Token::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int32 antlr.Token::type_
    IL_000f:  nop
    IL_0010:  ret
  } // end of method Token::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 t,
                               string txt) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int32 antlr.Token::type_
    IL_000f:  ldarg.0
    IL_0010:  ldarg.2
    IL_0011:  callvirt   instance void antlr.Token::setText(string)
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method Token::.ctor

  .method public hidebysig newslot virtual 
          instance int32  getColumn() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method Token::getColumn

  .method public hidebysig newslot virtual 
          instance int32  getLine() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method Token::getLine

  .method public hidebysig newslot virtual 
          instance string  getFilename() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method Token::getFilename

  .method public hidebysig newslot virtual 
          instance void  setFilename(string name) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method Token::setFilename

  .method public hidebysig newslot virtual 
          instance string  getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      "<no text>"
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method Token::getText

  .method public hidebysig newslot specialname virtual final 
          instance int32  get_Type() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.Token::type_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Token::get_Type

  .method public hidebysig newslot specialname virtual final 
          instance void  set_Type(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.Token::type_
    IL_0008:  ret
  } // end of method Token::set_Type

  .method public hidebysig newslot virtual 
          instance void  setType(int32 newType) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance void antlr.Token::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method Token::setType

  .method public hidebysig newslot virtual 
          instance void  setColumn(int32 c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method Token::setColumn

  .method public hidebysig newslot virtual 
          instance void  setLine(int32 l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method Token::setLine

  .method public hidebysig newslot virtual 
          instance void  setText(string t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method Token::setText

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.5
    IL_0002:  newarr     [mscorlib]System.Object
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldc.i4.0
    IL_000a:  ldstr      "[\""
    IL_000f:  stelem.ref
    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance string antlr.Token::getText()
    IL_0018:  stelem.ref
    IL_0019:  ldloc.1
    IL_001a:  ldc.i4.2
    IL_001b:  ldstr      "\",<"
    IL_0020:  stelem.ref
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.3
    IL_0023:  ldarg.0
    IL_0024:  ldfld      int32 antlr.Token::type_
    IL_0029:  box        [mscorlib]System.Int32
    IL_002e:  stelem.ref
    IL_002f:  ldloc.1
    IL_0030:  ldc.i4.4
    IL_0031:  ldstr      ">]"
    IL_0036:  stelem.ref
    IL_0037:  ldloc.1
    IL_0038:  call       string [mscorlib]System.String::Concat(object[])
    IL_003d:  stloc.0
    IL_003e:  br.s       IL_0040

    IL_0040:  ldloc.0
    IL_0041:  ret
  } // end of method Token::ToString

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.m1
    IL_0001:  stsfld     int32 antlr.Token::SKIP
    IL_0006:  ldc.i4.0
    IL_0007:  ldstr      "<no text>"
    IL_000c:  newobj     instance void antlr.Token::.ctor(int32,
                                                          string)
    IL_0011:  stsfld     class antlr.Token antlr.Token::badToken
    IL_0016:  ret
  } // end of method Token::.cctor

  .property instance int32 Type()
  {
    .set instance void antlr.Token::set_Type(int32)
    .get instance int32 antlr.Token::get_Type()
  } // end of property Token::Type
} // end of class antlr.Token

.class public auto ansi beforefieldinit antlr.CommonToken
       extends antlr.Token
{
  .class auto ansi nested public beforefieldinit CommonTokenCreator
         extends antlr.TokenCreator
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.TokenCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method CommonTokenCreator::.ctor

    .method public hidebysig specialname virtual 
            instance string  get_TokenTypeName() cil managed
    {
      // 
      .maxstack  1
      .locals init (string V_0)
      IL_0000:  nop
      IL_0001:  ldtoken    antlr.CommonToken
      IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_000b:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0010:  stloc.0
      IL_0011:  br.s       IL_0013

      IL_0013:  ldloc.0
      IL_0014:  ret
    } // end of method CommonTokenCreator::get_TokenTypeName

    .method public hidebysig virtual instance class antlr.IToken 
            Create() cil managed
    {
      // 
      .maxstack  1
      .locals init (class antlr.IToken V_0)
      IL_0000:  nop
      IL_0001:  newobj     instance void antlr.CommonToken::.ctor()
      IL_0006:  stloc.0
      IL_0007:  br.s       IL_0009

      IL_0009:  ldloc.0
      IL_000a:  ret
    } // end of method CommonTokenCreator::Create

    .property instance string TokenTypeName()
    {
      .get instance string antlr.CommonToken/CommonTokenCreator::get_TokenTypeName()
    } // end of property CommonTokenCreator::TokenTypeName
  } // end of class CommonTokenCreator

  .field public static initonly class antlr.CommonToken/CommonTokenCreator Creator
  .field famorassem int32 line
  .field famorassem string text
  .field famorassem int32 col
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.CommonToken::text
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.Token::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ret
  } // end of method CommonToken::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 t,
                               string txt) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.CommonToken::text
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.Token::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  stfld      int32 antlr.Token::type_
    IL_0016:  ldarg.0
    IL_0017:  ldarg.2
    IL_0018:  callvirt   instance void antlr.Token::setText(string)
    IL_001d:  nop
    IL_001e:  nop
    IL_001f:  ret
  } // end of method CommonToken::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.CommonToken::text
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.Token::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  stfld      string antlr.CommonToken::text
    IL_0016:  nop
    IL_0017:  ret
  } // end of method CommonToken::.ctor

  .method public hidebysig virtual instance int32 
          getLine() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.CommonToken::line
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonToken::getLine

  .method public hidebysig virtual instance string 
          getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.CommonToken::text
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonToken::getText

  .method public hidebysig virtual instance void 
          setLine(int32 l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.CommonToken::line
    IL_0008:  ret
  } // end of method CommonToken::setLine

  .method public hidebysig virtual instance void 
          setText(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      string antlr.CommonToken::text
    IL_0008:  ret
  } // end of method CommonToken::setText

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   9
    IL_0003:  newarr     [mscorlib]System.Object
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.0
    IL_000b:  ldstr      "[\""
    IL_0010:  stelem.ref
    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.1
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance string antlr.Token::getText()
    IL_0019:  stelem.ref
    IL_001a:  ldloc.1
    IL_001b:  ldc.i4.2
    IL_001c:  ldstr      "\",<"
    IL_0021:  stelem.ref
    IL_0022:  ldloc.1
    IL_0023:  ldc.i4.3
    IL_0024:  ldarg.0
    IL_0025:  ldfld      int32 antlr.Token::type_
    IL_002a:  box        [mscorlib]System.Int32
    IL_002f:  stelem.ref
    IL_0030:  ldloc.1
    IL_0031:  ldc.i4.4
    IL_0032:  ldstr      ">,line="
    IL_0037:  stelem.ref
    IL_0038:  ldloc.1
    IL_0039:  ldc.i4.5
    IL_003a:  ldarg.0
    IL_003b:  ldfld      int32 antlr.CommonToken::line
    IL_0040:  box        [mscorlib]System.Int32
    IL_0045:  stelem.ref
    IL_0046:  ldloc.1
    IL_0047:  ldc.i4.6
    IL_0048:  ldstr      ",col="
    IL_004d:  stelem.ref
    IL_004e:  ldloc.1
    IL_004f:  ldc.i4.7
    IL_0050:  ldarg.0
    IL_0051:  ldfld      int32 antlr.CommonToken::col
    IL_0056:  box        [mscorlib]System.Int32
    IL_005b:  stelem.ref
    IL_005c:  ldloc.1
    IL_005d:  ldc.i4.8
    IL_005e:  ldstr      "]"
    IL_0063:  stelem.ref
    IL_0064:  ldloc.1
    IL_0065:  call       string [mscorlib]System.String::Concat(object[])
    IL_006a:  stloc.0
    IL_006b:  br.s       IL_006d

    IL_006d:  ldloc.0
    IL_006e:  ret
  } // end of method CommonToken::ToString

  .method public hidebysig virtual instance int32 
          getColumn() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.CommonToken::col
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonToken::getColumn

  .method public hidebysig virtual instance void 
          setColumn(int32 c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.CommonToken::col
    IL_0008:  ret
  } // end of method CommonToken::setColumn

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.CommonToken/CommonTokenCreator::.ctor()
    IL_0005:  stsfld     class antlr.CommonToken/CommonTokenCreator antlr.CommonToken::Creator
    IL_000a:  ret
  } // end of method CommonToken::.cctor

} // end of class antlr.CommonToken

.class public abstract auto ansi beforefieldinit antlr.TokenCreator
       extends [mscorlib]System.Object
{
  .method public hidebysig newslot specialname abstract virtual 
          instance string  get_TokenTypeName() cil managed
  {
  } // end of method TokenCreator::get_TokenTypeName

  .method public hidebysig newslot abstract virtual 
          instance class antlr.IToken  Create() cil managed
  {
  } // end of method TokenCreator::Create

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TokenCreator::.ctor

  .property instance string TokenTypeName()
  {
    .get instance string antlr.TokenCreator::get_TokenTypeName()
  } // end of property TokenCreator::TokenTypeName
} // end of class antlr.TokenCreator

.class public auto ansi beforefieldinit antlr.TokenWithIndex
       extends antlr.CommonToken
{
  .field private int32 index
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.CommonToken::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TokenWithIndex::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 i,
                               string t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void antlr.CommonToken::.ctor(int32,
                                                                string)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method TokenWithIndex::.ctor

  .method public hidebysig instance void 
          setIndex(int32 i) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.TokenWithIndex::index
    IL_0008:  ret
  } // end of method TokenWithIndex::setIndex

  .method public hidebysig instance int32 
          getIndex() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.TokenWithIndex::index
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenWithIndex::getIndex

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   11
    IL_0003:  newarr     [mscorlib]System.Object
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.0
    IL_000b:  ldstr      "["
    IL_0010:  stelem.ref
    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.1
    IL_0013:  ldarg.0
    IL_0014:  ldfld      int32 antlr.TokenWithIndex::index
    IL_0019:  box        [mscorlib]System.Int32
    IL_001e:  stelem.ref
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.2
    IL_0021:  ldstr      ":\""
    IL_0026:  stelem.ref
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.3
    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance string antlr.Token::getText()
    IL_002f:  stelem.ref
    IL_0030:  ldloc.1
    IL_0031:  ldc.i4.4
    IL_0032:  ldstr      "\",<"
    IL_0037:  stelem.ref
    IL_0038:  ldloc.1
    IL_0039:  ldc.i4.5
    IL_003a:  ldarg.0
    IL_003b:  call       instance int32 antlr.Token::get_Type()
    IL_0040:  box        [mscorlib]System.Int32
    IL_0045:  stelem.ref
    IL_0046:  ldloc.1
    IL_0047:  ldc.i4.6
    IL_0048:  ldstr      ">,line="
    IL_004d:  stelem.ref
    IL_004e:  ldloc.1
    IL_004f:  ldc.i4.7
    IL_0050:  ldarg.0
    IL_0051:  ldfld      int32 antlr.CommonToken::line
    IL_0056:  box        [mscorlib]System.Int32
    IL_005b:  stelem.ref
    IL_005c:  ldloc.1
    IL_005d:  ldc.i4.8
    IL_005e:  ldstr      ",col="
    IL_0063:  stelem.ref
    IL_0064:  ldloc.1
    IL_0065:  ldc.i4.s   9
    IL_0067:  ldarg.0
    IL_0068:  ldfld      int32 antlr.CommonToken::col
    IL_006d:  box        [mscorlib]System.Int32
    IL_0072:  stelem.ref
    IL_0073:  ldloc.1
    IL_0074:  ldc.i4.s   10
    IL_0076:  ldstr      "]\n"
    IL_007b:  stelem.ref
    IL_007c:  ldloc.1
    IL_007d:  call       string [mscorlib]System.String::Concat(object[])
    IL_0082:  stloc.0
    IL_0083:  br.s       IL_0085

    IL_0085:  ldloc.0
    IL_0086:  ret
  } // end of method TokenWithIndex::ToString

} // end of class antlr.TokenWithIndex

.class interface public abstract auto ansi antlr.ASTVisitor
{
  .method public hidebysig newslot abstract virtual 
          instance void  visit(class antlr.collections.AST node) cil managed
  {
  } // end of method ASTVisitor::visit

} // end of class antlr.ASTVisitor

.class interface public abstract auto ansi antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
  } // end of method Listener::doneParsing

  .method public hidebysig newslot abstract virtual 
          instance void  refresh() cil managed
  {
  } // end of method Listener::refresh

} // end of class antlr.debug.Listener

.class interface public abstract auto ansi antlr.debug.ParserTokenListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  parserConsume(object source,
                                       class antlr.debug.TokenEventArgs e) cil managed
  {
  } // end of method ParserTokenListener::parserConsume

  .method public hidebysig newslot abstract virtual 
          instance void  parserLA(object source,
                                  class antlr.debug.TokenEventArgs e) cil managed
  {
  } // end of method ParserTokenListener::parserLA

} // end of class antlr.debug.ParserTokenListener

.class interface public abstract auto ansi antlr.debug.NewLineListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  hitNewLine(object source,
                                    class antlr.debug.NewLineEventArgs e) cil managed
  {
  } // end of method NewLineListener::hitNewLine

} // end of class antlr.debug.NewLineListener

.class interface public abstract auto ansi antlr.debug.IDebugSubject
{
  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_EnterRule

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_EnterRule

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_ExitRule

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_ExitRule

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_Done(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_Done

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_Done(class antlr.debug.TraceEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_Done

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_ErrorReported

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_ErrorReported

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_WarningReported

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_WarningReported

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_SemPredEvaluated

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_SemPredEvaluated

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_SynPredStarted

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_SynPredStarted

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_SynPredFailed

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_SynPredFailed

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::add_SynPredSucceeded

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed synchronized
  {
  } // end of method IDebugSubject::remove_SynPredSucceeded

  .event antlr.debug.TraceEventHandler EnterRule
  {
    .addon instance void antlr.debug.IDebugSubject::add_EnterRule(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.debug.IDebugSubject::remove_EnterRule(class antlr.debug.TraceEventHandler)
  } // end of event IDebugSubject::EnterRule
  .event antlr.debug.TraceEventHandler ExitRule
  {
    .removeon instance void antlr.debug.IDebugSubject::remove_ExitRule(class antlr.debug.TraceEventHandler)
    .addon instance void antlr.debug.IDebugSubject::add_ExitRule(class antlr.debug.TraceEventHandler)
  } // end of event IDebugSubject::ExitRule
  .event antlr.debug.TraceEventHandler Done
  {
    .addon instance void antlr.debug.IDebugSubject::add_Done(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.debug.IDebugSubject::remove_Done(class antlr.debug.TraceEventHandler)
  } // end of event IDebugSubject::Done
  .event antlr.debug.MessageEventHandler ErrorReported
  {
    .removeon instance void antlr.debug.IDebugSubject::remove_ErrorReported(class antlr.debug.MessageEventHandler)
    .addon instance void antlr.debug.IDebugSubject::add_ErrorReported(class antlr.debug.MessageEventHandler)
  } // end of event IDebugSubject::ErrorReported
  .event antlr.debug.MessageEventHandler WarningReported
  {
    .removeon instance void antlr.debug.IDebugSubject::remove_WarningReported(class antlr.debug.MessageEventHandler)
    .addon instance void antlr.debug.IDebugSubject::add_WarningReported(class antlr.debug.MessageEventHandler)
  } // end of event IDebugSubject::WarningReported
  .event antlr.debug.SemanticPredicateEventHandler SemPredEvaluated
  {
    .addon instance void antlr.debug.IDebugSubject::add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    .removeon instance void antlr.debug.IDebugSubject::remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
  } // end of event IDebugSubject::SemPredEvaluated
  .event antlr.debug.SyntacticPredicateEventHandler SynPredStarted
  {
    .removeon instance void antlr.debug.IDebugSubject::remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    .addon instance void antlr.debug.IDebugSubject::add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event IDebugSubject::SynPredStarted
  .event antlr.debug.SyntacticPredicateEventHandler SynPredFailed
  {
    .removeon instance void antlr.debug.IDebugSubject::remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    .addon instance void antlr.debug.IDebugSubject::add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event IDebugSubject::SynPredFailed
  .event antlr.debug.SyntacticPredicateEventHandler SynPredSucceeded
  {
    .addon instance void antlr.debug.IDebugSubject::add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    .removeon instance void antlr.debug.IDebugSubject::remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event IDebugSubject::SynPredSucceeded
} // end of class antlr.debug.IDebugSubject

.class public auto ansi serializable beforefieldinit antlr.ANTLRException
       extends [mscorlib]System.Exception
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Exception::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method ANTLRException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void [mscorlib]System.Exception::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method ANTLRException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s,
                               class [mscorlib]System.Exception inner) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void [mscorlib]System.Exception::.ctor(string,
                                                                         class [mscorlib]System.Exception)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method ANTLRException::.ctor

} // end of class antlr.ANTLRException

.class public auto ansi serializable beforefieldinit antlr.TokenStreamException
       extends antlr.ANTLRException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.ANTLRException::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TokenStreamException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method TokenStreamException::.ctor

} // end of class antlr.TokenStreamException

.class public auto ansi serializable beforefieldinit antlr.TokenStreamRecognitionException
       extends antlr.TokenStreamException
{
  .field public class antlr.RecognitionException recog
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.RecognitionException re) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0007:  call       instance void antlr.TokenStreamException::.ctor(string)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  stfld      class antlr.RecognitionException antlr.TokenStreamRecognitionException::recog
    IL_0015:  nop
    IL_0016:  ret
  } // end of method TokenStreamRecognitionException::.ctor

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.RecognitionException antlr.TokenStreamRecognitionException::recog
    IL_0007:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method TokenStreamRecognitionException::ToString

} // end of class antlr.TokenStreamRecognitionException

.class interface public abstract auto ansi antlr.TokenStream
{
  .method public hidebysig newslot abstract virtual 
          instance class antlr.IToken  nextToken() cil managed
  {
  } // end of method TokenStream::nextToken

} // end of class antlr.TokenStream

.class interface public abstract auto ansi antlr.debug.ICharScannerDebugSubject
       implements antlr.debug.IDebugSubject
{
  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_HitNewLine(class antlr.debug.NewLineEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_HitNewLine

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_HitNewLine(class antlr.debug.NewLineEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_HitNewLine

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_MatchedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_MatchedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_MatchedNotChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_MatchedNotChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MisMatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_MisMatchedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MisMatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_MisMatchedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MisMatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_MisMatchedNotChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MisMatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_MisMatchedNotChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_ConsumedChar(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_ConsumedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_ConsumedChar(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_ConsumedChar

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_CharLA(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::add_CharLA

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_CharLA(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method ICharScannerDebugSubject::remove_CharLA

  .event antlr.debug.NewLineEventHandler HitNewLine
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_HitNewLine(class antlr.debug.NewLineEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_HitNewLine(class antlr.debug.NewLineEventHandler)
  } // end of event ICharScannerDebugSubject::HitNewLine
  .event antlr.debug.MatchEventHandler MatchedChar
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_MatchedChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_MatchedChar(class antlr.debug.MatchEventHandler)
  } // end of event ICharScannerDebugSubject::MatchedChar
  .event antlr.debug.MatchEventHandler MatchedNotChar
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_MatchedNotChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_MatchedNotChar(class antlr.debug.MatchEventHandler)
  } // end of event ICharScannerDebugSubject::MatchedNotChar
  .event antlr.debug.MatchEventHandler MisMatchedChar
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_MisMatchedChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_MisMatchedChar(class antlr.debug.MatchEventHandler)
  } // end of event ICharScannerDebugSubject::MisMatchedChar
  .event antlr.debug.MatchEventHandler MisMatchedNotChar
  {
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
  } // end of event ICharScannerDebugSubject::MisMatchedNotChar
  .event antlr.debug.TokenEventHandler ConsumedChar
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_ConsumedChar(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_ConsumedChar(class antlr.debug.TokenEventHandler)
  } // end of event ICharScannerDebugSubject::ConsumedChar
  .event antlr.debug.TokenEventHandler CharLA
  {
    .removeon instance void antlr.debug.ICharScannerDebugSubject::remove_CharLA(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.debug.ICharScannerDebugSubject::add_CharLA(class antlr.debug.TokenEventHandler)
  } // end of event ICharScannerDebugSubject::CharLA
} // end of class antlr.debug.ICharScannerDebugSubject

.class public abstract auto ansi beforefieldinit antlr.CharScanner
       extends [mscorlib]System.Object
       implements antlr.TokenStream,
                  antlr.debug.ICharScannerDebugSubject,
                  antlr.debug.IDebugSubject
{
  .class auto ansi nested private beforefieldinit ReflectionBasedTokenCreator
         extends antlr.TokenCreator
  {
    .field private class antlr.CharScanner owner
    .field private string tokenTypeName
    .field private class [mscorlib]System.Type tokenTypeObject
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.TokenCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method ReflectionBasedTokenCreator::.ctor

    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class antlr.CharScanner owner,
                                 string tokenTypeName) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.TokenCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  stfld      class antlr.CharScanner antlr.CharScanner/ReflectionBasedTokenCreator::owner
      IL_000f:  ldarg.0
      IL_0010:  ldarg.2
      IL_0011:  call       instance void antlr.CharScanner/ReflectionBasedTokenCreator::SetTokenType(string)
      IL_0016:  nop
      IL_0017:  nop
      IL_0018:  ret
    } // end of method ReflectionBasedTokenCreator::.ctor

    .method private hidebysig instance void 
            SetTokenType(string tokenTypeName) cil managed
    {
      // 
      .maxstack  3
      .locals init (class [mscorlib]System.Reflection.Assembly V_0,
               class [mscorlib]System.Reflection.Assembly[] V_1,
               int32 V_2,
               bool V_3)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  ldarg.1
      IL_0003:  stfld      string antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeName
      IL_0008:  nop
      IL_0009:  call       class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
      IL_000e:  callvirt   instance class [mscorlib]System.Reflection.Assembly[] [mscorlib]System.AppDomain::GetAssemblies()
      IL_0013:  stloc.1
      IL_0014:  ldc.i4.0
      IL_0015:  stloc.2
      IL_0016:  br.s       IL_005c

      IL_0018:  ldloc.1
      IL_0019:  ldloc.2
      IL_001a:  ldelem.ref
      IL_001b:  stloc.0
      IL_001c:  nop
      .try
      {
        IL_001d:  nop
        IL_001e:  ldarg.0
        IL_001f:  ldloc.0
        IL_0020:  ldarg.1
        IL_0021:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Reflection.Assembly::GetType(string)
        IL_0026:  stfld      class [mscorlib]System.Type antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeObject
        IL_002b:  ldarg.0
        IL_002c:  ldfld      class [mscorlib]System.Type antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeObject
        IL_0031:  ldnull
        IL_0032:  ceq
        IL_0034:  stloc.3
        IL_0035:  ldloc.3
        IL_0036:  brtrue.s   IL_003b

        IL_0038:  nop
        IL_0039:  leave.s    IL_0066

        IL_003b:  nop
        IL_003c:  leave.s    IL_0056

      }  // end .try
      catch [mscorlib]System.Object 
      {
        IL_003e:  pop
        IL_003f:  nop
        IL_0040:  ldstr      "Unable to load Type for Token class '"
        IL_0045:  ldarg.1
        IL_0046:  ldstr      "'"
        IL_004b:  call       string [mscorlib]System.String::Concat(string,
                                                                    string,
                                                                    string)
        IL_0050:  newobj     instance void [mscorlib]System.TypeLoadException::.ctor(string)
        IL_0055:  throw

      }  // end handler
      IL_0056:  nop
      IL_0057:  nop
      IL_0058:  ldloc.2
      IL_0059:  ldc.i4.1
      IL_005a:  add
      IL_005b:  stloc.2
      IL_005c:  ldloc.2
      IL_005d:  ldloc.1
      IL_005e:  ldlen
      IL_005f:  conv.i4
      IL_0060:  clt
      IL_0062:  stloc.3
      IL_0063:  ldloc.3
      IL_0064:  brtrue.s   IL_0018

      IL_0066:  nop
      IL_0067:  ldarg.0
      IL_0068:  ldfld      class [mscorlib]System.Type antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeObject
      IL_006d:  ldnull
      IL_006e:  ceq
      IL_0070:  ldc.i4.0
      IL_0071:  ceq
      IL_0073:  stloc.3
      IL_0074:  ldloc.3
      IL_0075:  brtrue.s   IL_008d

      IL_0077:  ldstr      "Unable to load Type for Token class '"
      IL_007c:  ldarg.1
      IL_007d:  ldstr      "'"
      IL_0082:  call       string [mscorlib]System.String::Concat(string,
                                                                  string,
                                                                  string)
      IL_0087:  newobj     instance void [mscorlib]System.TypeLoadException::.ctor(string)
      IL_008c:  throw

      IL_008d:  ret
    } // end of method ReflectionBasedTokenCreator::SetTokenType

    .method public hidebysig specialname virtual 
            instance string  get_TokenTypeName() cil managed
    {
      // 
      .maxstack  1
      .locals init (string V_0)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  ldfld      string antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeName
      IL_0007:  stloc.0
      IL_0008:  br.s       IL_000a

      IL_000a:  ldloc.0
      IL_000b:  ret
    } // end of method ReflectionBasedTokenCreator::get_TokenTypeName

    .method public hidebysig virtual instance class antlr.IToken 
            Create() cil managed
    {
      // 
      .maxstack  1
      .locals init (class antlr.IToken V_0,
               class antlr.IToken V_1)
      IL_0000:  nop
      IL_0001:  ldnull
      IL_0002:  stloc.0
      .try
      {
        IL_0003:  nop
        IL_0004:  ldarg.0
        IL_0005:  ldfld      class [mscorlib]System.Type antlr.CharScanner/ReflectionBasedTokenCreator::tokenTypeObject
        IL_000a:  call       object [mscorlib]System.Activator::CreateInstance(class [mscorlib]System.Type)
        IL_000f:  castclass  antlr.Token
        IL_0014:  stloc.0
        IL_0015:  nop
        IL_0016:  leave.s    IL_001d

      }  // end .try
      catch [mscorlib]System.Object 
      {
        IL_0018:  pop
        IL_0019:  nop
        IL_001a:  nop
        IL_001b:  leave.s    IL_001d

      }  // end handler
      IL_001d:  nop
      IL_001e:  ldloc.0
      IL_001f:  stloc.1
      IL_0020:  br.s       IL_0022

      IL_0022:  ldloc.1
      IL_0023:  ret
    } // end of method ReflectionBasedTokenCreator::Create

    .property instance string TokenTypeName()
    {
      .get instance string antlr.CharScanner/ReflectionBasedTokenCreator::get_TokenTypeName()
    } // end of property ReflectionBasedTokenCreator::TokenTypeName
  } // end of class ReflectionBasedTokenCreator

  .field static assembly literal char NO_CHAR = char(0x0000)
  .field public static initonly char EOF_CHAR
  .field private class [System]System.ComponentModel.EventHandlerList events_
  .field static assembly initonly object EnterRuleEventKey
  .field static assembly initonly object ExitRuleEventKey
  .field static assembly initonly object DoneEventKey
  .field static assembly initonly object ReportErrorEventKey
  .field static assembly initonly object ReportWarningEventKey
  .field static assembly initonly object NewLineEventKey
  .field static assembly initonly object MatchEventKey
  .field static assembly initonly object MatchNotEventKey
  .field static assembly initonly object MisMatchEventKey
  .field static assembly initonly object MisMatchNotEventKey
  .field static assembly initonly object ConsumeEventKey
  .field static assembly initonly object LAEventKey
  .field static assembly initonly object SemPredEvaluatedEventKey
  .field static assembly initonly object SynPredStartedEventKey
  .field static assembly initonly object SynPredFailedEventKey
  .field static assembly initonly object SynPredSucceededEventKey
  .field famorassem class [mscorlib]System.Text.StringBuilder text
  .field family bool saveConsumedInput
  .field family class antlr.TokenCreator tokenCreator
  .field family char cached_LA1
  .field family char cached_LA2
  .field family bool caseSensitive
  .field family bool caseSensitiveLiterals
  .field family class [mscorlib]System.Collections.Hashtable literals
  .field famorassem int32 tabsize
  .field famorassem class antlr.IToken returnToken_
  .field famorassem class antlr.LexerSharedInputState inputState
  .field famorassem bool commitToPath
  .field famorassem int32 traceDepth
  .method famorassem hidebysig specialname 
          instance class [System]System.ComponentModel.EventHandlerList 
          get_Events() cil managed
  {
    // 
    .maxstack  1
    .locals init (class [System]System.ComponentModel.EventHandlerList V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::events_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::get_Events

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [System]System.ComponentModel.EventHandlerList::.ctor()
    IL_0006:  stfld      class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::events_
    IL_000b:  ldarg.0
    IL_000c:  ldc.i4.1
    IL_000d:  stfld      bool antlr.CharScanner::saveConsumedInput
    IL_0012:  ldarg.0
    IL_0013:  ldc.i4.1
    IL_0014:  stfld      bool antlr.CharScanner::caseSensitive
    IL_0019:  ldarg.0
    IL_001a:  ldc.i4.1
    IL_001b:  stfld      bool antlr.CharScanner::caseSensitiveLiterals
    IL_0020:  ldarg.0
    IL_0021:  ldc.i4.8
    IL_0022:  stfld      int32 antlr.CharScanner::tabsize
    IL_0027:  ldarg.0
    IL_0028:  ldnull
    IL_0029:  stfld      class antlr.IToken antlr.CharScanner::returnToken_
    IL_002e:  ldarg.0
    IL_002f:  ldc.i4.0
    IL_0030:  stfld      bool antlr.CharScanner::commitToPath
    IL_0035:  ldarg.0
    IL_0036:  ldc.i4.0
    IL_0037:  stfld      int32 antlr.CharScanner::traceDepth
    IL_003c:  ldarg.0
    IL_003d:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0042:  nop
    IL_0043:  nop
    IL_0044:  ldarg.0
    IL_0045:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_004a:  stfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_004f:  ldarg.0
    IL_0050:  newobj     instance void antlr.CommonToken/CommonTokenCreator::.ctor()
    IL_0055:  callvirt   instance void antlr.CharScanner::setTokenCreator(class antlr.TokenCreator)
    IL_005a:  nop
    IL_005b:  nop
    IL_005c:  ret
  } // end of method CharScanner::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.InputBuffer cb) cil managed
  {
    // 
    .maxstack  3
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.CharScanner::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  newobj     instance void antlr.LexerSharedInputState::.ctor(class antlr.InputBuffer)
    IL_000f:  stfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0014:  ldarg.0
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001b:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0020:  ldc.i4.2
    IL_0021:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0026:  stfld      char antlr.CharScanner::cached_LA2
    IL_002b:  ldarg.0
    IL_002c:  ldarg.0
    IL_002d:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0032:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0037:  ldc.i4.1
    IL_0038:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_003d:  stfld      char antlr.CharScanner::cached_LA1
    IL_0042:  nop
    IL_0043:  ret
  } // end of method CharScanner::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.LexerSharedInputState sharedState) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.CharScanner::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0015:  ldnull
    IL_0016:  ceq
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  brtrue.s   IL_004c

    IL_001c:  nop
    IL_001d:  ldarg.0
    IL_001e:  ldarg.0
    IL_001f:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0024:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0029:  ldc.i4.2
    IL_002a:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_002f:  stfld      char antlr.CharScanner::cached_LA2
    IL_0034:  ldarg.0
    IL_0035:  ldarg.0
    IL_0036:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_003b:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0040:  ldc.i4.1
    IL_0041:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0046:  stfld      char antlr.CharScanner::cached_LA1
    IL_004b:  nop
    IL_004c:  nop
    IL_004d:  ret
  } // end of method CharScanner::.ctor

  .method public hidebysig newslot specialname virtual final 
          instance void  add_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::EnterRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_EnterRule

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::EnterRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_EnterRule

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ExitRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_ExitRule

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ExitRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_ExitRule

  .method public hidebysig newslot specialname virtual final 
          instance void  add_Done(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::DoneEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_Done

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_Done(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::DoneEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_Done

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ReportErrorEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_ErrorReported

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ReportErrorEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_ErrorReported

  .method public hidebysig newslot specialname virtual final 
          instance void  add_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ReportWarningEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_WarningReported

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ReportWarningEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_WarningReported

  .method public hidebysig newslot specialname virtual final 
          instance void  add_HitNewLine(class antlr.debug.NewLineEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::NewLineEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_HitNewLine

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_HitNewLine(class antlr.debug.NewLineEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::NewLineEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_HitNewLine

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_MatchedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_MatchedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_MatchedNotChar

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_MatchedNotChar

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MisMatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MisMatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_MisMatchedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MisMatchedChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MisMatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_MisMatchedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MisMatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MisMatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_MisMatchedNotChar

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MisMatchedNotChar(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::MisMatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_MisMatchedNotChar

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ConsumedChar(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ConsumeEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_ConsumedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ConsumedChar(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::ConsumeEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_ConsumedChar

  .method public hidebysig newslot specialname virtual final 
          instance void  add_CharLA(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::LAEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_CharLA

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_CharLA(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::LAEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_CharLA

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SemPredEvaluatedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_SemPredEvaluated

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SemPredEvaluatedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_SemPredEvaluated

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredStartedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_SynPredStarted

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredStartedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_SynPredStarted

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredFailedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_SynPredFailed

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredFailedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_SynPredFailed

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredSucceededEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::add_SynPredSucceeded

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0007:  ldsfld     object antlr.CharScanner::SynPredSucceededEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method CharScanner::remove_SynPredSucceeded

  .method public hidebysig newslot virtual 
          instance class antlr.IToken  nextToken() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method CharScanner::nextToken

  .method public hidebysig newslot virtual 
          instance void  append(char c) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::saveConsumedInput
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_001d

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0015:  ldarg.1
    IL_0016:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_001b:  pop
    IL_001c:  nop
    IL_001d:  ret
  } // end of method CharScanner::append

  .method public hidebysig newslot virtual 
          instance void  append(string s) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::saveConsumedInput
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_001d

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0015:  ldarg.1
    IL_0016:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_001b:  pop
    IL_001c:  nop
    IL_001d:  ret
  } // end of method CharScanner::append

  .method public hidebysig newslot virtual 
          instance void  commit() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000c:  callvirt   instance void antlr.InputBuffer::commit()
    IL_0011:  nop
    IL_0012:  ret
  } // end of method CharScanner::commit

  .method public hidebysig newslot virtual 
          instance void  recover(class antlr.RecognitionException ex,
                                 class antlr.collections.impl.BitSet tokenSet) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.CharScanner::consume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.2
    IL_000a:  callvirt   instance void antlr.CharScanner::consumeUntil(class antlr.collections.impl.BitSet)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method CharScanner::recover

  .method public hidebysig newslot virtual 
          instance void  consume() cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_000c:  ldc.i4.0
    IL_000d:  ceq
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  brtrue.s   IL_0081

    IL_0016:  nop
    IL_0017:  ldarg.0
    IL_0018:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_001d:  ldc.i4.0
    IL_001e:  ceq
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  brtrue.s   IL_0035

    IL_0024:  nop
    IL_0025:  ldarg.0
    IL_0026:  ldarg.0
    IL_0027:  ldfld      char antlr.CharScanner::cached_LA1
    IL_002c:  callvirt   instance void antlr.CharScanner::append(char)
    IL_0031:  nop
    IL_0032:  nop
    IL_0033:  br.s       IL_004f

    IL_0035:  nop
    IL_0036:  ldarg.0
    IL_0037:  ldarg.0
    IL_0038:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_003d:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0042:  ldc.i4.1
    IL_0043:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0048:  callvirt   instance void antlr.CharScanner::append(char)
    IL_004d:  nop
    IL_004e:  nop
    IL_004f:  ldarg.0
    IL_0050:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0055:  ldc.i4.s   9
    IL_0057:  ceq
    IL_0059:  ldc.i4.0
    IL_005a:  ceq
    IL_005c:  stloc.0
    IL_005d:  ldloc.0
    IL_005e:  brtrue.s   IL_006b

    IL_0060:  nop
    IL_0061:  ldarg.0
    IL_0062:  callvirt   instance void antlr.CharScanner::tab()
    IL_0067:  nop
    IL_0068:  nop
    IL_0069:  br.s       IL_0080

    IL_006b:  nop
    IL_006c:  ldarg.0
    IL_006d:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0072:  dup
    IL_0073:  ldfld      int32 antlr.LexerSharedInputState::column
    IL_0078:  ldc.i4.1
    IL_0079:  add
    IL_007a:  stfld      int32 antlr.LexerSharedInputState::column
    IL_007f:  nop
    IL_0080:  nop
    IL_0081:  ldarg.0
    IL_0082:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_0087:  ldc.i4.0
    IL_0088:  ceq
    IL_008a:  stloc.0
    IL_008b:  ldloc.0
    IL_008c:  brtrue.s   IL_00bf

    IL_008e:  nop
    IL_008f:  ldarg.0
    IL_0090:  ldarg.0
    IL_0091:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0096:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_009b:  callvirt   instance char antlr.InputBuffer::consume()
    IL_00a0:  stfld      char antlr.CharScanner::cached_LA1
    IL_00a5:  ldarg.0
    IL_00a6:  ldarg.0
    IL_00a7:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_00ac:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_00b1:  ldc.i4.2
    IL_00b2:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_00b7:  stfld      char antlr.CharScanner::cached_LA2
    IL_00bc:  nop
    IL_00bd:  br.s       IL_00fa

    IL_00bf:  nop
    IL_00c0:  ldarg.0
    IL_00c1:  ldarg.0
    IL_00c2:  ldarg.0
    IL_00c3:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_00c8:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_00cd:  callvirt   instance char antlr.InputBuffer::consume()
    IL_00d2:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_00d7:  stfld      char antlr.CharScanner::cached_LA1
    IL_00dc:  ldarg.0
    IL_00dd:  ldarg.0
    IL_00de:  ldarg.0
    IL_00df:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_00e4:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_00e9:  ldc.i4.2
    IL_00ea:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_00ef:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_00f4:  stfld      char antlr.CharScanner::cached_LA2
    IL_00f9:  nop
    IL_00fa:  ret
  } // end of method CharScanner::consume

  .method public hidebysig newslot virtual 
          instance void  consumeUntil(int32 c) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  br.s       IL_000c

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  callvirt   instance void antlr.CharScanner::consume()
    IL_000a:  nop
    IL_000b:  nop
    IL_000c:  ldsfld     char antlr.CharScanner::EOF_CHAR
    IL_0011:  ldarg.0
    IL_0012:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0017:  beq.s      IL_0027

    IL_0019:  ldarg.1
    IL_001a:  ldarg.0
    IL_001b:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0020:  ceq
    IL_0022:  ldc.i4.0
    IL_0023:  ceq
    IL_0025:  br.s       IL_0028

    IL_0027:  ldc.i4.0
    IL_0028:  stloc.0
    IL_0029:  ldloc.0
    IL_002a:  brtrue.s   IL_0003

    IL_002c:  ret
  } // end of method CharScanner::consumeUntil

  .method public hidebysig newslot virtual 
          instance void  consumeUntil(class antlr.collections.impl.BitSet bset) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  br.s       IL_000c

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  callvirt   instance void antlr.CharScanner::consume()
    IL_000a:  nop
    IL_000b:  nop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0012:  ldsfld     char antlr.CharScanner::EOF_CHAR
    IL_0017:  beq.s      IL_002a

    IL_0019:  ldarg.1
    IL_001a:  ldarg.0
    IL_001b:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0020:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0025:  ldc.i4.0
    IL_0026:  ceq
    IL_0028:  br.s       IL_002b

    IL_002a:  ldc.i4.0
    IL_002b:  stloc.0
    IL_002c:  ldloc.0
    IL_002d:  brtrue.s   IL_0003

    IL_002f:  ret
  } // end of method CharScanner::consumeUntil

  .method public hidebysig newslot virtual 
          instance bool  getCaseSensitive() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getCaseSensitive

  .method public hidebysig instance bool 
          getCaseSensitiveLiterals() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::caseSensitiveLiterals
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getCaseSensitiveLiterals

  .method public hidebysig newslot virtual 
          instance int32  getColumn() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      int32 antlr.LexerSharedInputState::column
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method CharScanner::getColumn

  .method public hidebysig newslot virtual 
          instance void  setColumn(int32 c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldarg.1
    IL_0008:  stfld      int32 antlr.LexerSharedInputState::column
    IL_000d:  ret
  } // end of method CharScanner::setColumn

  .method public hidebysig newslot virtual 
          instance bool  getCommitToPath() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::commitToPath
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getCommitToPath

  .method public hidebysig newslot virtual 
          instance string  getFilename() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      string antlr.LexerSharedInputState::filename
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method CharScanner::getFilename

  .method public hidebysig newslot virtual 
          instance class antlr.InputBuffer 
          getInputBuffer() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.InputBuffer V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method CharScanner::getInputBuffer

  .method public hidebysig newslot virtual 
          instance class antlr.LexerSharedInputState 
          getInputState() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.LexerSharedInputState V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getInputState

  .method public hidebysig newslot virtual 
          instance void  setInputState(class antlr.LexerSharedInputState state) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0008:  ret
  } // end of method CharScanner::setInputState

  .method public hidebysig newslot virtual 
          instance int32  getLine() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      int32 antlr.LexerSharedInputState::line
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method CharScanner::getLine

  .method public hidebysig newslot virtual 
          instance string  getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0007:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method CharScanner::getText

  .method public hidebysig newslot virtual 
          instance class antlr.IToken  getTokenObject() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IToken antlr.CharScanner::returnToken_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getTokenObject

  .method public hidebysig newslot virtual 
          instance char  LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.1
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0016

    IL_000c:  nop
    IL_000d:  ldarg.0
    IL_000e:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0013:  stloc.0
    IL_0014:  br.s       IL_0068

    IL_0016:  ldarg.1
    IL_0017:  ldc.i4.2
    IL_0018:  ceq
    IL_001a:  ldc.i4.0
    IL_001b:  ceq
    IL_001d:  stloc.1
    IL_001e:  ldloc.1
    IL_001f:  brtrue.s   IL_002b

    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldfld      char antlr.CharScanner::cached_LA2
    IL_0028:  stloc.0
    IL_0029:  br.s       IL_0068

    IL_002b:  ldarg.0
    IL_002c:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_0031:  ldc.i4.0
    IL_0032:  ceq
    IL_0034:  stloc.1
    IL_0035:  ldloc.1
    IL_0036:  brtrue.s   IL_004d

    IL_0038:  nop
    IL_0039:  ldarg.0
    IL_003a:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_003f:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0044:  ldarg.1
    IL_0045:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_004a:  stloc.0
    IL_004b:  br.s       IL_0068

    IL_004d:  nop
    IL_004e:  ldarg.0
    IL_004f:  ldarg.0
    IL_0050:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0055:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_005a:  ldarg.1
    IL_005b:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0060:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_0065:  stloc.0
    IL_0066:  br.s       IL_0068

    IL_0068:  ldloc.0
    IL_0069:  ret
  } // end of method CharScanner::LA

  .method famorassem hidebysig newslot virtual 
          instance class antlr.IToken  makeToken(int32 t) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.IToken V_0,
             bool V_1,
             class antlr.IToken V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    .try
    {
      IL_0003:  nop
      IL_0004:  ldarg.0
      IL_0005:  ldfld      class antlr.TokenCreator antlr.CharScanner::tokenCreator
      IL_000a:  callvirt   instance class antlr.IToken antlr.TokenCreator::Create()
      IL_000f:  stloc.0
      IL_0010:  ldloc.0
      IL_0011:  ldnull
      IL_0012:  ceq
      IL_0014:  stloc.3
      IL_0015:  ldloc.3
      IL_0016:  brtrue.s   IL_0058

      IL_0018:  nop
      IL_0019:  ldloc.0
      IL_001a:  ldarg.1
      IL_001b:  callvirt   instance void antlr.IToken::set_Type(int32)
      IL_0020:  nop
      IL_0021:  ldloc.0
      IL_0022:  ldarg.0
      IL_0023:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0028:  ldfld      int32 antlr.LexerSharedInputState::tokenStartColumn
      IL_002d:  callvirt   instance void antlr.IToken::setColumn(int32)
      IL_0032:  nop
      IL_0033:  ldloc.0
      IL_0034:  ldarg.0
      IL_0035:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_003a:  ldfld      int32 antlr.LexerSharedInputState::tokenStartLine
      IL_003f:  callvirt   instance void antlr.IToken::setLine(int32)
      IL_0044:  nop
      IL_0045:  ldloc.0
      IL_0046:  ldarg.0
      IL_0047:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_004c:  ldfld      string antlr.LexerSharedInputState::filename
      IL_0051:  callvirt   instance void antlr.IToken::setFilename(string)
      IL_0056:  nop
      IL_0057:  nop
      IL_0058:  ldc.i4.1
      IL_0059:  stloc.1
      IL_005a:  nop
      IL_005b:  leave.s    IL_0064

    }  // end .try
    catch [mscorlib]System.Object 
    {
      IL_005d:  pop
      IL_005e:  nop
      IL_005f:  ldc.i4.0
      IL_0060:  stloc.1
      IL_0061:  nop
      IL_0062:  leave.s    IL_0064

    }  // end handler
    IL_0064:  nop
    IL_0065:  ldloc.1
    IL_0066:  stloc.3
    IL_0067:  ldloc.3
    IL_0068:  brtrue.s   IL_0093

    IL_006a:  nop
    IL_006b:  ldarg.0
    IL_006c:  ldstr      "Can't create Token object '"
    IL_0071:  ldarg.0
    IL_0072:  ldfld      class antlr.TokenCreator antlr.CharScanner::tokenCreator
    IL_0077:  callvirt   instance string antlr.TokenCreator::get_TokenTypeName()
    IL_007c:  ldstr      "'"
    IL_0081:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0086:  callvirt   instance void antlr.CharScanner::panic(string)
    IL_008b:  nop
    IL_008c:  ldsfld     class antlr.Token antlr.Token::badToken
    IL_0091:  stloc.0
    IL_0092:  nop
    IL_0093:  ldloc.0
    IL_0094:  stloc.2
    IL_0095:  br.s       IL_0097

    IL_0097:  ldloc.2
    IL_0098:  ret
  } // end of method CharScanner::makeToken

  .method public hidebysig newslot virtual 
          instance int32  mark() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000c:  callvirt   instance int32 antlr.InputBuffer::mark()
    IL_0011:  stloc.0
    IL_0012:  br.s       IL_0014

    IL_0014:  ldloc.0
    IL_0015:  ret
  } // end of method CharScanner::mark

  .method public hidebysig newslot virtual 
          instance void  match(char c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.CharScanner::match(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method CharScanner::match

  .method public hidebysig newslot virtual 
          instance void  match(int32 c) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0007:  ldarg.1
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0023

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0015:  ldarg.1
    IL_0016:  call       char [mscorlib]System.Convert::ToChar(int32)
    IL_001b:  ldc.i4.0
    IL_001c:  ldarg.0
    IL_001d:  newobj     instance void antlr.MismatchedCharException::.ctor(char,
                                                                            char,
                                                                            bool,
                                                                            class antlr.CharScanner)
    IL_0022:  throw

    IL_0023:  ldarg.0
    IL_0024:  callvirt   instance void antlr.CharScanner::consume()
    IL_0029:  nop
    IL_002a:  ret
  } // end of method CharScanner::match

  .method public hidebysig newslot virtual 
          instance void  match(class antlr.collections.impl.BitSet b) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0008:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_0021

    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0018:  ldarg.1
    IL_0019:  ldc.i4.0
    IL_001a:  ldarg.0
    IL_001b:  newobj     instance void antlr.MismatchedCharException::.ctor(char,
                                                                            class antlr.collections.impl.BitSet,
                                                                            bool,
                                                                            class antlr.CharScanner)
    IL_0020:  throw

    IL_0021:  ldarg.0
    IL_0022:  callvirt   instance void antlr.CharScanner::consume()
    IL_0027:  nop
    IL_0028:  ret
  } // end of method CharScanner::match

  .method public hidebysig newslot virtual 
          instance void  match(string s) cil managed
  {
    // 
    .maxstack  5
    .locals init (int32 V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0007:  stloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  stloc.1
    IL_000a:  br.s       IL_0042

    IL_000c:  nop
    IL_000d:  ldarg.0
    IL_000e:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0013:  ldarg.1
    IL_0014:  ldloc.1
    IL_0015:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_001a:  ceq
    IL_001c:  stloc.2
    IL_001d:  ldloc.2
    IL_001e:  brtrue.s   IL_0036

    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0027:  ldarg.1
    IL_0028:  ldloc.1
    IL_0029:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_002e:  ldc.i4.0
    IL_002f:  ldarg.0
    IL_0030:  newobj     instance void antlr.MismatchedCharException::.ctor(char,
                                                                            char,
                                                                            bool,
                                                                            class antlr.CharScanner)
    IL_0035:  throw

    IL_0036:  ldarg.0
    IL_0037:  callvirt   instance void antlr.CharScanner::consume()
    IL_003c:  nop
    IL_003d:  nop
    IL_003e:  ldloc.1
    IL_003f:  ldc.i4.1
    IL_0040:  add
    IL_0041:  stloc.1
    IL_0042:  ldloc.1
    IL_0043:  ldloc.0
    IL_0044:  clt
    IL_0046:  stloc.2
    IL_0047:  ldloc.2
    IL_0048:  brtrue.s   IL_000c

    IL_004a:  ret
  } // end of method CharScanner::match

  .method public hidebysig newslot virtual 
          instance void  matchNot(char c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.CharScanner::matchNot(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method CharScanner::matchNot

  .method public hidebysig newslot virtual 
          instance void  matchNot(int32 c) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0007:  ldarg.1
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_0026

    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0018:  ldarg.1
    IL_0019:  call       char [mscorlib]System.Convert::ToChar(int32)
    IL_001e:  ldc.i4.1
    IL_001f:  ldarg.0
    IL_0020:  newobj     instance void antlr.MismatchedCharException::.ctor(char,
                                                                            char,
                                                                            bool,
                                                                            class antlr.CharScanner)
    IL_0025:  throw

    IL_0026:  ldarg.0
    IL_0027:  callvirt   instance void antlr.CharScanner::consume()
    IL_002c:  nop
    IL_002d:  ret
  } // end of method CharScanner::matchNot

  .method public hidebysig newslot virtual 
          instance void  matchRange(int32 c1,
                                    int32 c2) cil managed
  {
    // 
    .maxstack  6
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0007:  ldarg.1
    IL_0008:  blt.s      IL_0018

    IL_000a:  ldarg.0
    IL_000b:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0010:  ldarg.2
    IL_0011:  cgt
    IL_0013:  ldc.i4.0
    IL_0014:  ceq
    IL_0016:  br.s       IL_0019

    IL_0018:  ldc.i4.0
    IL_0019:  stloc.0
    IL_001a:  ldloc.0
    IL_001b:  brtrue.s   IL_0038

    IL_001d:  nop
    IL_001e:  ldarg.0
    IL_001f:  ldfld      char antlr.CharScanner::cached_LA1
    IL_0024:  ldarg.1
    IL_0025:  call       char [mscorlib]System.Convert::ToChar(int32)
    IL_002a:  ldarg.2
    IL_002b:  call       char [mscorlib]System.Convert::ToChar(int32)
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.0
    IL_0032:  newobj     instance void antlr.MismatchedCharException::.ctor(char,
                                                                            char,
                                                                            char,
                                                                            bool,
                                                                            class antlr.CharScanner)
    IL_0037:  throw

    IL_0038:  ldarg.0
    IL_0039:  callvirt   instance void antlr.CharScanner::consume()
    IL_003e:  nop
    IL_003f:  ret
  } // end of method CharScanner::matchRange

  .method public hidebysig newslot virtual 
          instance void  matchRange(char c1,
                                    char c2) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  callvirt   instance void antlr.CharScanner::matchRange(int32,
                                                                     int32)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method CharScanner::matchRange

  .method public hidebysig newslot virtual 
          instance void  newline() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  dup
    IL_0008:  ldfld      int32 antlr.LexerSharedInputState::line
    IL_000d:  ldc.i4.1
    IL_000e:  add
    IL_000f:  stfld      int32 antlr.LexerSharedInputState::line
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001a:  ldc.i4.1
    IL_001b:  stfld      int32 antlr.LexerSharedInputState::column
    IL_0020:  ret
  } // end of method CharScanner::newline

  .method public hidebysig newslot virtual 
          instance void  tab() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance int32 antlr.CharScanner::getColumn()
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldc.i4.1
    IL_000a:  sub
    IL_000b:  ldarg.0
    IL_000c:  ldfld      int32 antlr.CharScanner::tabsize
    IL_0011:  div
    IL_0012:  ldc.i4.1
    IL_0013:  add
    IL_0014:  ldarg.0
    IL_0015:  ldfld      int32 antlr.CharScanner::tabsize
    IL_001a:  mul
    IL_001b:  ldc.i4.1
    IL_001c:  add
    IL_001d:  stloc.1
    IL_001e:  ldarg.0
    IL_001f:  ldloc.1
    IL_0020:  callvirt   instance void antlr.CharScanner::setColumn(int32)
    IL_0025:  nop
    IL_0026:  ret
  } // end of method CharScanner::tab

  .method public hidebysig newslot virtual 
          instance void  setTabSize(int32 size) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.CharScanner::tabsize
    IL_0008:  ret
  } // end of method CharScanner::setTabSize

  .method public hidebysig newslot virtual 
          instance int32  getTabSize() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.CharScanner::tabsize
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CharScanner::getTabSize

  .method public hidebysig newslot virtual 
          instance void  panic() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      ""
    IL_0007:  callvirt   instance void antlr.CharScanner::panic(string)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method CharScanner::panic

  .method public hidebysig newslot virtual 
          instance void  panic(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldstr      "CharScanner::panic: "
    IL_0006:  ldarg.1
    IL_0007:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_000c:  newobj     instance void antlr.ANTLRPanicException::.ctor(string)
    IL_0011:  throw
  } // end of method CharScanner::panic

  .method public hidebysig newslot virtual 
          instance void  reportError(class antlr.RecognitionException ex) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method CharScanner::reportError

  .method public hidebysig newslot virtual 
          instance void  reportError(string s) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_002b

    IL_0011:  nop
    IL_0012:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0017:  ldstr      "error: "
    IL_001c:  ldarg.1
    IL_001d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0022:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0027:  nop
    IL_0028:  nop
    IL_0029:  br.s       IL_0049

    IL_002b:  nop
    IL_002c:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_0037:  ldstr      ": error: "
    IL_003c:  ldarg.1
    IL_003d:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0042:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0047:  nop
    IL_0048:  nop
    IL_0049:  ret
  } // end of method CharScanner::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(string s) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_002b

    IL_0011:  nop
    IL_0012:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0017:  ldstr      "warning: "
    IL_001c:  ldarg.1
    IL_001d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0022:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0027:  nop
    IL_0028:  nop
    IL_0029:  br.s       IL_0049

    IL_002b:  nop
    IL_002c:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_0037:  ldstr      ": warning: "
    IL_003c:  ldarg.1
    IL_003d:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0042:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0047:  nop
    IL_0048:  nop
    IL_0049:  ret
  } // end of method CharScanner::reportWarning

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0040

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0016:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_001b:  ldc.i4.2
    IL_001c:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0021:  stfld      char antlr.CharScanner::cached_LA2
    IL_0026:  ldarg.0
    IL_0027:  ldarg.0
    IL_0028:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_002d:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0032:  ldc.i4.1
    IL_0033:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0038:  stfld      char antlr.CharScanner::cached_LA1
    IL_003d:  nop
    IL_003e:  br.s       IL_007c

    IL_0040:  nop
    IL_0041:  ldarg.0
    IL_0042:  ldarg.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0049:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_004e:  ldc.i4.2
    IL_004f:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0054:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_0059:  stfld      char antlr.CharScanner::cached_LA2
    IL_005e:  ldarg.0
    IL_005f:  ldarg.0
    IL_0060:  ldarg.0
    IL_0061:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0066:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_006b:  ldc.i4.1
    IL_006c:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0071:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_0076:  stfld      char antlr.CharScanner::cached_LA1
    IL_007b:  nop
    IL_007c:  ret
  } // end of method CharScanner::refresh

  .method public hidebysig newslot virtual 
          instance void  resetState(class antlr.InputBuffer ib) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0007:  ldc.i4.0
    IL_0008:  callvirt   instance void [mscorlib]System.Text.StringBuilder::set_Length(int32)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.0
    IL_0010:  stfld      int32 antlr.CharScanner::traceDepth
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001b:  ldarg.1
    IL_001c:  callvirt   instance void antlr.LexerSharedInputState::resetInput(class antlr.InputBuffer)
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  callvirt   instance void antlr.CharScanner::refresh()
    IL_0028:  nop
    IL_0029:  ret
  } // end of method CharScanner::resetState

  .method public hidebysig instance void 
          resetState(class [mscorlib]System.IO.Stream s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  newobj     instance void antlr.ByteBuffer::.ctor(class [mscorlib]System.IO.Stream)
    IL_0008:  callvirt   instance void antlr.CharScanner::resetState(class antlr.InputBuffer)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method CharScanner::resetState

  .method public hidebysig instance void 
          resetState(class [mscorlib]System.IO.TextReader tr) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  newobj     instance void antlr.CharBuffer::.ctor(class [mscorlib]System.IO.TextReader)
    IL_0008:  callvirt   instance void antlr.CharScanner::resetState(class antlr.InputBuffer)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method CharScanner::resetState

  .method public hidebysig newslot virtual 
          instance void  resetText() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0007:  ldc.i4.0
    IL_0008:  callvirt   instance void [mscorlib]System.Text.StringBuilder::set_Length(int32)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001a:  ldfld      int32 antlr.LexerSharedInputState::column
    IL_001f:  stfld      int32 antlr.LexerSharedInputState::tokenStartColumn
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0030:  ldfld      int32 antlr.LexerSharedInputState::line
    IL_0035:  stfld      int32 antlr.LexerSharedInputState::tokenStartLine
    IL_003a:  ret
  } // end of method CharScanner::resetText

  .method public hidebysig newslot virtual 
          instance void  rewind(int32 pos) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void antlr.InputBuffer::rewind(int32)
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_0019:  ldc.i4.0
    IL_001a:  ceq
    IL_001c:  stloc.0
    IL_001d:  ldloc.0
    IL_001e:  brtrue.s   IL_0052

    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldarg.0
    IL_0023:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0028:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_002d:  ldc.i4.2
    IL_002e:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0033:  stfld      char antlr.CharScanner::cached_LA2
    IL_0038:  ldarg.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_003f:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0044:  ldc.i4.1
    IL_0045:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_004a:  stfld      char antlr.CharScanner::cached_LA1
    IL_004f:  nop
    IL_0050:  br.s       IL_008e

    IL_0052:  nop
    IL_0053:  ldarg.0
    IL_0054:  ldarg.0
    IL_0055:  ldarg.0
    IL_0056:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_005b:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0060:  ldc.i4.2
    IL_0061:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0066:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_006b:  stfld      char antlr.CharScanner::cached_LA2
    IL_0070:  ldarg.0
    IL_0071:  ldarg.0
    IL_0072:  ldarg.0
    IL_0073:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0078:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_007d:  ldc.i4.1
    IL_007e:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0083:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_0088:  stfld      char antlr.CharScanner::cached_LA1
    IL_008d:  nop
    IL_008e:  ret
  } // end of method CharScanner::rewind

  .method public hidebysig newslot virtual 
          instance void  setCaseSensitive(bool t) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.CharScanner::caseSensitive
    IL_0008:  ldarg.0
    IL_0009:  ldfld      bool antlr.CharScanner::caseSensitive
    IL_000e:  ldc.i4.0
    IL_000f:  ceq
    IL_0011:  stloc.0
    IL_0012:  ldloc.0
    IL_0013:  brtrue.s   IL_0047

    IL_0015:  nop
    IL_0016:  ldarg.0
    IL_0017:  ldarg.0
    IL_0018:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001d:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0022:  ldc.i4.2
    IL_0023:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0028:  stfld      char antlr.CharScanner::cached_LA2
    IL_002d:  ldarg.0
    IL_002e:  ldarg.0
    IL_002f:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0034:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0039:  ldc.i4.1
    IL_003a:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_003f:  stfld      char antlr.CharScanner::cached_LA1
    IL_0044:  nop
    IL_0045:  br.s       IL_0083

    IL_0047:  nop
    IL_0048:  ldarg.0
    IL_0049:  ldarg.0
    IL_004a:  ldarg.0
    IL_004b:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0050:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0055:  ldc.i4.2
    IL_0056:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_005b:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_0060:  stfld      char antlr.CharScanner::cached_LA2
    IL_0065:  ldarg.0
    IL_0066:  ldarg.0
    IL_0067:  ldarg.0
    IL_0068:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_006d:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0072:  ldc.i4.1
    IL_0073:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0078:  callvirt   instance char antlr.CharScanner::toLower(int32)
    IL_007d:  stfld      char antlr.CharScanner::cached_LA1
    IL_0082:  nop
    IL_0083:  ret
  } // end of method CharScanner::setCaseSensitive

  .method public hidebysig newslot virtual 
          instance void  setCommitToPath(bool commit) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.CharScanner::commitToPath
    IL_0008:  ret
  } // end of method CharScanner::setCommitToPath

  .method public hidebysig newslot virtual 
          instance void  setFilename(string f) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldarg.1
    IL_0008:  stfld      string antlr.LexerSharedInputState::filename
    IL_000d:  ret
  } // end of method CharScanner::setFilename

  .method public hidebysig newslot virtual 
          instance void  setLine(int32 line) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_0007:  ldarg.1
    IL_0008:  stfld      int32 antlr.LexerSharedInputState::line
    IL_000d:  ret
  } // end of method CharScanner::setLine

  .method public hidebysig newslot virtual 
          instance void  setText(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.CharScanner::resetText()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0014:  pop
    IL_0015:  ret
  } // end of method CharScanner::setText

  .method public hidebysig newslot virtual 
          instance void  setTokenObjectClass(string cl) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldarg.1
    IL_0004:  newobj     instance void antlr.CharScanner/ReflectionBasedTokenCreator::.ctor(class antlr.CharScanner,
                                                                                            string)
    IL_0009:  stfld      class antlr.TokenCreator antlr.CharScanner::tokenCreator
    IL_000e:  ret
  } // end of method CharScanner::setTokenObjectClass

  .method public hidebysig newslot virtual 
          instance void  setTokenCreator(class antlr.TokenCreator tokenCreator) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.TokenCreator antlr.CharScanner::tokenCreator
    IL_0008:  ret
  } // end of method CharScanner::setTokenCreator

  .method public hidebysig newslot virtual 
          instance int32  testLiteralsTable(int32 ttype) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0,
             object V_1,
             int32 V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0007:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000c:  stloc.0
    IL_000d:  ldloc.0
    IL_000e:  brfalse.s  IL_0020

    IL_0010:  ldloc.0
    IL_0011:  ldsfld     string [mscorlib]System.String::Empty
    IL_0016:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_001b:  ldc.i4.0
    IL_001c:  ceq
    IL_001e:  br.s       IL_0021

    IL_0020:  ldc.i4.0
    IL_0021:  stloc.3
    IL_0022:  ldloc.3
    IL_0023:  brtrue.s   IL_0029

    IL_0025:  ldarg.1
    IL_0026:  stloc.2
    IL_0027:  br.s       IL_0046

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.CharScanner::literals
    IL_0030:  ldloc.0
    IL_0031:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_Item(object)
    IL_0036:  stloc.1
    IL_0037:  ldloc.1
    IL_0038:  brfalse.s  IL_0042

    IL_003a:  ldloc.1
    IL_003b:  unbox.any  [mscorlib]System.Int32
    IL_0040:  br.s       IL_0043

    IL_0042:  ldarg.1
    IL_0043:  stloc.2
    IL_0044:  br.s       IL_0046

    IL_0046:  ldloc.2
    IL_0047:  ret
  } // end of method CharScanner::testLiteralsTable

  .method public hidebysig newslot virtual 
          instance int32  testLiteralsTable(string someText,
                                            int32 ttype) cil managed
  {
    // 
    .maxstack  2
    .locals init (object V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_0014

    IL_0004:  ldarg.1
    IL_0005:  ldsfld     string [mscorlib]System.String::Empty
    IL_000a:  call       bool [mscorlib]System.String::op_Equality(string,
                                                                   string)
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  br.s       IL_0015

    IL_0014:  ldc.i4.0
    IL_0015:  stloc.2
    IL_0016:  ldloc.2
    IL_0017:  brtrue.s   IL_001d

    IL_0019:  ldarg.2
    IL_001a:  stloc.1
    IL_001b:  br.s       IL_003a

    IL_001d:  nop
    IL_001e:  ldarg.0
    IL_001f:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.CharScanner::literals
    IL_0024:  ldarg.1
    IL_0025:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_Item(object)
    IL_002a:  stloc.0
    IL_002b:  ldloc.0
    IL_002c:  brfalse.s  IL_0036

    IL_002e:  ldloc.0
    IL_002f:  unbox.any  [mscorlib]System.Int32
    IL_0034:  br.s       IL_0037

    IL_0036:  ldarg.2
    IL_0037:  stloc.1
    IL_0038:  br.s       IL_003a

    IL_003a:  ldloc.1
    IL_003b:  ret
  } // end of method CharScanner::testLiteralsTable

  .method public hidebysig newslot virtual 
          instance char  toLower(int32 c) cil managed
  {
    // 
    .maxstack  2
    .locals init (char V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  call       char [mscorlib]System.Convert::ToChar(int32)
    IL_0007:  call       class [mscorlib]System.Globalization.CultureInfo [mscorlib]System.Globalization.CultureInfo::get_InvariantCulture()
    IL_000c:  call       char [mscorlib]System.Char::ToLower(char,
                                                             class [mscorlib]System.Globalization.CultureInfo)
    IL_0011:  stloc.0
    IL_0012:  br.s       IL_0014

    IL_0014:  ldloc.0
    IL_0015:  ret
  } // end of method CharScanner::toLower

  .method public hidebysig newslot virtual 
          instance void  traceIndent() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0019

    IL_0005:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000a:  ldstr      " "
    IL_000f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0014:  nop
    IL_0015:  ldloc.0
    IL_0016:  ldc.i4.1
    IL_0017:  add
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  ldarg.0
    IL_001b:  ldfld      int32 antlr.CharScanner::traceDepth
    IL_0020:  clt
    IL_0022:  stloc.1
    IL_0023:  ldloc.1
    IL_0024:  brtrue.s   IL_0005

    IL_0026:  ret
  } // end of method CharScanner::traceIndent

  .method public hidebysig newslot virtual 
          instance void  traceIn(string rname) cil managed
  {
    // 
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.CharScanner::traceDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.CharScanner::traceDepth
    IL_000f:  ldarg.0
    IL_0010:  callvirt   instance void antlr.CharScanner::traceIndent()
    IL_0015:  nop
    IL_0016:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_001b:  ldc.i4.4
    IL_001c:  newarr     [mscorlib]System.Object
    IL_0021:  stloc.0
    IL_0022:  ldloc.0
    IL_0023:  ldc.i4.0
    IL_0024:  ldstr      "> lexer "
    IL_0029:  stelem.ref
    IL_002a:  ldloc.0
    IL_002b:  ldc.i4.1
    IL_002c:  ldarg.1
    IL_002d:  stelem.ref
    IL_002e:  ldloc.0
    IL_002f:  ldc.i4.2
    IL_0030:  ldstr      "; c=="
    IL_0035:  stelem.ref
    IL_0036:  ldloc.0
    IL_0037:  ldc.i4.3
    IL_0038:  ldarg.0
    IL_0039:  ldc.i4.1
    IL_003a:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_003f:  box        [mscorlib]System.Char
    IL_0044:  stelem.ref
    IL_0045:  ldloc.0
    IL_0046:  call       string [mscorlib]System.String::Concat(object[])
    IL_004b:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0050:  nop
    IL_0051:  ret
  } // end of method CharScanner::traceIn

  .method public hidebysig newslot virtual 
          instance void  traceOut(string rname) cil managed
  {
    // 
    .maxstack  5
    .locals init (object[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.CharScanner::traceIndent()
    IL_0007:  nop
    IL_0008:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000d:  ldc.i4.4
    IL_000e:  newarr     [mscorlib]System.Object
    IL_0013:  stloc.0
    IL_0014:  ldloc.0
    IL_0015:  ldc.i4.0
    IL_0016:  ldstr      "< lexer "
    IL_001b:  stelem.ref
    IL_001c:  ldloc.0
    IL_001d:  ldc.i4.1
    IL_001e:  ldarg.1
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.2
    IL_0022:  ldstr      "; c=="
    IL_0027:  stelem.ref
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.3
    IL_002a:  ldarg.0
    IL_002b:  ldc.i4.1
    IL_002c:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_0031:  box        [mscorlib]System.Char
    IL_0036:  stelem.ref
    IL_0037:  ldloc.0
    IL_0038:  call       string [mscorlib]System.String::Concat(object[])
    IL_003d:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0042:  nop
    IL_0043:  ldarg.0
    IL_0044:  dup
    IL_0045:  ldfld      int32 antlr.CharScanner::traceDepth
    IL_004a:  ldc.i4.1
    IL_004b:  sub
    IL_004c:  stfld      int32 antlr.CharScanner::traceDepth
    IL_0051:  ret
  } // end of method CharScanner::traceOut

  .method public hidebysig newslot virtual 
          instance void  uponEOF() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method CharScanner::uponEOF

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  1
    IL_0000:  ldc.i4     0xffff
    IL_0005:  stsfld     char antlr.CharScanner::EOF_CHAR
    IL_000a:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_000f:  stsfld     object antlr.CharScanner::EnterRuleEventKey
    IL_0014:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0019:  stsfld     object antlr.CharScanner::ExitRuleEventKey
    IL_001e:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0023:  stsfld     object antlr.CharScanner::DoneEventKey
    IL_0028:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_002d:  stsfld     object antlr.CharScanner::ReportErrorEventKey
    IL_0032:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0037:  stsfld     object antlr.CharScanner::ReportWarningEventKey
    IL_003c:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0041:  stsfld     object antlr.CharScanner::NewLineEventKey
    IL_0046:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_004b:  stsfld     object antlr.CharScanner::MatchEventKey
    IL_0050:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0055:  stsfld     object antlr.CharScanner::MatchNotEventKey
    IL_005a:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_005f:  stsfld     object antlr.CharScanner::MisMatchEventKey
    IL_0064:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0069:  stsfld     object antlr.CharScanner::MisMatchNotEventKey
    IL_006e:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0073:  stsfld     object antlr.CharScanner::ConsumeEventKey
    IL_0078:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_007d:  stsfld     object antlr.CharScanner::LAEventKey
    IL_0082:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0087:  stsfld     object antlr.CharScanner::SemPredEvaluatedEventKey
    IL_008c:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0091:  stsfld     object antlr.CharScanner::SynPredStartedEventKey
    IL_0096:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_009b:  stsfld     object antlr.CharScanner::SynPredFailedEventKey
    IL_00a0:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_00a5:  stsfld     object antlr.CharScanner::SynPredSucceededEventKey
    IL_00aa:  ret
  } // end of method CharScanner::.cctor

  .event antlr.debug.TraceEventHandler EnterRule
  {
    .addon instance void antlr.CharScanner::add_EnterRule(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.CharScanner::remove_EnterRule(class antlr.debug.TraceEventHandler)
  } // end of event CharScanner::EnterRule
  .event antlr.debug.TraceEventHandler ExitRule
  {
    .addon instance void antlr.CharScanner::add_ExitRule(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.CharScanner::remove_ExitRule(class antlr.debug.TraceEventHandler)
  } // end of event CharScanner::ExitRule
  .event antlr.debug.TraceEventHandler Done
  {
    .removeon instance void antlr.CharScanner::remove_Done(class antlr.debug.TraceEventHandler)
    .addon instance void antlr.CharScanner::add_Done(class antlr.debug.TraceEventHandler)
  } // end of event CharScanner::Done
  .event antlr.debug.MessageEventHandler ErrorReported
  {
    .addon instance void antlr.CharScanner::add_ErrorReported(class antlr.debug.MessageEventHandler)
    .removeon instance void antlr.CharScanner::remove_ErrorReported(class antlr.debug.MessageEventHandler)
  } // end of event CharScanner::ErrorReported
  .event antlr.debug.MessageEventHandler WarningReported
  {
    .removeon instance void antlr.CharScanner::remove_WarningReported(class antlr.debug.MessageEventHandler)
    .addon instance void antlr.CharScanner::add_WarningReported(class antlr.debug.MessageEventHandler)
  } // end of event CharScanner::WarningReported
  .event antlr.debug.NewLineEventHandler HitNewLine
  {
    .addon instance void antlr.CharScanner::add_HitNewLine(class antlr.debug.NewLineEventHandler)
    .removeon instance void antlr.CharScanner::remove_HitNewLine(class antlr.debug.NewLineEventHandler)
  } // end of event CharScanner::HitNewLine
  .event antlr.debug.MatchEventHandler MatchedChar
  {
    .addon instance void antlr.CharScanner::add_MatchedChar(class antlr.debug.MatchEventHandler)
    .removeon instance void antlr.CharScanner::remove_MatchedChar(class antlr.debug.MatchEventHandler)
  } // end of event CharScanner::MatchedChar
  .event antlr.debug.MatchEventHandler MatchedNotChar
  {
    .removeon instance void antlr.CharScanner::remove_MatchedNotChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.CharScanner::add_MatchedNotChar(class antlr.debug.MatchEventHandler)
  } // end of event CharScanner::MatchedNotChar
  .event antlr.debug.MatchEventHandler MisMatchedChar
  {
    .removeon instance void antlr.CharScanner::remove_MisMatchedChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.CharScanner::add_MisMatchedChar(class antlr.debug.MatchEventHandler)
  } // end of event CharScanner::MisMatchedChar
  .event antlr.debug.MatchEventHandler MisMatchedNotChar
  {
    .removeon instance void antlr.CharScanner::remove_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.CharScanner::add_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
  } // end of event CharScanner::MisMatchedNotChar
  .event antlr.debug.TokenEventHandler ConsumedChar
  {
    .removeon instance void antlr.CharScanner::remove_ConsumedChar(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.CharScanner::add_ConsumedChar(class antlr.debug.TokenEventHandler)
  } // end of event CharScanner::ConsumedChar
  .event antlr.debug.TokenEventHandler CharLA
  {
    .removeon instance void antlr.CharScanner::remove_CharLA(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.CharScanner::add_CharLA(class antlr.debug.TokenEventHandler)
  } // end of event CharScanner::CharLA
  .event antlr.debug.SemanticPredicateEventHandler SemPredEvaluated
  {
    .removeon instance void antlr.CharScanner::remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    .addon instance void antlr.CharScanner::add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
  } // end of event CharScanner::SemPredEvaluated
  .event antlr.debug.SyntacticPredicateEventHandler SynPredStarted
  {
    .addon instance void antlr.CharScanner::add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    .removeon instance void antlr.CharScanner::remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event CharScanner::SynPredStarted
  .event antlr.debug.SyntacticPredicateEventHandler SynPredFailed
  {
    .removeon instance void antlr.CharScanner::remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    .addon instance void antlr.CharScanner::add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event CharScanner::SynPredFailed
  .event antlr.debug.SyntacticPredicateEventHandler SynPredSucceeded
  {
    .addon instance void antlr.CharScanner::add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    .removeon instance void antlr.CharScanner::remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event CharScanner::SynPredSucceeded
  .property instance class [System]System.ComponentModel.EventHandlerList
          Events()
  {
    .get instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
  } // end of property CharScanner::Events
} // end of class antlr.CharScanner

.class interface public abstract auto ansi antlr.collections.AST
       implements [mscorlib]System.ICloneable
{
  .method public hidebysig newslot abstract virtual 
          instance void  addChild(class antlr.collections.AST c) cil managed
  {
  } // end of method AST::addChild

  .method public hidebysig newslot abstract virtual 
          instance bool  Equals(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::Equals

  .method public hidebysig newslot abstract virtual 
          instance bool  EqualsList(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::EqualsList

  .method public hidebysig newslot abstract virtual 
          instance bool  EqualsListPartial(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::EqualsListPartial

  .method public hidebysig newslot abstract virtual 
          instance bool  EqualsTree(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::EqualsTree

  .method public hidebysig newslot abstract virtual 
          instance bool  EqualsTreePartial(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::EqualsTreePartial

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAll(class antlr.collections.AST tree) cil managed
  {
  } // end of method AST::findAll

  .method public hidebysig newslot abstract virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAllPartial(class antlr.collections.AST subtree) cil managed
  {
  } // end of method AST::findAllPartial

  .method public hidebysig newslot abstract virtual 
          instance class antlr.collections.AST 
          getFirstChild() cil managed
  {
  } // end of method AST::getFirstChild

  .method public hidebysig newslot abstract virtual 
          instance class antlr.collections.AST 
          getNextSibling() cil managed
  {
  } // end of method AST::getNextSibling

  .method public hidebysig newslot abstract virtual 
          instance string  getText() cil managed
  {
  } // end of method AST::getText

  .method public hidebysig newslot specialname abstract virtual 
          instance int32  get_Type() cil managed
  {
  } // end of method AST::get_Type

  .method public hidebysig newslot specialname abstract virtual 
          instance void  set_Type(int32 'value') cil managed
  {
  } // end of method AST::set_Type

  .method public hidebysig newslot abstract virtual 
          instance int32  getNumberOfChildren() cil managed
  {
  } // end of method AST::getNumberOfChildren

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(int32 t,
                                    string txt) cil managed
  {
  } // end of method AST::initialize

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(class antlr.collections.AST t) cil managed
  {
  } // end of method AST::initialize

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(class antlr.IToken t) cil managed
  {
  } // end of method AST::initialize

  .method public hidebysig newslot abstract virtual 
          instance void  setFirstChild(class antlr.collections.AST c) cil managed
  {
  } // end of method AST::setFirstChild

  .method public hidebysig newslot abstract virtual 
          instance void  setNextSibling(class antlr.collections.AST n) cil managed
  {
  } // end of method AST::setNextSibling

  .method public hidebysig newslot abstract virtual 
          instance void  setText(string text) cil managed
  {
  } // end of method AST::setText

  .method public hidebysig newslot abstract virtual 
          instance void  setType(int32 ttype) cil managed
  {
  } // end of method AST::setType

  .method public hidebysig newslot abstract virtual 
          instance string  ToString() cil managed
  {
  } // end of method AST::ToString

  .method public hidebysig newslot abstract virtual 
          instance string  ToStringList() cil managed
  {
  } // end of method AST::ToStringList

  .method public hidebysig newslot abstract virtual 
          instance string  ToStringTree() cil managed
  {
  } // end of method AST::ToStringTree

  .property instance int32 Type()
  {
    .set instance void antlr.collections.AST::set_Type(int32)
    .get instance int32 antlr.collections.AST::get_Type()
  } // end of property AST::Type
} // end of class antlr.collections.AST

.class public auto ansi beforefieldinit antlr.ASTNULLType
       extends [mscorlib]System.Object
       implements antlr.collections.AST,
                  [mscorlib]System.ICloneable
{
  .method public hidebysig newslot virtual 
          instance void  addChild(class antlr.collections.AST c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::addChild

  .method public hidebysig newslot virtual 
          instance bool  Equals(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::Equals

  .method public hidebysig newslot virtual 
          instance bool  EqualsList(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::EqualsList

  .method public hidebysig newslot virtual 
          instance bool  EqualsListPartial(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::EqualsListPartial

  .method public hidebysig newslot virtual 
          instance bool  EqualsTree(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::EqualsTree

  .method public hidebysig newslot virtual 
          instance bool  EqualsTreePartial(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::EqualsTreePartial

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAll(class antlr.collections.AST tree) cil managed
  {
    // 
    .maxstack  1
    .locals init (class [mscorlib]System.Collections.IEnumerator V_0)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::findAll

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAllPartial(class antlr.collections.AST subtree) cil managed
  {
    // 
    .maxstack  1
    .locals init (class [mscorlib]System.Collections.IEnumerator V_0)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::findAllPartial

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getFirstChild() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::getFirstChild

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getNextSibling() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::getNextSibling

  .method public hidebysig newslot virtual 
          instance string  getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      "<ASTNULL>"
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method ASTNULLType::getText

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Type() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.3
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::get_Type

  .method public hidebysig newslot specialname virtual 
          instance void  set_Type(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::set_Type

  .method public hidebysig newslot virtual final 
          instance int32  getNumberOfChildren() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method ASTNULLType::getNumberOfChildren

  .method public hidebysig newslot virtual 
          instance void  initialize(int32 t,
                                    string txt) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::initialize

  .method public hidebysig newslot virtual 
          instance void  initialize(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::initialize

  .method public hidebysig newslot virtual 
          instance void  initialize(class antlr.IToken t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::initialize

  .method public hidebysig newslot virtual 
          instance void  setFirstChild(class antlr.collections.AST c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::setFirstChild

  .method public hidebysig newslot virtual 
          instance void  setNextSibling(class antlr.collections.AST n) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::setNextSibling

  .method public hidebysig newslot virtual 
          instance void  setText(string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ASTNULLType::setText

  .method public hidebysig newslot virtual 
          instance void  setType(int32 ttype) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.ASTNULLType::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method ASTNULLType::setType

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.ASTNULLType::getText()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ASTNULLType::ToString

  .method public hidebysig newslot virtual 
          instance string  ToStringList() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.ASTNULLType::getText()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ASTNULLType::ToStringList

  .method public hidebysig newslot virtual 
          instance string  ToStringTree() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.ASTNULLType::getText()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ASTNULLType::ToStringTree

  .method public hidebysig newslot virtual final 
          instance object  Clone() cil managed
  {
    // 
    .maxstack  1
    .locals init (object V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance object [mscorlib]System.Object::MemberwiseClone()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ASTNULLType::Clone

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ASTNULLType::.ctor

  .property instance int32 Type()
  {
    .set instance void antlr.ASTNULLType::set_Type(int32)
    .get instance int32 antlr.ASTNULLType::get_Type()
  } // end of property ASTNULLType::Type
} // end of class antlr.ASTNULLType

.class public auto ansi serializable beforefieldinit antlr.ANTLRPanicException
       extends antlr.ANTLRException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.ANTLRException::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method ANTLRPanicException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method ANTLRPanicException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s,
                               class [mscorlib]System.Exception inner) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void antlr.ANTLRException::.ctor(string,
                                                                   class [mscorlib]System.Exception)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method ANTLRPanicException::.ctor

} // end of class antlr.ANTLRPanicException

.class public auto ansi beforefieldinit antlr.collections.impl.ASTArray
       extends [mscorlib]System.Object
{
  .field public int32 size
  .field public class antlr.collections.AST[] 'array'
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 capacity) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.collections.impl.ASTArray::size
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  newarr     antlr.collections.AST
    IL_0016:  stfld      class antlr.collections.AST[] antlr.collections.impl.ASTArray::'array'
    IL_001b:  nop
    IL_001c:  ret
  } // end of method ASTArray::.ctor

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.ASTArray 
          'add'(class antlr.collections.AST node) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.collections.impl.ASTArray V_0,
             int32 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.AST[] antlr.collections.impl.ASTArray::'array'
    IL_0007:  ldarg.0
    IL_0008:  dup
    IL_0009:  ldfld      int32 antlr.collections.impl.ASTArray::size
    IL_000e:  dup
    IL_000f:  stloc.1
    IL_0010:  ldc.i4.1
    IL_0011:  add
    IL_0012:  stfld      int32 antlr.collections.impl.ASTArray::size
    IL_0017:  ldloc.1
    IL_0018:  ldarg.1
    IL_0019:  stelem.ref
    IL_001a:  ldarg.0
    IL_001b:  stloc.0
    IL_001c:  br.s       IL_001e

    IL_001e:  ldloc.0
    IL_001f:  ret
  } // end of method ASTArray::'add'

} // end of class antlr.collections.impl.ASTArray

.class public auto ansi beforefieldinit antlr.TokenStreamBasicFilter
       extends [mscorlib]System.Object
       implements antlr.TokenStream
{
  .field famorassem class antlr.collections.impl.BitSet discardMask
  .field famorassem class antlr.TokenStream input
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream input) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      class antlr.TokenStream antlr.TokenStreamBasicFilter::input
    IL_000f:  ldarg.0
    IL_0010:  newobj     instance void antlr.collections.impl.BitSet::.ctor()
    IL_0015:  stfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_001a:  nop
    IL_001b:  ret
  } // end of method TokenStreamBasicFilter::.ctor

  .method public hidebysig newslot virtual 
          instance void  discard(int32 ttype) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.collections.impl.BitSet::'add'(int32)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TokenStreamBasicFilter::discard

  .method public hidebysig newslot virtual 
          instance void  discard(class antlr.collections.impl.BitSet mask) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_0008:  ret
  } // end of method TokenStreamBasicFilter::discard

  .method public hidebysig newslot virtual 
          instance class antlr.IToken  nextToken() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.IToken V_0,
             class antlr.IToken V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.TokenStream antlr.TokenStreamBasicFilter::input
    IL_0007:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_001d

    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class antlr.TokenStream antlr.TokenStreamBasicFilter::input
    IL_0016:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
    IL_001b:  stloc.0
    IL_001c:  nop
    IL_001d:  ldloc.0
    IL_001e:  brfalse.s  IL_0033

    IL_0020:  ldarg.0
    IL_0021:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_0026:  ldloc.0
    IL_0027:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_002c:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0031:  br.s       IL_0034

    IL_0033:  ldc.i4.0
    IL_0034:  stloc.2
    IL_0035:  ldloc.2
    IL_0036:  brtrue.s   IL_000f

    IL_0038:  ldloc.0
    IL_0039:  stloc.1
    IL_003a:  br.s       IL_003c

    IL_003c:  ldloc.1
    IL_003d:  ret
  } // end of method TokenStreamBasicFilter::nextToken

} // end of class antlr.TokenStreamBasicFilter

.class public auto ansi beforefieldinit antlr.TokenStreamHiddenTokenFilter
       extends antlr.TokenStreamBasicFilter
       implements antlr.TokenStream
{
  .field famorassem class antlr.collections.impl.BitSet hideMask
  .field private class antlr.IHiddenStreamToken nextMonitoredToken
  .field famorassem class antlr.IHiddenStreamToken lastHiddenToken
  .field famorassem class antlr.IHiddenStreamToken firstHidden
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream input) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::firstHidden
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.TokenStreamBasicFilter::.ctor(class antlr.TokenStream)
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  newobj     instance void antlr.collections.impl.BitSet::.ctor()
    IL_0016:  stfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_001b:  nop
    IL_001c:  ret
  } // end of method TokenStreamHiddenTokenFilter::.ctor

  .method famorassem hidebysig newslot virtual 
          instance void  consume() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      class antlr.TokenStream antlr.TokenStreamBasicFilter::input
    IL_0008:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
    IL_000d:  castclass  antlr.IHiddenStreamToken
    IL_0012:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::nextMonitoredToken
    IL_0017:  ret
  } // end of method TokenStreamHiddenTokenFilter::consume

  .method private hidebysig instance void 
          consumeFirst() cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.IHiddenStreamToken V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.TokenStreamHiddenTokenFilter::consume()
    IL_0007:  nop
    IL_0008:  ldnull
    IL_0009:  stloc.0
    IL_000a:  br         IL_0095

    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.1
    IL_0018:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_001d:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_0022:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0027:  ldc.i4.0
    IL_0028:  ceq
    IL_002a:  stloc.1
    IL_002b:  ldloc.1
    IL_002c:  brtrue.s   IL_008d

    IL_002e:  nop
    IL_002f:  ldloc.0
    IL_0030:  ldnull
    IL_0031:  ceq
    IL_0033:  ldc.i4.0
    IL_0034:  ceq
    IL_0036:  stloc.1
    IL_0037:  ldloc.1
    IL_0038:  brtrue.s   IL_0046

    IL_003a:  nop
    IL_003b:  ldarg.0
    IL_003c:  ldc.i4.1
    IL_003d:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0042:  stloc.0
    IL_0043:  nop
    IL_0044:  br.s       IL_006c

    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldc.i4.1
    IL_004a:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_004f:  callvirt   instance void antlr.IHiddenStreamToken::setHiddenAfter(class antlr.IHiddenStreamToken)
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  ldc.i4.1
    IL_0057:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_005c:  ldloc.0
    IL_005d:  callvirt   instance void antlr.IHiddenStreamToken::setHiddenBefore(class antlr.IHiddenStreamToken)
    IL_0062:  nop
    IL_0063:  ldarg.0
    IL_0064:  ldc.i4.1
    IL_0065:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_006a:  stloc.0
    IL_006b:  nop
    IL_006c:  ldarg.0
    IL_006d:  ldloc.0
    IL_006e:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::lastHiddenToken
    IL_0073:  ldarg.0
    IL_0074:  ldfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::firstHidden
    IL_0079:  ldnull
    IL_007a:  ceq
    IL_007c:  ldc.i4.0
    IL_007d:  ceq
    IL_007f:  stloc.1
    IL_0080:  ldloc.1
    IL_0081:  brtrue.s   IL_008c

    IL_0083:  nop
    IL_0084:  ldarg.0
    IL_0085:  ldloc.0
    IL_0086:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::firstHidden
    IL_008b:  nop
    IL_008c:  nop
    IL_008d:  ldarg.0
    IL_008e:  callvirt   instance void antlr.TokenStreamHiddenTokenFilter::consume()
    IL_0093:  nop
    IL_0094:  nop
    IL_0095:  ldarg.0
    IL_0096:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_009b:  ldarg.0
    IL_009c:  ldc.i4.1
    IL_009d:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_00a2:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_00a7:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_00ac:  brtrue.s   IL_00c7

    IL_00ae:  ldarg.0
    IL_00af:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_00b4:  ldarg.0
    IL_00b5:  ldc.i4.1
    IL_00b6:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_00bb:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_00c0:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_00c5:  br.s       IL_00c8

    IL_00c7:  ldc.i4.1
    IL_00c8:  stloc.1
    IL_00c9:  ldloc.1
    IL_00ca:  brtrue     IL_000f

    IL_00cf:  ret
  } // end of method TokenStreamHiddenTokenFilter::consumeFirst

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.BitSet 
          getDiscardMask() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.impl.BitSet V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::getDiscardMask

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenAfter(class antlr.IHiddenStreamToken t) cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class antlr.IHiddenStreamToken antlr.IHiddenStreamToken::getHiddenAfter()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::getHiddenAfter

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenBefore(class antlr.IHiddenStreamToken t) cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance class antlr.IHiddenStreamToken antlr.IHiddenStreamToken::getHiddenBefore()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::getHiddenBefore

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.BitSet 
          getHideMask() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.impl.BitSet V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::getHideMask

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getInitialHiddenToken() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::firstHidden
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::getInitialHiddenToken

  .method public hidebysig newslot virtual 
          instance void  hide(int32 m) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.collections.impl.BitSet::'add'(int32)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TokenStreamHiddenTokenFilter::hide

  .method public hidebysig newslot virtual 
          instance void  hide(class antlr.collections.impl.BitSet mask) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_0008:  ret
  } // end of method TokenStreamHiddenTokenFilter::hide

  .method famorassem hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          LA(int32 i) cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::nextMonitoredToken
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamHiddenTokenFilter::LA

  .method public hidebysig virtual instance class antlr.IToken 
          nextToken() cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.IHiddenStreamToken V_0,
             class antlr.IHiddenStreamToken V_1,
             class antlr.IToken V_2,
             bool V_3,
             class antlr.IHiddenStreamToken V_4)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0008:  ldnull
    IL_0009:  ceq
    IL_000b:  ldc.i4.0
    IL_000c:  ceq
    IL_000e:  stloc.3
    IL_000f:  ldloc.3
    IL_0010:  brtrue.s   IL_001b

    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  call       instance void antlr.TokenStreamHiddenTokenFilter::consumeFirst()
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldc.i4.1
    IL_001d:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0022:  stloc.0
    IL_0023:  ldloc.0
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::lastHiddenToken
    IL_002a:  callvirt   instance void antlr.IHiddenStreamToken::setHiddenBefore(class antlr.IHiddenStreamToken)
    IL_002f:  nop
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::lastHiddenToken
    IL_0037:  ldarg.0
    IL_0038:  callvirt   instance void antlr.TokenStreamHiddenTokenFilter::consume()
    IL_003d:  nop
    IL_003e:  ldloc.0
    IL_003f:  stloc.1
    IL_0040:  br.s       IL_00a4

    IL_0042:  nop
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_0049:  ldarg.0
    IL_004a:  ldc.i4.1
    IL_004b:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0050:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_0055:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_005a:  ldc.i4.0
    IL_005b:  ceq
    IL_005d:  stloc.3
    IL_005e:  ldloc.3
    IL_005f:  brtrue.s   IL_009c

    IL_0061:  nop
    IL_0062:  ldloc.1
    IL_0063:  ldarg.0
    IL_0064:  ldc.i4.1
    IL_0065:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_006a:  callvirt   instance void antlr.IHiddenStreamToken::setHiddenAfter(class antlr.IHiddenStreamToken)
    IL_006f:  nop
    IL_0070:  ldloc.1
    IL_0071:  ldloc.0
    IL_0072:  ceq
    IL_0074:  stloc.3
    IL_0075:  ldloc.3
    IL_0076:  brtrue.s   IL_0088

    IL_0078:  nop
    IL_0079:  ldarg.0
    IL_007a:  ldc.i4.1
    IL_007b:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0080:  ldloc.1
    IL_0081:  callvirt   instance void antlr.IHiddenStreamToken::setHiddenBefore(class antlr.IHiddenStreamToken)
    IL_0086:  nop
    IL_0087:  nop
    IL_0088:  ldarg.0
    IL_0089:  ldarg.0
    IL_008a:  ldc.i4.1
    IL_008b:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_0090:  dup
    IL_0091:  stloc.s    V_4
    IL_0093:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::lastHiddenToken
    IL_0098:  ldloc.s    V_4
    IL_009a:  stloc.1
    IL_009b:  nop
    IL_009c:  ldarg.0
    IL_009d:  callvirt   instance void antlr.TokenStreamHiddenTokenFilter::consume()
    IL_00a2:  nop
    IL_00a3:  nop
    IL_00a4:  ldarg.0
    IL_00a5:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamHiddenTokenFilter::hideMask
    IL_00aa:  ldarg.0
    IL_00ab:  ldc.i4.1
    IL_00ac:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_00b1:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_00b6:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_00bb:  brtrue.s   IL_00d6

    IL_00bd:  ldarg.0
    IL_00be:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamBasicFilter::discardMask
    IL_00c3:  ldarg.0
    IL_00c4:  ldc.i4.1
    IL_00c5:  callvirt   instance class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::LA(int32)
    IL_00ca:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_00cf:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_00d4:  br.s       IL_00d7

    IL_00d6:  ldc.i4.1
    IL_00d7:  stloc.3
    IL_00d8:  ldloc.3
    IL_00d9:  brtrue     IL_0042

    IL_00de:  ldloc.0
    IL_00df:  stloc.2
    IL_00e0:  br.s       IL_00e2

    IL_00e2:  ldloc.2
    IL_00e3:  ret
  } // end of method TokenStreamHiddenTokenFilter::nextToken

  .method public hidebysig newslot virtual 
          instance void  resetState() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldnull
    IL_0003:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::firstHidden
    IL_0008:  ldarg.0
    IL_0009:  ldnull
    IL_000a:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::lastHiddenToken
    IL_000f:  ldarg.0
    IL_0010:  ldnull
    IL_0011:  stfld      class antlr.IHiddenStreamToken antlr.TokenStreamHiddenTokenFilter::nextMonitoredToken
    IL_0016:  ret
  } // end of method TokenStreamHiddenTokenFilter::resetState

} // end of class antlr.TokenStreamHiddenTokenFilter

.class interface public abstract auto ansi antlr.IHiddenStreamToken
       implements antlr.IToken
{
  .method public hidebysig newslot abstract virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenAfter() cil managed
  {
  } // end of method IHiddenStreamToken::getHiddenAfter

  .method public hidebysig newslot abstract virtual 
          instance void  setHiddenAfter(class antlr.IHiddenStreamToken t) cil managed
  {
  } // end of method IHiddenStreamToken::setHiddenAfter

  .method public hidebysig newslot abstract virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenBefore() cil managed
  {
  } // end of method IHiddenStreamToken::getHiddenBefore

  .method public hidebysig newslot abstract virtual 
          instance void  setHiddenBefore(class antlr.IHiddenStreamToken t) cil managed
  {
  } // end of method IHiddenStreamToken::setHiddenBefore

} // end of class antlr.IHiddenStreamToken

.class public abstract auto ansi beforefieldinit antlr.debug.ANTLREventArgs
       extends [mscorlib]System.EventArgs
{
  .field private int32 type_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.EventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method ANTLREventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.EventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  callvirt   instance void antlr.debug.ANTLREventArgs::set_Type(int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ret
  } // end of method ANTLREventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Type() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.ANTLREventArgs::type_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ANTLREventArgs::get_Type

  .method public hidebysig newslot specialname virtual 
          instance void  set_Type(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.ANTLREventArgs::type_
    IL_0008:  ret
  } // end of method ANTLREventArgs::set_Type

  .method assembly hidebysig instance void 
          setValues(int32 'type') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.debug.ANTLREventArgs::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method ANTLREventArgs::setValues

  .property instance int32 Type()
  {
    .set instance void antlr.debug.ANTLREventArgs::set_Type(int32)
    .get instance int32 antlr.debug.ANTLREventArgs::get_Type()
  } // end of property ANTLREventArgs::Type
} // end of class antlr.debug.ANTLREventArgs

.class public auto ansi beforefieldinit antlr.debug.TokenEventArgs
       extends antlr.debug.ANTLREventArgs
{
  .field private int32 value_
  .field private int32 amount
  .field public static int32 LA
  .field public static int32 CONSUME
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TokenEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type',
                               int32 amount,
                               int32 val) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  ldarg.3
    IL_000c:  call       instance void antlr.debug.TokenEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32)
    IL_0011:  nop
    IL_0012:  nop
    IL_0013:  ret
  } // end of method TokenEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Amount() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.TokenEventArgs::amount
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenEventArgs::get_Amount

  .method public hidebysig newslot specialname virtual 
          instance void  set_Amount(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.TokenEventArgs::amount
    IL_0008:  ret
  } // end of method TokenEventArgs::set_Amount

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Value() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.TokenEventArgs::value_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenEventArgs::get_Value

  .method public hidebysig newslot specialname virtual 
          instance void  set_Value(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.TokenEventArgs::value_
    IL_0008:  ret
  } // end of method TokenEventArgs::set_Value

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    int32 amount,
                    int32 val) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance void antlr.debug.ANTLREventArgs::setValues(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance void antlr.debug.TokenEventArgs::set_Amount(int32)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.3
    IL_0013:  callvirt   instance void antlr.debug.TokenEventArgs::set_Value(int32)
    IL_0018:  nop
    IL_0019:  ret
  } // end of method TokenEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             bool V_1,
             object[] V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance int32 antlr.debug.ANTLREventArgs::get_Type()
    IL_0007:  ldsfld     int32 antlr.debug.TokenEventArgs::LA
    IL_000c:  ceq
    IL_000e:  ldc.i4.0
    IL_000f:  ceq
    IL_0011:  stloc.1
    IL_0012:  ldloc.1
    IL_0013:  brtrue.s   IL_0059

    IL_0015:  ldc.i4.5
    IL_0016:  newarr     [mscorlib]System.Object
    IL_001b:  stloc.2
    IL_001c:  ldloc.2
    IL_001d:  ldc.i4.0
    IL_001e:  ldstr      "ParserTokenEvent [LA,"
    IL_0023:  stelem.ref
    IL_0024:  ldloc.2
    IL_0025:  ldc.i4.1
    IL_0026:  ldarg.0
    IL_0027:  callvirt   instance int32 antlr.debug.TokenEventArgs::get_Amount()
    IL_002c:  box        [mscorlib]System.Int32
    IL_0031:  stelem.ref
    IL_0032:  ldloc.2
    IL_0033:  ldc.i4.2
    IL_0034:  ldstr      ","
    IL_0039:  stelem.ref
    IL_003a:  ldloc.2
    IL_003b:  ldc.i4.3
    IL_003c:  ldarg.0
    IL_003d:  callvirt   instance int32 antlr.debug.TokenEventArgs::get_Value()
    IL_0042:  box        [mscorlib]System.Int32
    IL_0047:  stelem.ref
    IL_0048:  ldloc.2
    IL_0049:  ldc.i4.4
    IL_004a:  ldstr      "]"
    IL_004f:  stelem.ref
    IL_0050:  ldloc.2
    IL_0051:  call       string [mscorlib]System.String::Concat(object[])
    IL_0056:  stloc.0
    IL_0057:  br.s       IL_0076

    IL_0059:  ldstr      "ParserTokenEvent [consume,1,"
    IL_005e:  ldarg.0
    IL_005f:  callvirt   instance int32 antlr.debug.TokenEventArgs::get_Value()
    IL_0064:  box        [mscorlib]System.Int32
    IL_0069:  ldstr      "]"
    IL_006e:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_0073:  stloc.0
    IL_0074:  br.s       IL_0076

    IL_0076:  ldloc.0
    IL_0077:  ret
  } // end of method TokenEventArgs::ToString

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  stsfld     int32 antlr.debug.TokenEventArgs::LA
    IL_0006:  ldc.i4.1
    IL_0007:  stsfld     int32 antlr.debug.TokenEventArgs::CONSUME
    IL_000c:  ret
  } // end of method TokenEventArgs::.cctor

  .property instance int32 Amount()
  {
    .set instance void antlr.debug.TokenEventArgs::set_Amount(int32)
    .get instance int32 antlr.debug.TokenEventArgs::get_Amount()
  } // end of property TokenEventArgs::Amount
  .property instance int32 Value()
  {
    .set instance void antlr.debug.TokenEventArgs::set_Value(int32)
    .get instance int32 antlr.debug.TokenEventArgs::get_Value()
  } // end of property TokenEventArgs::Value
} // end of class antlr.debug.TokenEventArgs

.class interface public abstract auto ansi antlr.debug.MessageListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  reportError(object source,
                                     class antlr.debug.MessageEventArgs e) cil managed
  {
  } // end of method MessageListener::reportError

  .method public hidebysig newslot abstract virtual 
          instance void  reportWarning(object source,
                                       class antlr.debug.MessageEventArgs e) cil managed
  {
  } // end of method MessageListener::reportWarning

} // end of class antlr.debug.MessageListener

.class public auto ansi beforefieldinit antlr.debug.MessageListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.MessageListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method MessageListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method MessageListenerBase::refresh

  .method public hidebysig newslot virtual 
          instance void  reportError(object source,
                                     class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method MessageListenerBase::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(object source,
                                       class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method MessageListenerBase::reportWarning

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method MessageListenerBase::.ctor

} // end of class antlr.debug.MessageListenerBase

.class public auto ansi serializable beforefieldinit antlr.RecognitionException
       extends antlr.ANTLRException
{
  .field public string fileName
  .field public int32 line
  .field public int32 column
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "parsing error"
    IL_0006:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_000b:  nop
    IL_000c:  nop
    IL_000d:  ldarg.0
    IL_000e:  ldnull
    IL_000f:  stfld      string antlr.RecognitionException::fileName
    IL_0014:  ldarg.0
    IL_0015:  ldc.i4.m1
    IL_0016:  stfld      int32 antlr.RecognitionException::line
    IL_001b:  ldarg.0
    IL_001c:  ldc.i4.m1
    IL_001d:  stfld      int32 antlr.RecognitionException::column
    IL_0022:  nop
    IL_0023:  ret
  } // end of method RecognitionException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldnull
    IL_000b:  stfld      string antlr.RecognitionException::fileName
    IL_0010:  ldarg.0
    IL_0011:  ldc.i4.m1
    IL_0012:  stfld      int32 antlr.RecognitionException::line
    IL_0017:  ldarg.0
    IL_0018:  ldc.i4.m1
    IL_0019:  stfld      int32 antlr.RecognitionException::column
    IL_001e:  nop
    IL_001f:  ret
  } // end of method RecognitionException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s,
                               string fileName_,
                               int32 line_,
                               int32 column_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  stfld      string antlr.RecognitionException::fileName
    IL_0010:  ldarg.0
    IL_0011:  ldarg.3
    IL_0012:  stfld      int32 antlr.RecognitionException::line
    IL_0017:  ldarg.0
    IL_0018:  ldarg.s    column_
    IL_001a:  stfld      int32 antlr.RecognitionException::column
    IL_001f:  nop
    IL_0020:  ret
  } // end of method RecognitionException::.ctor

  .method public hidebysig newslot virtual 
          instance string  getFilename() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.RecognitionException::fileName
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method RecognitionException::getFilename

  .method public hidebysig newslot virtual 
          instance int32  getLine() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.RecognitionException::line
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method RecognitionException::getLine

  .method public hidebysig newslot virtual 
          instance int32  getColumn() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.RecognitionException::column
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method RecognitionException::getColumn

  .method public hidebysig newslot virtual 
          instance string  getErrorMessage() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 30 52 65 70 6C 61 63 65 64 20 62 79 20 4D   // ..0Replaced by M
                                                                              65 73 73 61 67 65 20 70 72 6F 70 65 72 74 79 20   // essage property 
                                                                              73 69 6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E   // since version 2.
                                                                              37 2E 30 01 00 00 )                               // 7.0...
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method RecognitionException::getErrorMessage

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  call       class antlr.FileLineFormatter antlr.FileLineFormatter::getFormatter()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.RecognitionException::fileName
    IL_000c:  ldarg.0
    IL_000d:  ldfld      int32 antlr.RecognitionException::line
    IL_0012:  ldarg.0
    IL_0013:  ldfld      int32 antlr.RecognitionException::column
    IL_0018:  callvirt   instance string antlr.FileLineFormatter::getFormatString(string,
                                                                                  int32,
                                                                                  int32)
    IL_001d:  ldarg.0
    IL_001e:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0023:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0028:  stloc.0
    IL_0029:  br.s       IL_002b

    IL_002b:  ldloc.0
    IL_002c:  ret
  } // end of method RecognitionException::ToString

} // end of class antlr.RecognitionException

.class public auto ansi serializable beforefieldinit antlr.NoViableAltException
       extends antlr.RecognitionException
{
  .field public class antlr.IToken token
  .field public class antlr.collections.AST node
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "NoViableAlt"
    IL_0006:  ldstr      "<AST>"
    IL_000b:  ldc.i4.m1
    IL_000c:  ldc.i4.m1
    IL_000d:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0012:  nop
    IL_0013:  nop
    IL_0014:  ldarg.0
    IL_0015:  ldarg.1
    IL_0016:  stfld      class antlr.collections.AST antlr.NoViableAltException::node
    IL_001b:  nop
    IL_001c:  ret
  } // end of method NoViableAltException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.IToken t,
                               string fileName_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "NoViableAlt"
    IL_0006:  ldarg.2
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance int32 antlr.IToken::getLine()
    IL_000d:  ldarg.1
    IL_000e:  callvirt   instance int32 antlr.IToken::getColumn()
    IL_0013:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0018:  nop
    IL_0019:  nop
    IL_001a:  ldarg.0
    IL_001b:  ldarg.1
    IL_001c:  stfld      class antlr.IToken antlr.NoViableAltException::token
    IL_0021:  nop
    IL_0022:  ret
  } // end of method NoViableAltException::.ctor

  .method public hidebysig specialname virtual 
          instance string  get_Message() cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IToken antlr.NoViableAltException::token
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  brtrue.s   IL_0027

    IL_000e:  nop
    IL_000f:  ldstr      "unexpected token: "
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.IToken antlr.NoViableAltException::token
    IL_001a:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_001f:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0024:  stloc.0
    IL_0025:  br.s       IL_0067

    IL_0027:  ldarg.0
    IL_0028:  ldfld      class antlr.collections.AST antlr.NoViableAltException::node
    IL_002d:  brfalse.s  IL_0041

    IL_002f:  ldarg.0
    IL_0030:  ldfld      class antlr.collections.AST antlr.NoViableAltException::node
    IL_0035:  ldsfld     class antlr.ASTNULLType antlr.TreeParser::ASTNULL
    IL_003a:  ceq
    IL_003c:  ldc.i4.0
    IL_003d:  ceq
    IL_003f:  br.s       IL_0042

    IL_0041:  ldc.i4.0
    IL_0042:  stloc.1
    IL_0043:  ldloc.1
    IL_0044:  brtrue.s   IL_004f

    IL_0046:  nop
    IL_0047:  ldstr      "unexpected end of subtree"
    IL_004c:  stloc.0
    IL_004d:  br.s       IL_0067

    IL_004f:  ldstr      "unexpected AST node: "
    IL_0054:  ldarg.0
    IL_0055:  ldfld      class antlr.collections.AST antlr.NoViableAltException::node
    IL_005a:  callvirt   instance string antlr.collections.AST::ToString()
    IL_005f:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0064:  stloc.0
    IL_0065:  br.s       IL_0067

    IL_0067:  ldloc.0
    IL_0068:  ret
  } // end of method NoViableAltException::get_Message

  .property instance string Message()
  {
    .get instance string antlr.NoViableAltException::get_Message()
  } // end of property NoViableAltException::Message
} // end of class antlr.NoViableAltException

.class public abstract auto ansi serializable beforefieldinit antlr.BaseAST
       extends [mscorlib]System.Object
       implements antlr.collections.AST,
                  [mscorlib]System.ICloneable
{
  .field famorassem class antlr.BaseAST down
  .field famorassem class antlr.BaseAST right
  .field private static bool verboseStringConversion
  .field private static string[] tokenNames
  .method public hidebysig newslot virtual 
          instance void  addChild(class antlr.collections.AST node) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.BaseAST V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_000e

    IL_000c:  br.s       IL_0056

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.BaseAST antlr.BaseAST::down
    IL_0014:  stloc.0
    IL_0015:  ldloc.0
    IL_0016:  ldnull
    IL_0017:  ceq
    IL_0019:  stloc.1
    IL_001a:  ldloc.1
    IL_001b:  brtrue.s   IL_0048

    IL_001d:  nop
    IL_001e:  br.s       IL_0029

    IL_0020:  nop
    IL_0021:  ldloc.0
    IL_0022:  ldfld      class antlr.BaseAST antlr.BaseAST::right
    IL_0027:  stloc.0
    IL_0028:  nop
    IL_0029:  ldloc.0
    IL_002a:  ldfld      class antlr.BaseAST antlr.BaseAST::right
    IL_002f:  ldnull
    IL_0030:  ceq
    IL_0032:  ldc.i4.0
    IL_0033:  ceq
    IL_0035:  stloc.1
    IL_0036:  ldloc.1
    IL_0037:  brtrue.s   IL_0020

    IL_0039:  ldloc.0
    IL_003a:  ldarg.1
    IL_003b:  castclass  antlr.BaseAST
    IL_0040:  stfld      class antlr.BaseAST antlr.BaseAST::right
    IL_0045:  nop
    IL_0046:  br.s       IL_0056

    IL_0048:  nop
    IL_0049:  ldarg.0
    IL_004a:  ldarg.1
    IL_004b:  castclass  antlr.BaseAST
    IL_0050:  stfld      class antlr.BaseAST antlr.BaseAST::down
    IL_0055:  nop
    IL_0056:  ret
  } // end of method BaseAST::addChild

  .method private hidebysig instance void 
          doWorkForFindAll(class [mscorlib]System.Collections.ArrayList v,
                           class antlr.collections.AST target,
                           bool partialMatch) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.collections.AST V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_005e

    IL_0005:  nop
    IL_0006:  ldarg.3
    IL_0007:  brfalse.s  IL_0012

    IL_0009:  ldloc.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance bool antlr.collections.AST::EqualsTreePartial(class antlr.collections.AST)
    IL_0010:  brtrue.s   IL_0024

    IL_0012:  ldarg.3
    IL_0013:  brtrue.s   IL_0021

    IL_0015:  ldloc.0
    IL_0016:  ldarg.2
    IL_0017:  callvirt   instance bool antlr.collections.AST::EqualsTree(class antlr.collections.AST)
    IL_001c:  ldc.i4.0
    IL_001d:  ceq
    IL_001f:  br.s       IL_0022

    IL_0021:  ldc.i4.1
    IL_0022:  br.s       IL_0025

    IL_0024:  ldc.i4.0
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0033

    IL_0029:  nop
    IL_002a:  ldarg.1
    IL_002b:  ldloc.0
    IL_002c:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    IL_0031:  pop
    IL_0032:  nop
    IL_0033:  ldloc.0
    IL_0034:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0039:  ldnull
    IL_003a:  ceq
    IL_003c:  stloc.1
    IL_003d:  ldloc.1
    IL_003e:  brtrue.s   IL_0056

    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0047:  castclass  antlr.BaseAST
    IL_004c:  ldarg.1
    IL_004d:  ldarg.2
    IL_004e:  ldarg.3
    IL_004f:  callvirt   instance void antlr.BaseAST::doWorkForFindAll(class [mscorlib]System.Collections.ArrayList,
                                                                       class antlr.collections.AST,
                                                                       bool)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  nop
    IL_0057:  ldloc.0
    IL_0058:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_005d:  stloc.0
    IL_005e:  ldloc.0
    IL_005f:  ldnull
    IL_0060:  ceq
    IL_0062:  ldc.i4.0
    IL_0063:  ceq
    IL_0065:  stloc.1
    IL_0066:  ldloc.1
    IL_0067:  brtrue.s   IL_0005

    IL_0069:  ret
  } // end of method BaseAST::doWorkForFindAll

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldc.i4.0
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0035

    IL_0010:  ldarg.0
    IL_0011:  call       instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_001c:  ceq
    IL_001e:  stloc.1
    IL_001f:  ldloc.1
    IL_0020:  brtrue.s   IL_0026

    IL_0022:  ldc.i4.0
    IL_0023:  stloc.0
    IL_0024:  br.s       IL_0035

    IL_0026:  ldarg.0
    IL_0027:  ldarg.1
    IL_0028:  castclass  antlr.collections.AST
    IL_002d:  callvirt   instance bool antlr.BaseAST::Equals(class antlr.collections.AST)
    IL_0032:  stloc.0
    IL_0033:  br.s       IL_0035

    IL_0035:  ldloc.0
    IL_0036:  ret
  } // end of method BaseAST::Equals

  .method public hidebysig newslot virtual 
          instance bool  Equals(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldc.i4.0
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0037

    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance string antlr.BaseAST::getText()
    IL_0016:  ldarg.1
    IL_0017:  callvirt   instance string antlr.collections.AST::getText()
    IL_001c:  call       bool [mscorlib]System.Object::Equals(object,
                                                              object)
    IL_0021:  brfalse.s  IL_0033

    IL_0023:  ldarg.0
    IL_0024:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_0029:  ldarg.1
    IL_002a:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_002f:  ceq
    IL_0031:  br.s       IL_0034

    IL_0033:  ldc.i4.0
    IL_0034:  stloc.0
    IL_0035:  br.s       IL_0037

    IL_0037:  ldloc.0
    IL_0038:  ret
  } // end of method BaseAST::Equals

  .method public hidebysig newslot virtual 
          instance bool  EqualsList(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.2
    IL_0009:  ldloc.2
    IL_000a:  brtrue.s   IL_0014

    IL_000c:  nop
    IL_000d:  ldc.i4.0
    IL_000e:  stloc.1
    IL_000f:  br         IL_00a1

    IL_0014:  ldarg.0
    IL_0015:  stloc.0
    IL_0016:  br.s       IL_0076

    IL_0018:  nop
    IL_0019:  ldloc.0
    IL_001a:  ldarg.1
    IL_001b:  callvirt   instance bool antlr.collections.AST::Equals(class antlr.collections.AST)
    IL_0020:  stloc.2
    IL_0021:  ldloc.2
    IL_0022:  brtrue.s   IL_0029

    IL_0024:  nop
    IL_0025:  ldc.i4.0
    IL_0026:  stloc.1
    IL_0027:  br.s       IL_00a1

    IL_0029:  ldloc.0
    IL_002a:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_002f:  ldnull
    IL_0030:  ceq
    IL_0032:  stloc.2
    IL_0033:  ldloc.2
    IL_0034:  brtrue.s   IL_0054

    IL_0036:  nop
    IL_0037:  ldloc.0
    IL_0038:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003d:  ldarg.1
    IL_003e:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0043:  callvirt   instance bool antlr.collections.AST::EqualsList(class antlr.collections.AST)
    IL_0048:  stloc.2
    IL_0049:  ldloc.2
    IL_004a:  brtrue.s   IL_0051

    IL_004c:  nop
    IL_004d:  ldc.i4.0
    IL_004e:  stloc.1
    IL_004f:  br.s       IL_00a1

    IL_0051:  nop
    IL_0052:  br.s       IL_0066

    IL_0054:  ldarg.1
    IL_0055:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_005a:  ldnull
    IL_005b:  ceq
    IL_005d:  stloc.2
    IL_005e:  ldloc.2
    IL_005f:  brtrue.s   IL_0066

    IL_0061:  nop
    IL_0062:  ldc.i4.0
    IL_0063:  stloc.1
    IL_0064:  br.s       IL_00a1

    IL_0066:  nop
    IL_0067:  ldloc.0
    IL_0068:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_006d:  stloc.0
    IL_006e:  ldarg.1
    IL_006f:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0074:  starg.s    t
    IL_0076:  ldloc.0
    IL_0077:  brfalse.s  IL_0082

    IL_0079:  ldarg.1
    IL_007a:  ldnull
    IL_007b:  ceq
    IL_007d:  ldc.i4.0
    IL_007e:  ceq
    IL_0080:  br.s       IL_0083

    IL_0082:  ldc.i4.0
    IL_0083:  stloc.2
    IL_0084:  ldloc.2
    IL_0085:  brtrue.s   IL_0018

    IL_0087:  ldloc.0
    IL_0088:  brtrue.s   IL_0093

    IL_008a:  ldarg.1
    IL_008b:  ldnull
    IL_008c:  ceq
    IL_008e:  ldc.i4.0
    IL_008f:  ceq
    IL_0091:  br.s       IL_0094

    IL_0093:  ldc.i4.1
    IL_0094:  stloc.2
    IL_0095:  ldloc.2
    IL_0096:  brtrue.s   IL_009d

    IL_0098:  nop
    IL_0099:  ldc.i4.1
    IL_009a:  stloc.1
    IL_009b:  br.s       IL_00a1

    IL_009d:  ldc.i4.0
    IL_009e:  stloc.1
    IL_009f:  br.s       IL_00a1

    IL_00a1:  ldloc.1
    IL_00a2:  ret
  } // end of method BaseAST::EqualsList

  .method public hidebysig newslot virtual 
          instance bool  EqualsListPartial(class antlr.collections.AST 'sub') cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.2
    IL_0009:  ldloc.2
    IL_000a:  brtrue.s   IL_0011

    IL_000c:  nop
    IL_000d:  ldc.i4.1
    IL_000e:  stloc.1
    IL_000f:  br.s       IL_0085

    IL_0011:  ldarg.0
    IL_0012:  stloc.0
    IL_0013:  br.s       IL_005d

    IL_0015:  nop
    IL_0016:  ldloc.0
    IL_0017:  ldarg.1
    IL_0018:  callvirt   instance bool antlr.collections.AST::Equals(class antlr.collections.AST)
    IL_001d:  stloc.2
    IL_001e:  ldloc.2
    IL_001f:  brtrue.s   IL_0025

    IL_0021:  ldc.i4.0
    IL_0022:  stloc.1
    IL_0023:  br.s       IL_0085

    IL_0025:  ldloc.0
    IL_0026:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_002b:  ldnull
    IL_002c:  ceq
    IL_002e:  stloc.2
    IL_002f:  ldloc.2
    IL_0030:  brtrue.s   IL_004d

    IL_0032:  nop
    IL_0033:  ldloc.0
    IL_0034:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0039:  ldarg.1
    IL_003a:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003f:  callvirt   instance bool antlr.collections.AST::EqualsListPartial(class antlr.collections.AST)
    IL_0044:  stloc.2
    IL_0045:  ldloc.2
    IL_0046:  brtrue.s   IL_004c

    IL_0048:  ldc.i4.0
    IL_0049:  stloc.1
    IL_004a:  br.s       IL_0085

    IL_004c:  nop
    IL_004d:  nop
    IL_004e:  ldloc.0
    IL_004f:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0054:  stloc.0
    IL_0055:  ldarg.1
    IL_0056:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_005b:  starg.s    'sub'
    IL_005d:  ldloc.0
    IL_005e:  brfalse.s  IL_0069

    IL_0060:  ldarg.1
    IL_0061:  ldnull
    IL_0062:  ceq
    IL_0064:  ldc.i4.0
    IL_0065:  ceq
    IL_0067:  br.s       IL_006a

    IL_0069:  ldc.i4.0
    IL_006a:  stloc.2
    IL_006b:  ldloc.2
    IL_006c:  brtrue.s   IL_0015

    IL_006e:  ldloc.0
    IL_006f:  brtrue.s   IL_0077

    IL_0071:  ldarg.1
    IL_0072:  ldnull
    IL_0073:  ceq
    IL_0075:  br.s       IL_0078

    IL_0077:  ldc.i4.1
    IL_0078:  stloc.2
    IL_0079:  ldloc.2
    IL_007a:  brtrue.s   IL_0081

    IL_007c:  nop
    IL_007d:  ldc.i4.0
    IL_007e:  stloc.1
    IL_007f:  br.s       IL_0085

    IL_0081:  ldc.i4.1
    IL_0082:  stloc.1
    IL_0083:  br.s       IL_0085

    IL_0085:  ldloc.1
    IL_0086:  ret
  } // end of method BaseAST::EqualsListPartial

  .method public hidebysig newslot virtual 
          instance bool  EqualsTree(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance bool antlr.BaseAST::Equals(class antlr.collections.AST)
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldc.i4.0
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0050

    IL_0010:  ldarg.0
    IL_0011:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0016:  ldnull
    IL_0017:  ceq
    IL_0019:  stloc.1
    IL_001a:  ldloc.1
    IL_001b:  brtrue.s   IL_003a

    IL_001d:  nop
    IL_001e:  ldarg.0
    IL_001f:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0024:  ldarg.1
    IL_0025:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_002a:  callvirt   instance bool antlr.collections.AST::EqualsList(class antlr.collections.AST)
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  brtrue.s   IL_0037

    IL_0033:  ldc.i4.0
    IL_0034:  stloc.0
    IL_0035:  br.s       IL_0050

    IL_0037:  nop
    IL_0038:  br.s       IL_004c

    IL_003a:  ldarg.1
    IL_003b:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0040:  ldnull
    IL_0041:  ceq
    IL_0043:  stloc.1
    IL_0044:  ldloc.1
    IL_0045:  brtrue.s   IL_004c

    IL_0047:  nop
    IL_0048:  ldc.i4.0
    IL_0049:  stloc.0
    IL_004a:  br.s       IL_0050

    IL_004c:  ldc.i4.1
    IL_004d:  stloc.0
    IL_004e:  br.s       IL_0050

    IL_0050:  ldloc.0
    IL_0051:  ret
  } // end of method BaseAST::EqualsTree

  .method public hidebysig newslot virtual 
          instance bool  EqualsTreePartial(class antlr.collections.AST 'sub') cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0011

    IL_000c:  nop
    IL_000d:  ldc.i4.1
    IL_000e:  stloc.0
    IL_000f:  br.s       IL_004c

    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  callvirt   instance bool antlr.BaseAST::Equals(class antlr.collections.AST)
    IL_0018:  stloc.1
    IL_0019:  ldloc.1
    IL_001a:  brtrue.s   IL_0020

    IL_001c:  ldc.i4.0
    IL_001d:  stloc.0
    IL_001e:  br.s       IL_004c

    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0026:  ldnull
    IL_0027:  ceq
    IL_0029:  stloc.1
    IL_002a:  ldloc.1
    IL_002b:  brtrue.s   IL_0048

    IL_002d:  nop
    IL_002e:  ldarg.0
    IL_002f:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0034:  ldarg.1
    IL_0035:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003a:  callvirt   instance bool antlr.collections.AST::EqualsListPartial(class antlr.collections.AST)
    IL_003f:  stloc.1
    IL_0040:  ldloc.1
    IL_0041:  brtrue.s   IL_0047

    IL_0043:  ldc.i4.0
    IL_0044:  stloc.0
    IL_0045:  br.s       IL_004c

    IL_0047:  nop
    IL_0048:  ldc.i4.1
    IL_0049:  stloc.0
    IL_004a:  br.s       IL_004c

    IL_004c:  ldloc.0
    IL_004d:  ret
  } // end of method BaseAST::EqualsTreePartial

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAll(class antlr.collections.AST target) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             class [mscorlib]System.Collections.IEnumerator V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   10
    IL_0003:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor(int32)
    IL_0008:  stloc.0
    IL_0009:  ldarg.1
    IL_000a:  ldnull
    IL_000b:  ceq
    IL_000d:  ldc.i4.0
    IL_000e:  ceq
    IL_0010:  stloc.2
    IL_0011:  ldloc.2
    IL_0012:  brtrue.s   IL_0019

    IL_0014:  nop
    IL_0015:  ldnull
    IL_0016:  stloc.1
    IL_0017:  br.s       IL_002c

    IL_0019:  ldarg.0
    IL_001a:  ldloc.0
    IL_001b:  ldarg.1
    IL_001c:  ldc.i4.0
    IL_001d:  call       instance void antlr.BaseAST::doWorkForFindAll(class [mscorlib]System.Collections.ArrayList,
                                                                       class antlr.collections.AST,
                                                                       bool)
    IL_0022:  nop
    IL_0023:  ldloc.0
    IL_0024:  callvirt   instance class [mscorlib]System.Collections.IEnumerator [mscorlib]System.Collections.ArrayList::GetEnumerator()
    IL_0029:  stloc.1
    IL_002a:  br.s       IL_002c

    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method BaseAST::findAll

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.Collections.IEnumerator 
          findAllPartial(class antlr.collections.AST 'sub') cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             class [mscorlib]System.Collections.IEnumerator V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   10
    IL_0003:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor(int32)
    IL_0008:  stloc.0
    IL_0009:  ldarg.1
    IL_000a:  ldnull
    IL_000b:  ceq
    IL_000d:  ldc.i4.0
    IL_000e:  ceq
    IL_0010:  stloc.2
    IL_0011:  ldloc.2
    IL_0012:  brtrue.s   IL_0019

    IL_0014:  nop
    IL_0015:  ldnull
    IL_0016:  stloc.1
    IL_0017:  br.s       IL_002c

    IL_0019:  ldarg.0
    IL_001a:  ldloc.0
    IL_001b:  ldarg.1
    IL_001c:  ldc.i4.1
    IL_001d:  call       instance void antlr.BaseAST::doWorkForFindAll(class [mscorlib]System.Collections.ArrayList,
                                                                       class antlr.collections.AST,
                                                                       bool)
    IL_0022:  nop
    IL_0023:  ldloc.0
    IL_0024:  callvirt   instance class [mscorlib]System.Collections.IEnumerator [mscorlib]System.Collections.ArrayList::GetEnumerator()
    IL_0029:  stloc.1
    IL_002a:  br.s       IL_002c

    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method BaseAST::findAllPartial

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getFirstChild() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.BaseAST antlr.BaseAST::down
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method BaseAST::getFirstChild

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getNextSibling() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.BaseAST antlr.BaseAST::right
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method BaseAST::getNextSibling

  .method public hidebysig newslot virtual 
          instance string  getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method BaseAST::getText

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Type() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method BaseAST::get_Type

  .method public hidebysig newslot specialname virtual 
          instance void  set_Type(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method BaseAST::set_Type

  .method public hidebysig newslot virtual final 
          instance int32  getNumberOfChildren() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.BaseAST V_0,
             int32 V_1,
             int32 V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.BaseAST antlr.BaseAST::down
    IL_0007:  stloc.0
    IL_0008:  ldc.i4.0
    IL_0009:  stloc.1
    IL_000a:  ldloc.0
    IL_000b:  ldnull
    IL_000c:  ceq
    IL_000e:  stloc.3
    IL_000f:  ldloc.3
    IL_0010:  brtrue.s   IL_0035

    IL_0012:  nop
    IL_0013:  ldc.i4.1
    IL_0014:  stloc.1
    IL_0015:  br.s       IL_0024

    IL_0017:  nop
    IL_0018:  ldloc.0
    IL_0019:  ldfld      class antlr.BaseAST antlr.BaseAST::right
    IL_001e:  stloc.0
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.1
    IL_0023:  nop
    IL_0024:  ldloc.0
    IL_0025:  ldfld      class antlr.BaseAST antlr.BaseAST::right
    IL_002a:  ldnull
    IL_002b:  ceq
    IL_002d:  ldc.i4.0
    IL_002e:  ceq
    IL_0030:  stloc.3
    IL_0031:  ldloc.3
    IL_0032:  brtrue.s   IL_0017

    IL_0034:  nop
    IL_0035:  ldloc.1
    IL_0036:  stloc.2
    IL_0037:  br.s       IL_0039

    IL_0039:  ldloc.2
    IL_003a:  ret
  } // end of method BaseAST::getNumberOfChildren

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(int32 t,
                                    string txt) cil managed
  {
  } // end of method BaseAST::initialize

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(class antlr.collections.AST t) cil managed
  {
  } // end of method BaseAST::initialize

  .method public hidebysig newslot abstract virtual 
          instance void  initialize(class antlr.IToken t) cil managed
  {
  } // end of method BaseAST::initialize

  .method public hidebysig newslot virtual 
          instance void  removeChildren() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldnull
    IL_0003:  stfld      class antlr.BaseAST antlr.BaseAST::down
    IL_0008:  ret
  } // end of method BaseAST::removeChildren

  .method public hidebysig newslot virtual 
          instance void  setFirstChild(class antlr.collections.AST c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  castclass  antlr.BaseAST
    IL_0008:  stfld      class antlr.BaseAST antlr.BaseAST::down
    IL_000d:  ret
  } // end of method BaseAST::setFirstChild

  .method public hidebysig newslot virtual 
          instance void  setNextSibling(class antlr.collections.AST n) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  castclass  antlr.BaseAST
    IL_0008:  stfld      class antlr.BaseAST antlr.BaseAST::right
    IL_000d:  ret
  } // end of method BaseAST::setNextSibling

  .method public hidebysig newslot virtual 
          instance void  setText(string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method BaseAST::setText

  .method public hidebysig newslot virtual 
          instance void  setType(int32 ttype) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.BaseAST::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method BaseAST::setType

  .method public hidebysig static void  setVerboseStringConversion(bool verbose,
                                                                   string[] names) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stsfld     bool antlr.BaseAST::verboseStringConversion
    IL_0007:  ldarg.1
    IL_0008:  stsfld     string[] antlr.BaseAST::tokenNames
    IL_000d:  ret
  } // end of method BaseAST::setVerboseStringConversion

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  5
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             string V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldsfld     bool antlr.BaseAST::verboseStringConversion
    IL_000c:  brfalse.s  IL_0054

    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance string antlr.BaseAST::getText()
    IL_0014:  ldsfld     string[] antlr.BaseAST::tokenNames
    IL_0019:  ldarg.0
    IL_001a:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_001f:  ldelem.ref
    IL_0020:  ldc.i4.1
    IL_0021:  call       int32 [mscorlib]System.String::Compare(string,
                                                                string,
                                                                bool)
    IL_0026:  brfalse.s  IL_0054

    IL_0028:  ldc.i4.0
    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance string antlr.BaseAST::getText()
    IL_002f:  ldsfld     string[] antlr.BaseAST::tokenNames
    IL_0034:  ldarg.0
    IL_0035:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_003a:  ldelem.ref
    IL_003b:  ldstr      "\""
    IL_0040:  ldstr      "\""
    IL_0045:  call       string antlr.StringUtils::stripFrontBack(string,
                                                                  string,
                                                                  string)
    IL_004a:  ldc.i4.1
    IL_004b:  call       int32 [mscorlib]System.String::Compare(string,
                                                                string,
                                                                bool)
    IL_0050:  ceq
    IL_0052:  br.s       IL_0055

    IL_0054:  ldc.i4.1
    IL_0055:  stloc.2
    IL_0056:  ldloc.2
    IL_0057:  brtrue.s   IL_00a4

    IL_0059:  nop
    IL_005a:  ldloc.0
    IL_005b:  ldc.i4.s   91
    IL_005d:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0062:  pop
    IL_0063:  ldloc.0
    IL_0064:  ldarg.0
    IL_0065:  callvirt   instance string antlr.BaseAST::getText()
    IL_006a:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_006f:  pop
    IL_0070:  ldloc.0
    IL_0071:  ldstr      ",<"
    IL_0076:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_007b:  pop
    IL_007c:  ldloc.0
    IL_007d:  ldsfld     string[] antlr.BaseAST::tokenNames
    IL_0082:  ldarg.0
    IL_0083:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_0088:  ldelem.ref
    IL_0089:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_008e:  pop
    IL_008f:  ldloc.0
    IL_0090:  ldstr      ">]"
    IL_0095:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_009a:  pop
    IL_009b:  ldloc.0
    IL_009c:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_00a1:  stloc.1
    IL_00a2:  br.s       IL_00ad

    IL_00a4:  ldarg.0
    IL_00a5:  callvirt   instance string antlr.BaseAST::getText()
    IL_00aa:  stloc.1
    IL_00ab:  br.s       IL_00ad

    IL_00ad:  ldloc.1
    IL_00ae:  ret
  } // end of method BaseAST::ToString

  .method public hidebysig newslot virtual 
          instance string  ToStringList() cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             string V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  ldstr      ""
    IL_0008:  stloc.1
    IL_0009:  ldloc.0
    IL_000a:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_000f:  ldnull
    IL_0010:  ceq
    IL_0012:  stloc.3
    IL_0013:  ldloc.3
    IL_0014:  brtrue.s   IL_0022

    IL_0016:  ldloc.1
    IL_0017:  ldstr      " ("
    IL_001c:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0021:  stloc.1
    IL_0022:  ldloc.1
    IL_0023:  ldstr      " "
    IL_0028:  ldarg.0
    IL_0029:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_002e:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0033:  stloc.1
    IL_0034:  ldloc.0
    IL_0035:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003a:  ldnull
    IL_003b:  ceq
    IL_003d:  stloc.3
    IL_003e:  ldloc.3
    IL_003f:  brtrue.s   IL_005a

    IL_0041:  nop
    IL_0042:  ldloc.1
    IL_0043:  ldloc.0
    IL_0044:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0049:  castclass  antlr.BaseAST
    IL_004e:  callvirt   instance string antlr.BaseAST::ToStringList()
    IL_0053:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0058:  stloc.1
    IL_0059:  nop
    IL_005a:  ldloc.0
    IL_005b:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0060:  ldnull
    IL_0061:  ceq
    IL_0063:  stloc.3
    IL_0064:  ldloc.3
    IL_0065:  brtrue.s   IL_0073

    IL_0067:  ldloc.1
    IL_0068:  ldstr      " )"
    IL_006d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0072:  stloc.1
    IL_0073:  ldloc.0
    IL_0074:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0079:  ldnull
    IL_007a:  ceq
    IL_007c:  stloc.3
    IL_007d:  ldloc.3
    IL_007e:  brtrue.s   IL_0099

    IL_0080:  nop
    IL_0081:  ldloc.1
    IL_0082:  ldloc.0
    IL_0083:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0088:  castclass  antlr.BaseAST
    IL_008d:  callvirt   instance string antlr.BaseAST::ToStringList()
    IL_0092:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0097:  stloc.1
    IL_0098:  nop
    IL_0099:  ldloc.1
    IL_009a:  stloc.2
    IL_009b:  br.s       IL_009d

    IL_009d:  ldloc.2
    IL_009e:  ret
  } // end of method BaseAST::ToStringList

  .method public hidebysig newslot virtual 
          instance string  ToStringTree() cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             string V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  ldstr      ""
    IL_0008:  stloc.1
    IL_0009:  ldloc.0
    IL_000a:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_000f:  ldnull
    IL_0010:  ceq
    IL_0012:  stloc.3
    IL_0013:  ldloc.3
    IL_0014:  brtrue.s   IL_0024

    IL_0016:  nop
    IL_0017:  ldloc.1
    IL_0018:  ldstr      " ("
    IL_001d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0022:  stloc.1
    IL_0023:  nop
    IL_0024:  ldloc.1
    IL_0025:  ldstr      " "
    IL_002a:  ldarg.0
    IL_002b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0030:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0035:  stloc.1
    IL_0036:  ldloc.0
    IL_0037:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003c:  ldnull
    IL_003d:  ceq
    IL_003f:  stloc.3
    IL_0040:  ldloc.3
    IL_0041:  brtrue.s   IL_005c

    IL_0043:  nop
    IL_0044:  ldloc.1
    IL_0045:  ldloc.0
    IL_0046:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_004b:  castclass  antlr.BaseAST
    IL_0050:  callvirt   instance string antlr.BaseAST::ToStringList()
    IL_0055:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_005a:  stloc.1
    IL_005b:  nop
    IL_005c:  ldloc.0
    IL_005d:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0062:  ldnull
    IL_0063:  ceq
    IL_0065:  stloc.3
    IL_0066:  ldloc.3
    IL_0067:  brtrue.s   IL_0077

    IL_0069:  nop
    IL_006a:  ldloc.1
    IL_006b:  ldstr      " )"
    IL_0070:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0075:  stloc.1
    IL_0076:  nop
    IL_0077:  ldloc.1
    IL_0078:  stloc.2
    IL_0079:  br.s       IL_007b

    IL_007b:  ldloc.2
    IL_007c:  ret
  } // end of method BaseAST::ToStringTree

  .method public hidebysig newslot virtual 
          instance string  ToTree() cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldsfld     string [mscorlib]System.String::Empty
    IL_0007:  callvirt   instance string antlr.BaseAST::ToTree(string)
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method BaseAST::ToTree

  .method public hidebysig newslot virtual 
          instance string  ToTree(string prefix) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             string V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(string)
    IL_0007:  stloc.0
    IL_0008:  ldarg.0
    IL_0009:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getNextSibling()
    IL_000e:  ldnull
    IL_000f:  ceq
    IL_0011:  ldc.i4.0
    IL_0012:  ceq
    IL_0014:  stloc.2
    IL_0015:  ldloc.2
    IL_0016:  brtrue.s   IL_0026

    IL_0018:  ldloc.0
    IL_0019:  ldstr      "+--"
    IL_001e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0023:  pop
    IL_0024:  br.s       IL_0032

    IL_0026:  ldloc.0
    IL_0027:  ldstr      "|--"
    IL_002c:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0031:  pop
    IL_0032:  ldloc.0
    IL_0033:  ldarg.0
    IL_0034:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0039:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_003e:  pop
    IL_003f:  ldloc.0
    IL_0040:  call       string [mscorlib]System.Environment::get_NewLine()
    IL_0045:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_004a:  pop
    IL_004b:  ldarg.0
    IL_004c:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0051:  ldnull
    IL_0052:  ceq
    IL_0054:  stloc.2
    IL_0055:  ldloc.2
    IL_0056:  brtrue.s   IL_00b0

    IL_0058:  nop
    IL_0059:  ldarg.0
    IL_005a:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getNextSibling()
    IL_005f:  ldnull
    IL_0060:  ceq
    IL_0062:  ldc.i4.0
    IL_0063:  ceq
    IL_0065:  stloc.2
    IL_0066:  ldloc.2
    IL_0067:  brtrue.s   IL_008d

    IL_0069:  ldloc.0
    IL_006a:  ldarg.0
    IL_006b:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0070:  castclass  antlr.BaseAST
    IL_0075:  ldarg.1
    IL_0076:  ldstr      "   "
    IL_007b:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0080:  callvirt   instance string antlr.BaseAST::ToTree(string)
    IL_0085:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_008a:  pop
    IL_008b:  br.s       IL_00af

    IL_008d:  ldloc.0
    IL_008e:  ldarg.0
    IL_008f:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_0094:  castclass  antlr.BaseAST
    IL_0099:  ldarg.1
    IL_009a:  ldstr      "|  "
    IL_009f:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_00a4:  callvirt   instance string antlr.BaseAST::ToTree(string)
    IL_00a9:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00ae:  pop
    IL_00af:  nop
    IL_00b0:  ldarg.0
    IL_00b1:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getNextSibling()
    IL_00b6:  ldnull
    IL_00b7:  ceq
    IL_00b9:  stloc.2
    IL_00ba:  ldloc.2
    IL_00bb:  brtrue.s   IL_00d5

    IL_00bd:  ldloc.0
    IL_00be:  ldarg.0
    IL_00bf:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getNextSibling()
    IL_00c4:  castclass  antlr.BaseAST
    IL_00c9:  ldarg.1
    IL_00ca:  callvirt   instance string antlr.BaseAST::ToTree(string)
    IL_00cf:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00d4:  pop
    IL_00d5:  ldloc.0
    IL_00d6:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_00db:  stloc.1
    IL_00dc:  br.s       IL_00de

    IL_00de:  ldloc.1
    IL_00df:  ret
  } // end of method BaseAST::ToTree

  .method public hidebysig static string 
          decode(string text) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0,
             char V_1,
             char V_2,
             char V_3,
             char V_4,
             char V_5,
             class [mscorlib]System.Text.StringBuilder V_6,
             int32 V_7,
             string V_8,
             bool V_9)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.s    V_6
    IL_0008:  ldc.i4.0
    IL_0009:  stloc.s    V_7
    IL_000b:  br         IL_01a6

    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldloc.s    V_7
    IL_0014:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0019:  stloc.0
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.s   38
    IL_001d:  ceq
    IL_001f:  ldc.i4.0
    IL_0020:  ceq
    IL_0022:  stloc.s    V_9
    IL_0024:  ldloc.s    V_9
    IL_0026:  brtrue     IL_0196

    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  ldloc.s    V_7
    IL_002f:  ldc.i4.1
    IL_0030:  add
    IL_0031:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0036:  stloc.1
    IL_0037:  ldarg.0
    IL_0038:  ldloc.s    V_7
    IL_003a:  ldc.i4.2
    IL_003b:  add
    IL_003c:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0041:  stloc.2
    IL_0042:  ldarg.0
    IL_0043:  ldloc.s    V_7
    IL_0045:  ldc.i4.3
    IL_0046:  add
    IL_0047:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_004c:  stloc.3
    IL_004d:  ldarg.0
    IL_004e:  ldloc.s    V_7
    IL_0050:  ldc.i4.4
    IL_0051:  add
    IL_0052:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0057:  stloc.s    V_4
    IL_0059:  ldarg.0
    IL_005a:  ldloc.s    V_7
    IL_005c:  ldc.i4.5
    IL_005d:  add
    IL_005e:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0063:  stloc.s    V_5
    IL_0065:  ldloc.1
    IL_0066:  ldc.i4.s   97
    IL_0068:  bne.un.s   IL_007f

    IL_006a:  ldloc.2
    IL_006b:  ldc.i4.s   109
    IL_006d:  bne.un.s   IL_007f

    IL_006f:  ldloc.3
    IL_0070:  ldc.i4.s   112
    IL_0072:  bne.un.s   IL_007f

    IL_0074:  ldloc.s    V_4
    IL_0076:  ldc.i4.s   59
    IL_0078:  ceq
    IL_007a:  ldc.i4.0
    IL_007b:  ceq
    IL_007d:  br.s       IL_0080

    IL_007f:  ldc.i4.1
    IL_0080:  stloc.s    V_9
    IL_0082:  ldloc.s    V_9
    IL_0084:  brtrue.s   IL_00a0

    IL_0086:  nop
    IL_0087:  ldloc.s    V_6
    IL_0089:  ldstr      "&"
    IL_008e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0093:  pop
    IL_0094:  ldloc.s    V_7
    IL_0096:  ldc.i4.5
    IL_0097:  add
    IL_0098:  stloc.s    V_7
    IL_009a:  nop
    IL_009b:  br         IL_0193

    IL_00a0:  ldloc.1
    IL_00a1:  ldc.i4.s   108
    IL_00a3:  bne.un.s   IL_00b4

    IL_00a5:  ldloc.2
    IL_00a6:  ldc.i4.s   116
    IL_00a8:  bne.un.s   IL_00b4

    IL_00aa:  ldloc.3
    IL_00ab:  ldc.i4.s   59
    IL_00ad:  ceq
    IL_00af:  ldc.i4.0
    IL_00b0:  ceq
    IL_00b2:  br.s       IL_00b5

    IL_00b4:  ldc.i4.1
    IL_00b5:  stloc.s    V_9
    IL_00b7:  ldloc.s    V_9
    IL_00b9:  brtrue.s   IL_00d5

    IL_00bb:  nop
    IL_00bc:  ldloc.s    V_6
    IL_00be:  ldstr      "<"
    IL_00c3:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00c8:  pop
    IL_00c9:  ldloc.s    V_7
    IL_00cb:  ldc.i4.4
    IL_00cc:  add
    IL_00cd:  stloc.s    V_7
    IL_00cf:  nop
    IL_00d0:  br         IL_0193

    IL_00d5:  ldloc.1
    IL_00d6:  ldc.i4.s   103
    IL_00d8:  bne.un.s   IL_00e9

    IL_00da:  ldloc.2
    IL_00db:  ldc.i4.s   116
    IL_00dd:  bne.un.s   IL_00e9

    IL_00df:  ldloc.3
    IL_00e0:  ldc.i4.s   59
    IL_00e2:  ceq
    IL_00e4:  ldc.i4.0
    IL_00e5:  ceq
    IL_00e7:  br.s       IL_00ea

    IL_00e9:  ldc.i4.1
    IL_00ea:  stloc.s    V_9
    IL_00ec:  ldloc.s    V_9
    IL_00ee:  brtrue.s   IL_010a

    IL_00f0:  nop
    IL_00f1:  ldloc.s    V_6
    IL_00f3:  ldstr      ">"
    IL_00f8:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00fd:  pop
    IL_00fe:  ldloc.s    V_7
    IL_0100:  ldc.i4.4
    IL_0101:  add
    IL_0102:  stloc.s    V_7
    IL_0104:  nop
    IL_0105:  br         IL_0193

    IL_010a:  ldloc.1
    IL_010b:  ldc.i4.s   113
    IL_010d:  bne.un.s   IL_012a

    IL_010f:  ldloc.2
    IL_0110:  ldc.i4.s   117
    IL_0112:  bne.un.s   IL_012a

    IL_0114:  ldloc.3
    IL_0115:  ldc.i4.s   111
    IL_0117:  bne.un.s   IL_012a

    IL_0119:  ldloc.s    V_4
    IL_011b:  ldc.i4.s   116
    IL_011d:  bne.un.s   IL_012a

    IL_011f:  ldloc.s    V_5
    IL_0121:  ldc.i4.s   59
    IL_0123:  ceq
    IL_0125:  ldc.i4.0
    IL_0126:  ceq
    IL_0128:  br.s       IL_012b

    IL_012a:  ldc.i4.1
    IL_012b:  stloc.s    V_9
    IL_012d:  ldloc.s    V_9
    IL_012f:  brtrue.s   IL_0148

    IL_0131:  nop
    IL_0132:  ldloc.s    V_6
    IL_0134:  ldstr      "\""
    IL_0139:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_013e:  pop
    IL_013f:  ldloc.s    V_7
    IL_0141:  ldc.i4.6
    IL_0142:  add
    IL_0143:  stloc.s    V_7
    IL_0145:  nop
    IL_0146:  br.s       IL_0193

    IL_0148:  ldloc.1
    IL_0149:  ldc.i4.s   97
    IL_014b:  bne.un.s   IL_0168

    IL_014d:  ldloc.2
    IL_014e:  ldc.i4.s   112
    IL_0150:  bne.un.s   IL_0168

    IL_0152:  ldloc.3
    IL_0153:  ldc.i4.s   111
    IL_0155:  bne.un.s   IL_0168

    IL_0157:  ldloc.s    V_4
    IL_0159:  ldc.i4.s   115
    IL_015b:  bne.un.s   IL_0168

    IL_015d:  ldloc.s    V_5
    IL_015f:  ldc.i4.s   59
    IL_0161:  ceq
    IL_0163:  ldc.i4.0
    IL_0164:  ceq
    IL_0166:  br.s       IL_0169

    IL_0168:  ldc.i4.1
    IL_0169:  stloc.s    V_9
    IL_016b:  ldloc.s    V_9
    IL_016d:  brtrue.s   IL_0186

    IL_016f:  nop
    IL_0170:  ldloc.s    V_6
    IL_0172:  ldstr      "'"
    IL_0177:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_017c:  pop
    IL_017d:  ldloc.s    V_7
    IL_017f:  ldc.i4.6
    IL_0180:  add
    IL_0181:  stloc.s    V_7
    IL_0183:  nop
    IL_0184:  br.s       IL_0193

    IL_0186:  ldloc.s    V_6
    IL_0188:  ldstr      "&"
    IL_018d:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0192:  pop
    IL_0193:  nop
    IL_0194:  br.s       IL_019f

    IL_0196:  ldloc.s    V_6
    IL_0198:  ldloc.0
    IL_0199:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_019e:  pop
    IL_019f:  nop
    IL_01a0:  ldloc.s    V_7
    IL_01a2:  ldc.i4.1
    IL_01a3:  add
    IL_01a4:  stloc.s    V_7
    IL_01a6:  ldloc.s    V_7
    IL_01a8:  ldarg.0
    IL_01a9:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_01ae:  clt
    IL_01b0:  stloc.s    V_9
    IL_01b2:  ldloc.s    V_9
    IL_01b4:  brtrue     IL_0010

    IL_01b9:  ldloc.s    V_6
    IL_01bb:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_01c0:  stloc.s    V_8
    IL_01c2:  br.s       IL_01c4

    IL_01c4:  ldloc.s    V_8
    IL_01c6:  ret
  } // end of method BaseAST::decode

  .method public hidebysig static string 
          encode(string text) cil managed
  {
    // 
    .maxstack  2
    .locals init (char V_0,
             class [mscorlib]System.Text.StringBuilder V_1,
             int32 V_2,
             string V_3,
             char V_4,
             bool V_5)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.1
    IL_0007:  ldc.i4.0
    IL_0008:  stloc.2
    IL_0009:  br         IL_00a5

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldloc.2
    IL_0011:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  stloc.s    V_4
    IL_001a:  ldloc.s    V_4
    IL_001c:  ldc.i4.s   34
    IL_001e:  beq.s      IL_0077

    IL_0020:  ldloc.s    V_4
    IL_0022:  ldc.i4.s   38
    IL_0024:  sub
    IL_0025:  switch     ( 
                          IL_004a,
                          IL_0086)
    IL_0032:  ldloc.s    V_4
    IL_0034:  ldc.i4.s   60
    IL_0036:  sub
    IL_0037:  switch     ( 
                          IL_0059,
                          IL_0095,
                          IL_0068)
    IL_0048:  br.s       IL_0095

    IL_004a:  nop
    IL_004b:  ldloc.1
    IL_004c:  ldstr      "&amp;"
    IL_0051:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0056:  pop
    IL_0057:  br.s       IL_00a0

    IL_0059:  nop
    IL_005a:  ldloc.1
    IL_005b:  ldstr      "&lt;"
    IL_0060:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0065:  pop
    IL_0066:  br.s       IL_00a0

    IL_0068:  nop
    IL_0069:  ldloc.1
    IL_006a:  ldstr      "&gt;"
    IL_006f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0074:  pop
    IL_0075:  br.s       IL_00a0

    IL_0077:  nop
    IL_0078:  ldloc.1
    IL_0079:  ldstr      "&quot;"
    IL_007e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0083:  pop
    IL_0084:  br.s       IL_00a0

    IL_0086:  nop
    IL_0087:  ldloc.1
    IL_0088:  ldstr      "&apos;"
    IL_008d:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0092:  pop
    IL_0093:  br.s       IL_00a0

    IL_0095:  nop
    IL_0096:  ldloc.1
    IL_0097:  ldloc.0
    IL_0098:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_009d:  pop
    IL_009e:  br.s       IL_00a0

    IL_00a0:  nop
    IL_00a1:  ldloc.2
    IL_00a2:  ldc.i4.1
    IL_00a3:  add
    IL_00a4:  stloc.2
    IL_00a5:  ldloc.2
    IL_00a6:  ldarg.0
    IL_00a7:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_00ac:  clt
    IL_00ae:  stloc.s    V_5
    IL_00b0:  ldloc.s    V_5
    IL_00b2:  brtrue     IL_000e

    IL_00b7:  ldloc.1
    IL_00b8:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_00bd:  stloc.3
    IL_00be:  br.s       IL_00c0

    IL_00c0:  ldloc.3
    IL_00c1:  ret
  } // end of method BaseAST::encode

  .method public hidebysig newslot virtual 
          instance void  xmlSerializeNode(class [mscorlib]System.IO.TextWriter outWriter) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   100
    IL_0003:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(int32)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldstr      "<"
    IL_000f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0014:  pop
    IL_0015:  ldloc.0
    IL_0016:  ldarg.0
    IL_0017:  call       instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_001c:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_0021:  ldstr      " "
    IL_0026:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_002b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0030:  pop
    IL_0031:  ldloc.0
    IL_0032:  ldc.i4.5
    IL_0033:  newarr     [mscorlib]System.Object
    IL_0038:  stloc.1
    IL_0039:  ldloc.1
    IL_003a:  ldc.i4.0
    IL_003b:  ldstr      "text=\""
    IL_0040:  stelem.ref
    IL_0041:  ldloc.1
    IL_0042:  ldc.i4.1
    IL_0043:  ldarg.0
    IL_0044:  callvirt   instance string antlr.BaseAST::getText()
    IL_0049:  call       string antlr.BaseAST::encode(string)
    IL_004e:  stelem.ref
    IL_004f:  ldloc.1
    IL_0050:  ldc.i4.2
    IL_0051:  ldstr      "\" type=\""
    IL_0056:  stelem.ref
    IL_0057:  ldloc.1
    IL_0058:  ldc.i4.3
    IL_0059:  ldarg.0
    IL_005a:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_005f:  box        [mscorlib]System.Int32
    IL_0064:  stelem.ref
    IL_0065:  ldloc.1
    IL_0066:  ldc.i4.4
    IL_0067:  ldstr      "\"/>"
    IL_006c:  stelem.ref
    IL_006d:  ldloc.1
    IL_006e:  call       string [mscorlib]System.String::Concat(object[])
    IL_0073:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0078:  pop
    IL_0079:  ldarg.1
    IL_007a:  ldloc.0
    IL_007b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0080:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0085:  nop
    IL_0086:  ret
  } // end of method BaseAST::xmlSerializeNode

  .method public hidebysig newslot virtual 
          instance void  xmlSerializeRootOpen(class [mscorlib]System.IO.TextWriter outWriter) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   100
    IL_0003:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(int32)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldstr      "<"
    IL_000f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0014:  pop
    IL_0015:  ldloc.0
    IL_0016:  ldarg.0
    IL_0017:  call       instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_001c:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_0021:  ldstr      " "
    IL_0026:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_002b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0030:  pop
    IL_0031:  ldloc.0
    IL_0032:  ldc.i4.5
    IL_0033:  newarr     [mscorlib]System.Object
    IL_0038:  stloc.1
    IL_0039:  ldloc.1
    IL_003a:  ldc.i4.0
    IL_003b:  ldstr      "text=\""
    IL_0040:  stelem.ref
    IL_0041:  ldloc.1
    IL_0042:  ldc.i4.1
    IL_0043:  ldarg.0
    IL_0044:  callvirt   instance string antlr.BaseAST::getText()
    IL_0049:  call       string antlr.BaseAST::encode(string)
    IL_004e:  stelem.ref
    IL_004f:  ldloc.1
    IL_0050:  ldc.i4.2
    IL_0051:  ldstr      "\" type=\""
    IL_0056:  stelem.ref
    IL_0057:  ldloc.1
    IL_0058:  ldc.i4.3
    IL_0059:  ldarg.0
    IL_005a:  callvirt   instance int32 antlr.BaseAST::get_Type()
    IL_005f:  box        [mscorlib]System.Int32
    IL_0064:  stelem.ref
    IL_0065:  ldloc.1
    IL_0066:  ldc.i4.4
    IL_0067:  ldstr      "\">\n"
    IL_006c:  stelem.ref
    IL_006d:  ldloc.1
    IL_006e:  call       string [mscorlib]System.String::Concat(object[])
    IL_0073:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0078:  pop
    IL_0079:  ldarg.1
    IL_007a:  ldloc.0
    IL_007b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0080:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0085:  nop
    IL_0086:  ret
  } // end of method BaseAST::xmlSerializeRootOpen

  .method public hidebysig newslot virtual 
          instance void  xmlSerializeRootClose(class [mscorlib]System.IO.TextWriter outWriter) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldstr      "</"
    IL_0007:  ldarg.0
    IL_0008:  call       instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_000d:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_0012:  ldstr      ">\n"
    IL_0017:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_001c:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0021:  nop
    IL_0022:  ret
  } // end of method BaseAST::xmlSerializeRootClose

  .method public hidebysig newslot virtual 
          instance void  xmlSerialize(class [mscorlib]System.IO.TextWriter outWriter) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_005d

    IL_0005:  nop
    IL_0006:  ldloc.0
    IL_0007:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_000c:  ldnull
    IL_000d:  ceq
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.1
    IL_0013:  ldloc.1
    IL_0014:  brtrue.s   IL_0027

    IL_0016:  nop
    IL_0017:  ldloc.0
    IL_0018:  castclass  antlr.BaseAST
    IL_001d:  ldarg.1
    IL_001e:  callvirt   instance void antlr.BaseAST::xmlSerializeNode(class [mscorlib]System.IO.TextWriter)
    IL_0023:  nop
    IL_0024:  nop
    IL_0025:  br.s       IL_0055

    IL_0027:  nop
    IL_0028:  ldloc.0
    IL_0029:  castclass  antlr.BaseAST
    IL_002e:  ldarg.1
    IL_002f:  callvirt   instance void antlr.BaseAST::xmlSerializeRootOpen(class [mscorlib]System.IO.TextWriter)
    IL_0034:  nop
    IL_0035:  ldloc.0
    IL_0036:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_003b:  castclass  antlr.BaseAST
    IL_0040:  ldarg.1
    IL_0041:  callvirt   instance void antlr.BaseAST::xmlSerialize(class [mscorlib]System.IO.TextWriter)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  castclass  antlr.BaseAST
    IL_004d:  ldarg.1
    IL_004e:  callvirt   instance void antlr.BaseAST::xmlSerializeRootClose(class [mscorlib]System.IO.TextWriter)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldloc.0
    IL_0057:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_005c:  stloc.0
    IL_005d:  ldloc.0
    IL_005e:  ldnull
    IL_005f:  ceq
    IL_0061:  ldc.i4.0
    IL_0062:  ceq
    IL_0064:  stloc.1
    IL_0065:  ldloc.1
    IL_0066:  brtrue.s   IL_0005

    IL_0068:  ret
  } // end of method BaseAST::xmlSerialize

  .method public hidebysig newslot virtual 
          instance object  Clone() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 70 72 65 63 61 74 65 64 20 73 69   // ..=Deprecated si
                                                                              6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E 37 2E   // nce version 2.7.
                                                                              32 2E 20 55 73 65 20 41 53 54 46 61 63 74 6F 72   // 2. Use ASTFactor
                                                                              79 2E 64 75 70 28 29 20 69 6E 73 74 65 61 64 2E   // y.dup() instead.
                                                                              00 00 00 ) 
    // 
    .maxstack  1
    .locals init (object V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance object [mscorlib]System.Object::MemberwiseClone()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method BaseAST::Clone

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance int32 [mscorlib]System.Object::GetHashCode()
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method BaseAST::GetHashCode

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method BaseAST::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  stsfld     bool antlr.BaseAST::verboseStringConversion
    IL_0006:  ldnull
    IL_0007:  stsfld     string[] antlr.BaseAST::tokenNames
    IL_000c:  ret
  } // end of method BaseAST::.cctor

  .property instance int32 Type()
  {
    .get instance int32 antlr.BaseAST::get_Type()
    .set instance void antlr.BaseAST::set_Type(int32)
  } // end of property BaseAST::Type
} // end of class antlr.BaseAST

.class public auto ansi beforefieldinit antlr.CommonAST
       extends antlr.BaseAST
{
  .class auto ansi nested public beforefieldinit CommonASTCreator
         extends antlr.ASTNodeCreator
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.ASTNodeCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method CommonASTCreator::.ctor

    .method public hidebysig specialname virtual 
            instance string  get_ASTNodeTypeName() cil managed
    {
      // 
      .maxstack  1
      .locals init (string V_0)
      IL_0000:  nop
      IL_0001:  ldtoken    antlr.CommonAST
      IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_000b:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0010:  stloc.0
      IL_0011:  br.s       IL_0013

      IL_0013:  ldloc.0
      IL_0014:  ret
    } // end of method CommonASTCreator::get_ASTNodeTypeName

    .method public hidebysig virtual instance class antlr.collections.AST 
            Create() cil managed
    {
      // 
      .maxstack  1
      .locals init (class antlr.collections.AST V_0)
      IL_0000:  nop
      IL_0001:  newobj     instance void antlr.CommonAST::.ctor()
      IL_0006:  stloc.0
      IL_0007:  br.s       IL_0009

      IL_0009:  ldloc.0
      IL_000a:  ret
    } // end of method CommonASTCreator::Create

    .property instance string ASTNodeTypeName()
    {
      .get instance string antlr.CommonAST/CommonASTCreator::get_ASTNodeTypeName()
    } // end of property CommonASTCreator::ASTNodeTypeName
  } // end of class CommonASTCreator

  .field public static initonly class antlr.CommonAST/CommonASTCreator Creator
  .field assembly int32 ttype
  .field assembly string text
  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.CommonAST another) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 70 72 65 63 61 74 65 64 20 73 69   // ..=Deprecated si
                                                                              6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E 37 2E   // nce version 2.7.
                                                                              32 2E 20 55 73 65 20 41 53 54 46 61 63 74 6F 72   // 2. Use ASTFactor
                                                                              79 2E 64 75 70 28 29 20 69 6E 73 74 65 61 64 2E   // y.dup() instead.
                                                                              00 00 00 ) 
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.CommonAST::ttype
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.BaseAST::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  ldfld      int32 antlr.CommonAST::ttype
    IL_0016:  stfld      int32 antlr.CommonAST::ttype
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  ldfld      string antlr.CommonAST::text
    IL_0022:  brfalse.s  IL_0031

    IL_0024:  ldarg.1
    IL_0025:  ldfld      string antlr.CommonAST::text
    IL_002a:  call       string [mscorlib]System.String::Copy(string)
    IL_002f:  br.s       IL_0032

    IL_0031:  ldnull
    IL_0032:  stfld      string antlr.CommonAST::text
    IL_0037:  nop
    IL_0038:  ret
  } // end of method CommonAST::.ctor

  .method public hidebysig virtual instance string 
          getText() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.CommonAST::text
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonAST::getText

  .method public hidebysig specialname virtual 
          instance int32  get_Type() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.CommonAST::ttype
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonAST::get_Type

  .method public hidebysig specialname virtual 
          instance void  set_Type(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.CommonAST::ttype
    IL_0008:  ret
  } // end of method CommonAST::set_Type

  .method public hidebysig virtual instance void 
          initialize(int32 t,
                     string txt) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.BaseAST::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance void antlr.BaseAST::setText(string)
    IL_0010:  nop
    IL_0011:  ret
  } // end of method CommonAST::initialize

  .method public hidebysig virtual instance void 
          initialize(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance string antlr.collections.AST::getText()
    IL_0008:  callvirt   instance void antlr.BaseAST::setText(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_0015:  callvirt   instance void antlr.BaseAST::set_Type(int32)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method CommonAST::initialize

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.CommonAST::ttype
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.BaseAST::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ret
  } // end of method CommonAST::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.CommonAST::ttype
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.BaseAST::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  callvirt   instance void antlr.BaseAST::initialize(class antlr.IToken)
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method CommonAST::.ctor

  .method public hidebysig virtual instance void 
          initialize(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance string antlr.IToken::getText()
    IL_0008:  callvirt   instance void antlr.BaseAST::setText(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_0015:  callvirt   instance void antlr.BaseAST::set_Type(int32)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method CommonAST::initialize

  .method public hidebysig virtual instance void 
          setText(string text_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      string antlr.CommonAST::text
    IL_0008:  ret
  } // end of method CommonAST::setText

  .method public hidebysig virtual instance void 
          setType(int32 ttype_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.BaseAST::set_Type(int32)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method CommonAST::setType

  .method public hidebysig virtual instance object 
          Clone() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 70 72 65 63 61 74 65 64 20 73 69   // ..=Deprecated si
                                                                              6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E 37 2E   // nce version 2.7.
                                                                              32 2E 20 55 73 65 20 41 53 54 46 61 63 74 6F 72   // 2. Use ASTFactor
                                                                              79 2E 64 75 70 28 29 20 69 6E 73 74 65 61 64 2E   // y.dup() instead.
                                                                              00 00 00 ) 
    // 
    .maxstack  2
    .locals init (object V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  newobj     instance void antlr.CommonAST::.ctor(class antlr.CommonAST)
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonAST::Clone

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.CommonAST/CommonASTCreator::.ctor()
    IL_0005:  stsfld     class antlr.CommonAST/CommonASTCreator antlr.CommonAST::Creator
    IL_000a:  ret
  } // end of method CommonAST::.cctor

  .property instance int32 Type()
  {
    .get instance int32 antlr.CommonAST::get_Type()
    .set instance void antlr.CommonAST::set_Type(int32)
  } // end of property CommonAST::Type
} // end of class antlr.CommonAST

.class public abstract auto ansi beforefieldinit antlr.ASTNodeCreator
       extends [mscorlib]System.Object
{
  .method public hidebysig newslot specialname abstract virtual 
          instance string  get_ASTNodeTypeName() cil managed
  {
  } // end of method ASTNodeCreator::get_ASTNodeTypeName

  .method public hidebysig newslot abstract virtual 
          instance class antlr.collections.AST 
          Create() cil managed
  {
  } // end of method ASTNodeCreator::Create

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ASTNodeCreator::.ctor

  .property instance string ASTNodeTypeName()
  {
    .get instance string antlr.ASTNodeCreator::get_ASTNodeTypeName()
  } // end of property ASTNodeCreator::ASTNodeTypeName
} // end of class antlr.ASTNodeCreator

.class public auto ansi beforefieldinit antlr.debug.MessageEventArgs
       extends antlr.debug.ANTLREventArgs
{
  .field private string text_
  .field public static int32 WARNING
  .field public static int32 ERROR
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method MessageEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type',
                               string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  call       instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_0010:  nop
    IL_0011:  nop
    IL_0012:  ret
  } // end of method MessageEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance string  get_Text() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.debug.MessageEventArgs::text_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MessageEventArgs::get_Text

  .method public hidebysig newslot specialname virtual 
          instance void  set_Text(string 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      string antlr.debug.MessageEventArgs::text_
    IL_0008:  ret
  } // end of method MessageEventArgs::set_Text

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance void antlr.debug.ANTLREventArgs::setValues(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance void antlr.debug.MessageEventArgs::set_Text(string)
    IL_0010:  nop
    IL_0011:  ret
  } // end of method MessageEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      "ParserMessageEvent ["
    IL_0006:  ldarg.0
    IL_0007:  callvirt   instance int32 antlr.debug.ANTLREventArgs::get_Type()
    IL_000c:  ldsfld     int32 antlr.debug.MessageEventArgs::WARNING
    IL_0011:  beq.s      IL_001a

    IL_0013:  ldstr      "error,"
    IL_0018:  br.s       IL_001f

    IL_001a:  ldstr      "warning,"
    IL_001f:  ldarg.0
    IL_0020:  callvirt   instance string antlr.debug.MessageEventArgs::get_Text()
    IL_0025:  ldstr      "]"
    IL_002a:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string,
                                                                string)
    IL_002f:  stloc.0
    IL_0030:  br.s       IL_0032

    IL_0032:  ldloc.0
    IL_0033:  ret
  } // end of method MessageEventArgs::ToString

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  stsfld     int32 antlr.debug.MessageEventArgs::WARNING
    IL_0006:  ldc.i4.1
    IL_0007:  stsfld     int32 antlr.debug.MessageEventArgs::ERROR
    IL_000c:  ret
  } // end of method MessageEventArgs::.cctor

  .property instance string Text()
  {
    .get instance string antlr.debug.MessageEventArgs::get_Text()
    .set instance void antlr.debug.MessageEventArgs::set_Text(string)
  } // end of property MessageEventArgs::Text
} // end of class antlr.debug.MessageEventArgs

.class public abstract auto ansi beforefieldinit antlr.InputBuffer
       extends [mscorlib]System.Object
{
  .field famorassem int32 nMarkers
  .field famorassem int32 markerOffset
  .field famorassem int32 numToConsume
  .field family class [mscorlib]System.Collections.ArrayList queue
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.InputBuffer::nMarkers
    IL_0007:  ldarg.0
    IL_0008:  ldc.i4.0
    IL_0009:  stfld      int32 antlr.InputBuffer::markerOffset
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.0
    IL_0010:  stfld      int32 antlr.InputBuffer::numToConsume
    IL_0015:  ldarg.0
    IL_0016:  call       instance void [mscorlib]System.Object::.ctor()
    IL_001b:  nop
    IL_001c:  nop
    IL_001d:  ldarg.0
    IL_001e:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor()
    IL_0023:  stfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0028:  nop
    IL_0029:  ret
  } // end of method InputBuffer::.ctor

  .method public hidebysig newslot virtual 
          instance void  commit() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.InputBuffer::nMarkers
    IL_0008:  ldc.i4.1
    IL_0009:  sub
    IL_000a:  stfld      int32 antlr.InputBuffer::nMarkers
    IL_000f:  ret
  } // end of method InputBuffer::commit

  .method public hidebysig newslot virtual 
          instance char  consume() cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.InputBuffer::numToConsume
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.InputBuffer::numToConsume
    IL_000f:  ldarg.0
    IL_0010:  ldc.i4.1
    IL_0011:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_0016:  stloc.0
    IL_0017:  br.s       IL_0019

    IL_0019:  ldloc.0
    IL_001a:  ret
  } // end of method InputBuffer::consume

  .method public hidebysig newslot abstract virtual 
          instance void  fill(int32 amount) cil managed
  {
  } // end of method InputBuffer::fill

  .method public hidebysig newslot virtual 
          instance string  getLAChars() cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             char[] V_1,
             string V_2)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_000d:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_0012:  ldarg.0
    IL_0013:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_0018:  sub
    IL_0019:  newarr     [mscorlib]System.Char
    IL_001e:  stloc.1
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0025:  ldloc.1
    IL_0026:  ldarg.0
    IL_0027:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_002c:  callvirt   instance void [mscorlib]System.Collections.ArrayList::CopyTo(class [mscorlib]System.Array,
                                                                                      int32)
    IL_0031:  nop
    IL_0032:  ldloc.0
    IL_0033:  ldloc.1
    IL_0034:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char[])
    IL_0039:  pop
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0040:  stloc.2
    IL_0041:  br.s       IL_0043

    IL_0043:  ldloc.2
    IL_0044:  ret
  } // end of method InputBuffer::getLAChars

  .method public hidebysig newslot virtual 
          instance string  getMarkedChars() cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             char[] V_1,
             string V_2)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_000d:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_0012:  ldarg.0
    IL_0013:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_0018:  sub
    IL_0019:  newarr     [mscorlib]System.Char
    IL_001e:  stloc.1
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0025:  ldloc.1
    IL_0026:  ldarg.0
    IL_0027:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_002c:  callvirt   instance void [mscorlib]System.Collections.ArrayList::CopyTo(class [mscorlib]System.Array,
                                                                                      int32)
    IL_0031:  nop
    IL_0032:  ldloc.0
    IL_0033:  ldloc.1
    IL_0034:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char[])
    IL_0039:  pop
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0040:  stloc.2
    IL_0041:  br.s       IL_0043

    IL_0043:  ldloc.2
    IL_0044:  ret
  } // end of method InputBuffer::getMarkedChars

  .method public hidebysig newslot virtual 
          instance bool  isMarked() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.InputBuffer::nMarkers
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0010

    IL_0010:  ldloc.0
    IL_0011:  ret
  } // end of method InputBuffer::isMarked

  .method public hidebysig newslot virtual 
          instance char  LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.InputBuffer::fill(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_0015:  ldarg.1
    IL_0016:  add
    IL_0017:  ldc.i4.1
    IL_0018:  sub
    IL_0019:  callvirt   instance object [mscorlib]System.Collections.ArrayList::get_Item(int32)
    IL_001e:  unbox.any  [mscorlib]System.Char
    IL_0023:  stloc.0
    IL_0024:  br.s       IL_0026

    IL_0026:  ldloc.0
    IL_0027:  ret
  } // end of method InputBuffer::LA

  .method public hidebysig newslot virtual 
          instance int32  mark() cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.InputBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  dup
    IL_000a:  ldfld      int32 antlr.InputBuffer::nMarkers
    IL_000f:  ldc.i4.1
    IL_0010:  add
    IL_0011:  stfld      int32 antlr.InputBuffer::nMarkers
    IL_0016:  ldarg.0
    IL_0017:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_001c:  stloc.0
    IL_001d:  br.s       IL_001f

    IL_001f:  ldloc.0
    IL_0020:  ret
  } // end of method InputBuffer::mark

  .method public hidebysig newslot virtual 
          instance void  rewind(int32 mark) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.InputBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int32 antlr.InputBuffer::markerOffset
    IL_000f:  ldarg.0
    IL_0010:  dup
    IL_0011:  ldfld      int32 antlr.InputBuffer::nMarkers
    IL_0016:  ldc.i4.1
    IL_0017:  sub
    IL_0018:  stfld      int32 antlr.InputBuffer::nMarkers
    IL_001d:  ret
  } // end of method InputBuffer::rewind

  .method public hidebysig newslot virtual 
          instance void  reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.InputBuffer::nMarkers
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.0
    IL_000a:  stfld      int32 antlr.InputBuffer::markerOffset
    IL_000f:  ldarg.0
    IL_0010:  ldc.i4.0
    IL_0011:  stfld      int32 antlr.InputBuffer::numToConsume
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_001c:  callvirt   instance void [mscorlib]System.Collections.ArrayList::Clear()
    IL_0021:  nop
    IL_0022:  ret
  } // end of method InputBuffer::reset

  .method famorassem hidebysig newslot virtual 
          instance void  syncConsume() cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.InputBuffer::numToConsume
    IL_0007:  ldc.i4.0
    IL_0008:  cgt
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_0056

    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldfld      int32 antlr.InputBuffer::nMarkers
    IL_0018:  ldc.i4.0
    IL_0019:  cgt
    IL_001b:  ldc.i4.0
    IL_001c:  ceq
    IL_001e:  stloc.0
    IL_001f:  ldloc.0
    IL_0020:  brtrue.s   IL_0039

    IL_0022:  nop
    IL_0023:  ldarg.0
    IL_0024:  dup
    IL_0025:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_002a:  ldarg.0
    IL_002b:  ldfld      int32 antlr.InputBuffer::numToConsume
    IL_0030:  add
    IL_0031:  stfld      int32 antlr.InputBuffer::markerOffset
    IL_0036:  nop
    IL_0037:  br.s       IL_004e

    IL_0039:  nop
    IL_003a:  ldarg.0
    IL_003b:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0040:  ldc.i4.0
    IL_0041:  ldarg.0
    IL_0042:  ldfld      int32 antlr.InputBuffer::numToConsume
    IL_0047:  callvirt   instance void [mscorlib]System.Collections.ArrayList::RemoveRange(int32,
                                                                                           int32)
    IL_004c:  nop
    IL_004d:  nop
    IL_004e:  ldarg.0
    IL_004f:  ldc.i4.0
    IL_0050:  stfld      int32 antlr.InputBuffer::numToConsume
    IL_0055:  nop
    IL_0056:  ret
  } // end of method InputBuffer::syncConsume

} // end of class antlr.InputBuffer

.class public auto ansi beforefieldinit antlr.debug.DebuggingInputBuffer
       extends antlr.InputBuffer
{
  .field private class antlr.InputBuffer buffer
  .field private class antlr.debug.InputBufferEventSupport inputBufferEventSupport
  .field private bool debugMode
  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.ArrayList 
          get_InputBufferListeners() cil managed
  {
    // 
    .maxstack  1
    .locals init (class [mscorlib]System.Collections.ArrayList V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0007:  callvirt   instance class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::get_InputBufferListeners()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method DebuggingInputBuffer::get_InputBufferListeners

  .method public hidebysig newslot specialname virtual 
          instance void  set_DebugMode(bool 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.debug.DebuggingInputBuffer::debugMode
    IL_0008:  ret
  } // end of method DebuggingInputBuffer::set_DebugMode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.InputBuffer buffer) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.1
    IL_0002:  stfld      bool antlr.debug.DebuggingInputBuffer::debugMode
    IL_0007:  ldarg.0
    IL_0008:  call       instance void antlr.InputBuffer::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  stfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0016:  ldarg.0
    IL_0017:  ldarg.0
    IL_0018:  newobj     instance void antlr.debug.InputBufferEventSupport::.ctor(object)
    IL_001d:  stfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0022:  nop
    IL_0023:  ret
  } // end of method DebuggingInputBuffer::.ctor

  .method public hidebysig newslot virtual 
          instance void  addInputBufferListener(class antlr.debug.InputBufferListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.InputBufferEventSupport::addInputBufferListener(class antlr.debug.InputBufferListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingInputBuffer::addInputBufferListener

  .method public hidebysig virtual instance char 
          consume() cil managed
  {
    // 
    .maxstack  2
    .locals init (char V_0,
             char V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   32
    IL_0003:  stloc.0
    .try
    {
      IL_0004:  nop
      IL_0005:  ldarg.0
      IL_0006:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
      IL_000b:  ldc.i4.1
      IL_000c:  callvirt   instance char antlr.InputBuffer::LA(int32)
      IL_0011:  stloc.0
      IL_0012:  nop
      IL_0013:  leave.s    IL_001a

    }  // end .try
    catch antlr.CharStreamException 
    {
      IL_0015:  pop
      IL_0016:  nop
      IL_0017:  nop
      IL_0018:  leave.s    IL_001a

    }  // end handler
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0021:  callvirt   instance char antlr.InputBuffer::consume()
    IL_0026:  pop
    IL_0027:  ldarg.0
    IL_0028:  ldfld      bool antlr.debug.DebuggingInputBuffer::debugMode
    IL_002d:  ldc.i4.0
    IL_002e:  ceq
    IL_0030:  stloc.2
    IL_0031:  ldloc.2
    IL_0032:  brtrue.s   IL_0041

    IL_0034:  ldarg.0
    IL_0035:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireConsume(char)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  stloc.1
    IL_0043:  br.s       IL_0045

    IL_0045:  ldloc.1
    IL_0046:  ret
  } // end of method DebuggingInputBuffer::consume

  .method public hidebysig virtual instance void 
          fill(int32 a) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.InputBuffer::fill(int32)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingInputBuffer::fill

  .method public hidebysig newslot virtual 
          instance bool  isDebugMode() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.DebuggingInputBuffer::debugMode
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method DebuggingInputBuffer::isDebugMode

  .method public hidebysig virtual instance bool 
          isMarked() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0007:  callvirt   instance bool antlr.InputBuffer::isMarked()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method DebuggingInputBuffer::isMarked

  .method public hidebysig virtual instance char 
          LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0,
             char V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance char antlr.InputBuffer::LA(int32)
    IL_000d:  stloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldfld      bool antlr.debug.DebuggingInputBuffer::debugMode
    IL_0014:  ldc.i4.0
    IL_0015:  ceq
    IL_0017:  stloc.2
    IL_0018:  ldloc.2
    IL_0019:  brtrue.s   IL_0029

    IL_001b:  ldarg.0
    IL_001c:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0021:  ldloc.0
    IL_0022:  ldarg.1
    IL_0023:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireLA(char,
                                                                                   int32)
    IL_0028:  nop
    IL_0029:  ldloc.0
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_002d

    IL_002d:  ldloc.1
    IL_002e:  ret
  } // end of method DebuggingInputBuffer::LA

  .method public hidebysig virtual instance int32 
          mark() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0007:  callvirt   instance int32 antlr.InputBuffer::mark()
    IL_000c:  stloc.0
    IL_000d:  ldarg.0
    IL_000e:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0013:  ldloc.0
    IL_0014:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireMark(int32)
    IL_0019:  nop
    IL_001a:  ldloc.0
    IL_001b:  stloc.1
    IL_001c:  br.s       IL_001e

    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method DebuggingInputBuffer::mark

  .method public hidebysig newslot virtual 
          instance void  removeInputBufferListener(class antlr.debug.InputBufferListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_001b

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void antlr.debug.InputBufferEventSupport::removeInputBufferListener(class antlr.debug.InputBufferListener)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method DebuggingInputBuffer::removeInputBufferListener

  .method public hidebysig virtual instance void 
          rewind(int32 mark) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.InputBuffer antlr.debug.DebuggingInputBuffer::buffer
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.InputBuffer::rewind(int32)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.InputBufferEventSupport antlr.debug.DebuggingInputBuffer::inputBufferEventSupport
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireRewind(int32)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method DebuggingInputBuffer::rewind

  .property instance class [mscorlib]System.Collections.ArrayList
          InputBufferListeners()
  {
    .get instance class [mscorlib]System.Collections.ArrayList antlr.debug.DebuggingInputBuffer::get_InputBufferListeners()
  } // end of property DebuggingInputBuffer::InputBufferListeners
  .property instance bool DebugMode()
  {
    .set instance void antlr.debug.DebuggingInputBuffer::set_DebugMode(bool)
  } // end of property DebuggingInputBuffer::DebugMode
} // end of class antlr.debug.DebuggingInputBuffer

.class interface public abstract auto ansi antlr.debug.SemanticPredicateListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  semanticPredicateEvaluated(object source,
                                                    class antlr.debug.SemanticPredicateEventArgs e) cil managed
  {
  } // end of method SemanticPredicateListener::semanticPredicateEvaluated

} // end of class antlr.debug.SemanticPredicateListener

.class interface public abstract auto ansi antlr.debug.IParserDebugSubject
       implements antlr.debug.IDebugSubject
{
  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_MatchedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_MatchedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_MatchedNotToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_MatchedNotToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MisMatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_MisMatchedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MisMatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_MisMatchedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_MisMatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_MisMatchedNotToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_MisMatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_MisMatchedNotToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_ConsumedToken(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_ConsumedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_ConsumedToken(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_ConsumedToken

  .method public hidebysig newslot specialname abstract virtual 
          instance void  add_TokenLA(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::add_TokenLA

  .method public hidebysig newslot specialname abstract virtual 
          instance void  remove_TokenLA(class antlr.debug.TokenEventHandler 'value') cil managed synchronized
  {
  } // end of method IParserDebugSubject::remove_TokenLA

  .event antlr.debug.MatchEventHandler MatchedToken
  {
    .removeon instance void antlr.debug.IParserDebugSubject::remove_MatchedToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.IParserDebugSubject::add_MatchedToken(class antlr.debug.MatchEventHandler)
  } // end of event IParserDebugSubject::MatchedToken
  .event antlr.debug.MatchEventHandler MatchedNotToken
  {
    .removeon instance void antlr.debug.IParserDebugSubject::remove_MatchedNotToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.IParserDebugSubject::add_MatchedNotToken(class antlr.debug.MatchEventHandler)
  } // end of event IParserDebugSubject::MatchedNotToken
  .event antlr.debug.MatchEventHandler MisMatchedToken
  {
    .removeon instance void antlr.debug.IParserDebugSubject::remove_MisMatchedToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.IParserDebugSubject::add_MisMatchedToken(class antlr.debug.MatchEventHandler)
  } // end of event IParserDebugSubject::MisMatchedToken
  .event antlr.debug.MatchEventHandler MisMatchedNotToken
  {
    .removeon instance void antlr.debug.IParserDebugSubject::remove_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.debug.IParserDebugSubject::add_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
  } // end of event IParserDebugSubject::MisMatchedNotToken
  .event antlr.debug.TokenEventHandler ConsumedToken
  {
    .removeon instance void antlr.debug.IParserDebugSubject::remove_ConsumedToken(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.debug.IParserDebugSubject::add_ConsumedToken(class antlr.debug.TokenEventHandler)
  } // end of event IParserDebugSubject::ConsumedToken
  .event antlr.debug.TokenEventHandler TokenLA
  {
    .addon instance void antlr.debug.IParserDebugSubject::add_TokenLA(class antlr.debug.TokenEventHandler)
    .removeon instance void antlr.debug.IParserDebugSubject::remove_TokenLA(class antlr.debug.TokenEventHandler)
  } // end of event IParserDebugSubject::TokenLA
} // end of class antlr.debug.IParserDebugSubject

.class public abstract auto ansi beforefieldinit antlr.Parser
       extends [mscorlib]System.Object
       implements antlr.debug.IParserDebugSubject,
                  antlr.debug.IDebugSubject
{
  .field private class [System]System.ComponentModel.EventHandlerList events_
  .field static assembly initonly object EnterRuleEventKey
  .field static assembly initonly object ExitRuleEventKey
  .field static assembly initonly object DoneEventKey
  .field static assembly initonly object ReportErrorEventKey
  .field static assembly initonly object ReportWarningEventKey
  .field static assembly initonly object NewLineEventKey
  .field static assembly initonly object MatchEventKey
  .field static assembly initonly object MatchNotEventKey
  .field static assembly initonly object MisMatchEventKey
  .field static assembly initonly object MisMatchNotEventKey
  .field static assembly initonly object ConsumeEventKey
  .field static assembly initonly object LAEventKey
  .field static assembly initonly object SemPredEvaluatedEventKey
  .field static assembly initonly object SynPredStartedEventKey
  .field static assembly initonly object SynPredFailedEventKey
  .field static assembly initonly object SynPredSucceededEventKey
  .field famorassem class antlr.ParserSharedInputState inputState
  .field famorassem string[] tokenNames
  .field famorassem class antlr.collections.AST returnAST
  .field famorassem class antlr.ASTFactory astFactory
  .field private bool ignoreInvalidDebugCalls
  .field famorassem int32 traceDepth
  .method famorassem hidebysig specialname 
          instance class [System]System.ComponentModel.EventHandlerList 
          get_Events() cil managed
  {
    // 
    .maxstack  1
    .locals init (class [System]System.ComponentModel.EventHandlerList V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [System]System.ComponentModel.EventHandlerList antlr.Parser::events_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Parser::get_Events

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [System]System.ComponentModel.EventHandlerList::.ctor()
    IL_0006:  stfld      class [System]System.ComponentModel.EventHandlerList antlr.Parser::events_
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void antlr.ASTFactory::.ctor()
    IL_0011:  stfld      class antlr.ASTFactory antlr.Parser::astFactory
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.0
    IL_0018:  stfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_001d:  ldarg.0
    IL_001e:  ldc.i4.0
    IL_001f:  stfld      int32 antlr.Parser::traceDepth
    IL_0024:  ldarg.0
    IL_0025:  call       instance void [mscorlib]System.Object::.ctor()
    IL_002a:  nop
    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  newobj     instance void antlr.ParserSharedInputState::.ctor()
    IL_0032:  stfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0037:  nop
    IL_0038:  ret
  } // end of method Parser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.ParserSharedInputState state) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [System]System.ComponentModel.EventHandlerList::.ctor()
    IL_0006:  stfld      class [System]System.ComponentModel.EventHandlerList antlr.Parser::events_
    IL_000b:  ldarg.0
    IL_000c:  newobj     instance void antlr.ASTFactory::.ctor()
    IL_0011:  stfld      class antlr.ASTFactory antlr.Parser::astFactory
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.0
    IL_0018:  stfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_001d:  ldarg.0
    IL_001e:  ldc.i4.0
    IL_001f:  stfld      int32 antlr.Parser::traceDepth
    IL_0024:  ldarg.0
    IL_0025:  call       instance void [mscorlib]System.Object::.ctor()
    IL_002a:  nop
    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  ldarg.1
    IL_002e:  stfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0033:  nop
    IL_0034:  ret
  } // end of method Parser::.ctor

  .method public hidebysig newslot specialname virtual final 
          instance void  add_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::EnterRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_EnterRule

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_EnterRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::EnterRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_EnterRule

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ExitRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_ExitRule

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ExitRule(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ExitRuleEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_ExitRule

  .method public hidebysig newslot specialname virtual final 
          instance void  add_Done(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::DoneEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_Done

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_Done(class antlr.debug.TraceEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::DoneEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_Done

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_ErrorReported

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ErrorReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_ErrorReported

  .method public hidebysig newslot specialname virtual final 
          instance void  add_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ReportWarningEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_WarningReported

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_WarningReported(class antlr.debug.MessageEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ReportWarningEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_WarningReported

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_MatchedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_MatchedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_MatchedNotToken

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_MatchedNotToken

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MisMatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_MisMatchedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MisMatchedToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_MisMatchedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  add_MisMatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_MisMatchedNotToken

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_MisMatchedNotToken(class antlr.debug.MatchEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_MisMatchedNotToken

  .method public hidebysig newslot specialname virtual final 
          instance void  add_ConsumedToken(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ConsumeEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_ConsumedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_ConsumedToken(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::ConsumeEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_ConsumedToken

  .method public hidebysig newslot specialname virtual final 
          instance void  add_TokenLA(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::LAEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_TokenLA

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_TokenLA(class antlr.debug.TokenEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::LAEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_TokenLA

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SemPredEvaluatedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_SemPredEvaluated

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SemPredEvaluatedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_SemPredEvaluated

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredStartedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_SynPredStarted

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredStartedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_SynPredStarted

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredFailedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_SynPredFailed

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredFailedEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_SynPredFailed

  .method public hidebysig newslot specialname virtual final 
          instance void  add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredSucceededEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::AddHandler(object,
                                                                                                  class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::add_SynPredSucceeded

  .method public hidebysig newslot specialname virtual final 
          instance void  remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0007:  ldsfld     object antlr.Parser::SynPredSucceededEventKey
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void [System]System.ComponentModel.EventHandlerList::RemoveHandler(object,
                                                                                                     class [mscorlib]System.Delegate)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::remove_SynPredSucceeded

  .method public hidebysig newslot virtual 
          instance void  addMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addMessageListener() is only valid if parser built"
    + " for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addMessageListener

  .method public hidebysig newslot virtual 
          instance void  addParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addParserListener() is only valid if parser built "
    + "for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addParserListener

  .method public hidebysig newslot virtual 
          instance void  addParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addParserMatchListener() is only valid if parser b"
    + "uilt for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  addParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addParserTokenListener() is only valid if parser b"
    + "uilt for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addSemanticPredicateListener() is only valid if pa"
    + "rser built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addSyntacticPredicateListener() is only valid if p"
    + "arser built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "addTraceListener() is only valid if parser built f"
    + "or debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::addTraceListener

  .method public hidebysig newslot abstract virtual 
          instance void  consume() cil managed
  {
  } // end of method Parser::consume

  .method public hidebysig newslot virtual 
          instance void  consumeUntil(int32 tokenType) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  br.s       IL_000c

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  callvirt   instance void antlr.Parser::consume()
    IL_000a:  nop
    IL_000b:  nop
    IL_000c:  ldarg.0
    IL_000d:  ldc.i4.1
    IL_000e:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0013:  ldc.i4.1
    IL_0014:  beq.s      IL_0025

    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.1
    IL_0018:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_001d:  ldarg.1
    IL_001e:  ceq
    IL_0020:  ldc.i4.0
    IL_0021:  ceq
    IL_0023:  br.s       IL_0026

    IL_0025:  ldc.i4.0
    IL_0026:  stloc.0
    IL_0027:  ldloc.0
    IL_0028:  brtrue.s   IL_0003

    IL_002a:  ret
  } // end of method Parser::consumeUntil

  .method public hidebysig newslot virtual 
          instance void  consumeUntil(class antlr.collections.impl.BitSet bset) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  br.s       IL_000c

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  callvirt   instance void antlr.Parser::consume()
    IL_000a:  nop
    IL_000b:  nop
    IL_000c:  ldarg.0
    IL_000d:  ldc.i4.1
    IL_000e:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0013:  ldc.i4.1
    IL_0014:  beq.s      IL_0028

    IL_0016:  ldarg.1
    IL_0017:  ldarg.0
    IL_0018:  ldc.i4.1
    IL_0019:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_001e:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0023:  ldc.i4.0
    IL_0024:  ceq
    IL_0026:  br.s       IL_0029

    IL_0028:  ldc.i4.0
    IL_0029:  stloc.0
    IL_002a:  ldloc.0
    IL_002b:  brtrue.s   IL_0003

    IL_002d:  ret
  } // end of method Parser::consumeUntil

  .method famorassem hidebysig newslot virtual 
          instance void  defaultDebuggingSetup(class antlr.TokenStream lexer,
                                               class antlr.TokenBuffer tokBuf) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method Parser::defaultDebuggingSetup

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          getAST() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.AST antlr.Parser::returnAST
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Parser::getAST

  .method public hidebysig newslot virtual 
          instance class antlr.ASTFactory 
          getASTFactory() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.ASTFactory V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTFactory antlr.Parser::astFactory
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Parser::getASTFactory

  .method public hidebysig newslot virtual 
          instance string  getFilename() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      string antlr.ParserSharedInputState::filename
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method Parser::getFilename

  .method public hidebysig newslot virtual 
          instance class antlr.ParserSharedInputState 
          getInputState() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.ParserSharedInputState V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Parser::getInputState

  .method public hidebysig newslot virtual 
          instance void  setInputState(class antlr.ParserSharedInputState state) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0008:  ret
  } // end of method Parser::setInputState

  .method public hidebysig newslot virtual 
          instance void  resetState() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.Parser::traceDepth
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_000e:  callvirt   instance void antlr.ParserSharedInputState::reset()
    IL_0013:  nop
    IL_0014:  ret
  } // end of method Parser::resetState

  .method public hidebysig newslot virtual 
          instance string  getTokenName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.Parser::tokenNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method Parser::getTokenName

  .method public hidebysig newslot virtual 
          instance string[]  getTokenNames() cil managed
  {
    // 
    .maxstack  1
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.Parser::tokenNames
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method Parser::getTokenNames

  .method public hidebysig newslot virtual 
          instance bool  isDebugMode() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0005

    IL_0005:  ldloc.0
    IL_0006:  ret
  } // end of method Parser::isDebugMode

  .method public hidebysig newslot abstract virtual 
          instance int32  LA(int32 i) cil managed
  {
  } // end of method Parser::LA

  .method public hidebysig newslot abstract virtual 
          instance class antlr.IToken  LT(int32 i) cil managed
  {
  } // end of method Parser::LT

  .method public hidebysig newslot virtual 
          instance int32  mark() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000c:  callvirt   instance int32 antlr.TokenBuffer::mark()
    IL_0011:  stloc.0
    IL_0012:  br.s       IL_0014

    IL_0014:  ldloc.0
    IL_0015:  ret
  } // end of method Parser::mark

  .method public hidebysig newslot virtual 
          instance void  match(int32 t) cil managed
  {
    // 
    .maxstack  6
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0008:  ldarg.1
    IL_0009:  ceq
    IL_000b:  stloc.0
    IL_000c:  ldloc.0
    IL_000d:  brtrue.s   IL_002a

    IL_000f:  ldarg.0
    IL_0010:  ldfld      string[] antlr.Parser::tokenNames
    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_001c:  ldarg.1
    IL_001d:  ldc.i4.0
    IL_001e:  ldarg.0
    IL_001f:  callvirt   instance string antlr.Parser::getFilename()
    IL_0024:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.IToken,
                                                                             int32,
                                                                             bool,
                                                                             string)
    IL_0029:  throw

    IL_002a:  ldarg.0
    IL_002b:  callvirt   instance void antlr.Parser::consume()
    IL_0030:  nop
    IL_0031:  ret
  } // end of method Parser::match

  .method public hidebysig newslot virtual 
          instance void  match(class antlr.collections.impl.BitSet b) cil managed
  {
    // 
    .maxstack  6
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  ldc.i4.1
    IL_0004:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0009:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_000e:  stloc.0
    IL_000f:  ldloc.0
    IL_0010:  brtrue.s   IL_002d

    IL_0012:  ldarg.0
    IL_0013:  ldfld      string[] antlr.Parser::tokenNames
    IL_0018:  ldarg.0
    IL_0019:  ldc.i4.1
    IL_001a:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_001f:  ldarg.1
    IL_0020:  ldc.i4.0
    IL_0021:  ldarg.0
    IL_0022:  callvirt   instance string antlr.Parser::getFilename()
    IL_0027:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.IToken,
                                                                             class antlr.collections.impl.BitSet,
                                                                             bool,
                                                                             string)
    IL_002c:  throw

    IL_002d:  ldarg.0
    IL_002e:  callvirt   instance void antlr.Parser::consume()
    IL_0033:  nop
    IL_0034:  ret
  } // end of method Parser::match

  .method public hidebysig newslot virtual 
          instance void  matchNot(int32 t) cil managed
  {
    // 
    .maxstack  6
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0008:  ldarg.1
    IL_0009:  ceq
    IL_000b:  ldc.i4.0
    IL_000c:  ceq
    IL_000e:  stloc.0
    IL_000f:  ldloc.0
    IL_0010:  brtrue.s   IL_002d

    IL_0012:  ldarg.0
    IL_0013:  ldfld      string[] antlr.Parser::tokenNames
    IL_0018:  ldarg.0
    IL_0019:  ldc.i4.1
    IL_001a:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_001f:  ldarg.1
    IL_0020:  ldc.i4.1
    IL_0021:  ldarg.0
    IL_0022:  callvirt   instance string antlr.Parser::getFilename()
    IL_0027:  newobj     instance void antlr.MismatchedTokenException::.ctor(string[],
                                                                             class antlr.IToken,
                                                                             int32,
                                                                             bool,
                                                                             string)
    IL_002c:  throw

    IL_002d:  ldarg.0
    IL_002e:  callvirt   instance void antlr.Parser::consume()
    IL_0033:  nop
    IL_0034:  ret
  } // end of method Parser::matchNot

  .method public hidebysig static void  panic() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 2D 61 63 74 69 76 61 74 65 64 20   // ..=De-activated 
                                                                              73 69 6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E   // since version 2.
                                                                              37 2E 32 2E 36 20 61 73 20 69 74 20 63 61 6E 6E   // 7.2.6 as it cann
                                                                              6F 74 20 62 65 20 6F 76 65 72 69 64 64 65 6E 2E   // ot be overidden.
                                                                              01 00 00 ) 
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldstr      "Parser: panic"
    IL_000b:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0010:  nop
    IL_0011:  ldc.i4.1
    IL_0012:  call       void [mscorlib]System.Environment::Exit(int32)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method Parser::panic

  .method public hidebysig newslot virtual 
          instance void  removeMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeMessageListener() is only valid if parser bu"
    + "ilt for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeMessageListener

  .method public hidebysig newslot virtual 
          instance void  removeParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeParserListener() is only valid if parser bui"
    + "lt for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeParserListener

  .method public hidebysig newslot virtual 
          instance void  removeParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeParserMatchListener() is only valid if parse"
    + "r built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  removeParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeParserTokenListener() is only valid if parse"
    + "r built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeSemanticPredicateListener() is only valid if"
    + " parser built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeSyntacticPredicateListener() is only valid i"
    + "f parser built for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "removeTraceListener() is only valid if parser buil"
    + "t for debugging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::removeTraceListener

  .method public hidebysig newslot virtual 
          instance void  reportError(class antlr.RecognitionException ex) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method Parser::reportError

  .method public hidebysig newslot virtual 
          instance void  reportError(string s) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.Parser::getFilename()
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_002b

    IL_0011:  nop
    IL_0012:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0017:  ldstr      "error: "
    IL_001c:  ldarg.1
    IL_001d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0022:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0027:  nop
    IL_0028:  nop
    IL_0029:  br.s       IL_0049

    IL_002b:  nop
    IL_002c:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance string antlr.Parser::getFilename()
    IL_0037:  ldstr      ": error: "
    IL_003c:  ldarg.1
    IL_003d:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0042:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0047:  nop
    IL_0048:  nop
    IL_0049:  ret
  } // end of method Parser::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(string s) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance string antlr.Parser::getFilename()
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_002b

    IL_0011:  nop
    IL_0012:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0017:  ldstr      "warning: "
    IL_001c:  ldarg.1
    IL_001d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0022:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0027:  nop
    IL_0028:  nop
    IL_0029:  br.s       IL_0049

    IL_002b:  nop
    IL_002c:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0031:  ldarg.0
    IL_0032:  callvirt   instance string antlr.Parser::getFilename()
    IL_0037:  ldstr      ": warning: "
    IL_003c:  ldarg.1
    IL_003d:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0042:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0047:  nop
    IL_0048:  nop
    IL_0049:  ret
  } // end of method Parser::reportWarning

  .method public hidebysig newslot virtual 
          instance void  recover(class antlr.RecognitionException ex,
                                 class antlr.collections.impl.BitSet tokenSet) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.Parser::consume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.2
    IL_000a:  callvirt   instance void antlr.Parser::consumeUntil(class antlr.collections.impl.BitSet)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method Parser::recover

  .method public hidebysig newslot virtual 
          instance void  rewind(int32 pos) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance void antlr.TokenBuffer::rewind(int32)
    IL_0012:  nop
    IL_0013:  ret
  } // end of method Parser::rewind

  .method public hidebysig newslot virtual 
          instance void  setASTFactory(class antlr.ASTFactory f) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.ASTFactory antlr.Parser::astFactory
    IL_0008:  ret
  } // end of method Parser::setASTFactory

  .method public hidebysig newslot virtual 
          instance void  setASTNodeClass(string cl) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTFactory antlr.Parser::astFactory
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.ASTFactory::setASTNodeType(string)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method Parser::setASTNodeClass

  .method public hidebysig newslot virtual 
          instance void  setASTNodeType(string nodeType) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 37 52 65 70 6C 61 63 65 64 20 62 79 20 73   // ..7Replaced by s
                                                                              65 74 41 53 54 4E 6F 64 65 43 6C 61 73 73 28 73   // etASTNodeClass(s
                                                                              74 72 69 6E 67 29 20 73 69 6E 63 65 20 76 65 72   // tring) since ver
                                                                              73 69 6F 6E 20 32 2E 37 2E 31 01 00 00 )          // sion 2.7.1...
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.Parser::setASTNodeClass(string)
    IL_0008:  nop
    IL_0009:  ret
  } // end of method Parser::setASTNodeType

  .method public hidebysig newslot virtual 
          instance void  setDebugMode(bool debugMode) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  brtrue.s   IL_0016

    IL_000b:  ldstr      "setDebugMode() only valid if parser built for debu"
    + "gging"
    IL_0010:  newobj     instance void [mscorlib]System.SystemException::.ctor(string)
    IL_0015:  throw

    IL_0016:  ret
  } // end of method Parser::setDebugMode

  .method public hidebysig newslot virtual 
          instance void  setFilename(string f) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldarg.1
    IL_0008:  stfld      string antlr.ParserSharedInputState::filename
    IL_000d:  ret
  } // end of method Parser::setFilename

  .method public hidebysig newslot virtual 
          instance void  setIgnoreInvalidDebugCalls(bool Value) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.Parser::ignoreInvalidDebugCalls
    IL_0008:  ret
  } // end of method Parser::setIgnoreInvalidDebugCalls

  .method public hidebysig newslot virtual 
          instance void  setTokenBuffer(class antlr.TokenBuffer t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldarg.1
    IL_0008:  stfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000d:  ret
  } // end of method Parser::setTokenBuffer

  .method public hidebysig newslot virtual 
          instance void  traceIndent() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_0019

    IL_0005:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000a:  ldstr      " "
    IL_000f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0014:  nop
    IL_0015:  ldloc.0
    IL_0016:  ldc.i4.1
    IL_0017:  add
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  ldarg.0
    IL_001b:  ldfld      int32 antlr.Parser::traceDepth
    IL_0020:  clt
    IL_0022:  stloc.1
    IL_0023:  ldloc.1
    IL_0024:  brtrue.s   IL_0005

    IL_0026:  ret
  } // end of method Parser::traceIndent

  .method public hidebysig newslot virtual 
          instance void  traceIn(string rname) cil managed
  {
    // 
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.Parser::traceDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.Parser::traceDepth
    IL_000f:  ldarg.0
    IL_0010:  callvirt   instance void antlr.Parser::traceIndent()
    IL_0015:  nop
    IL_0016:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_001b:  ldc.i4.5
    IL_001c:  newarr     [mscorlib]System.String
    IL_0021:  stloc.0
    IL_0022:  ldloc.0
    IL_0023:  ldc.i4.0
    IL_0024:  ldstr      "> "
    IL_0029:  stelem.ref
    IL_002a:  ldloc.0
    IL_002b:  ldc.i4.1
    IL_002c:  ldarg.1
    IL_002d:  stelem.ref
    IL_002e:  ldloc.0
    IL_002f:  ldc.i4.2
    IL_0030:  ldstr      "; LA(1)=="
    IL_0035:  stelem.ref
    IL_0036:  ldloc.0
    IL_0037:  ldc.i4.3
    IL_0038:  ldarg.0
    IL_0039:  ldc.i4.1
    IL_003a:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_003f:  callvirt   instance string antlr.IToken::getText()
    IL_0044:  stelem.ref
    IL_0045:  ldloc.0
    IL_0046:  ldc.i4.4
    IL_0047:  ldarg.0
    IL_0048:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_004d:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_0052:  ldc.i4.0
    IL_0053:  bgt.s      IL_005c

    IL_0055:  ldstr      ""
    IL_005a:  br.s       IL_0061

    IL_005c:  ldstr      " [guessing]"
    IL_0061:  stelem.ref
    IL_0062:  ldloc.0
    IL_0063:  call       string [mscorlib]System.String::Concat(string[])
    IL_0068:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_006d:  nop
    IL_006e:  ret
  } // end of method Parser::traceIn

  .method public hidebysig newslot virtual 
          instance void  traceOut(string rname) cil managed
  {
    // 
    .maxstack  5
    .locals init (string[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.Parser::traceIndent()
    IL_0007:  nop
    IL_0008:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000d:  ldc.i4.5
    IL_000e:  newarr     [mscorlib]System.String
    IL_0013:  stloc.0
    IL_0014:  ldloc.0
    IL_0015:  ldc.i4.0
    IL_0016:  ldstr      "< "
    IL_001b:  stelem.ref
    IL_001c:  ldloc.0
    IL_001d:  ldc.i4.1
    IL_001e:  ldarg.1
    IL_001f:  stelem.ref
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.2
    IL_0022:  ldstr      "; LA(1)=="
    IL_0027:  stelem.ref
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.3
    IL_002a:  ldarg.0
    IL_002b:  ldc.i4.1
    IL_002c:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0031:  callvirt   instance string antlr.IToken::getText()
    IL_0036:  stelem.ref
    IL_0037:  ldloc.0
    IL_0038:  ldc.i4.4
    IL_0039:  ldarg.0
    IL_003a:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_003f:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_0044:  ldc.i4.0
    IL_0045:  bgt.s      IL_004e

    IL_0047:  ldstr      ""
    IL_004c:  br.s       IL_0053

    IL_004e:  ldstr      " [guessing]"
    IL_0053:  stelem.ref
    IL_0054:  ldloc.0
    IL_0055:  call       string [mscorlib]System.String::Concat(string[])
    IL_005a:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_005f:  nop
    IL_0060:  ldarg.0
    IL_0061:  dup
    IL_0062:  ldfld      int32 antlr.Parser::traceDepth
    IL_0067:  ldc.i4.1
    IL_0068:  sub
    IL_0069:  stfld      int32 antlr.Parser::traceDepth
    IL_006e:  ret
  } // end of method Parser::traceOut

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  1
    IL_0000:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0005:  stsfld     object antlr.Parser::EnterRuleEventKey
    IL_000a:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_000f:  stsfld     object antlr.Parser::ExitRuleEventKey
    IL_0014:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0019:  stsfld     object antlr.Parser::DoneEventKey
    IL_001e:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0023:  stsfld     object antlr.Parser::ReportErrorEventKey
    IL_0028:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_002d:  stsfld     object antlr.Parser::ReportWarningEventKey
    IL_0032:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0037:  stsfld     object antlr.Parser::NewLineEventKey
    IL_003c:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0041:  stsfld     object antlr.Parser::MatchEventKey
    IL_0046:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_004b:  stsfld     object antlr.Parser::MatchNotEventKey
    IL_0050:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0055:  stsfld     object antlr.Parser::MisMatchEventKey
    IL_005a:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_005f:  stsfld     object antlr.Parser::MisMatchNotEventKey
    IL_0064:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0069:  stsfld     object antlr.Parser::ConsumeEventKey
    IL_006e:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0073:  stsfld     object antlr.Parser::LAEventKey
    IL_0078:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_007d:  stsfld     object antlr.Parser::SemPredEvaluatedEventKey
    IL_0082:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0087:  stsfld     object antlr.Parser::SynPredStartedEventKey
    IL_008c:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_0091:  stsfld     object antlr.Parser::SynPredFailedEventKey
    IL_0096:  newobj     instance void [mscorlib]System.Object::.ctor()
    IL_009b:  stsfld     object antlr.Parser::SynPredSucceededEventKey
    IL_00a0:  ret
  } // end of method Parser::.cctor

  .event antlr.debug.TraceEventHandler EnterRule
  {
    .addon instance void antlr.Parser::add_EnterRule(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.Parser::remove_EnterRule(class antlr.debug.TraceEventHandler)
  } // end of event Parser::EnterRule
  .event antlr.debug.TraceEventHandler ExitRule
  {
    .removeon instance void antlr.Parser::remove_ExitRule(class antlr.debug.TraceEventHandler)
    .addon instance void antlr.Parser::add_ExitRule(class antlr.debug.TraceEventHandler)
  } // end of event Parser::ExitRule
  .event antlr.debug.TraceEventHandler Done
  {
    .addon instance void antlr.Parser::add_Done(class antlr.debug.TraceEventHandler)
    .removeon instance void antlr.Parser::remove_Done(class antlr.debug.TraceEventHandler)
  } // end of event Parser::Done
  .event antlr.debug.MessageEventHandler ErrorReported
  {
    .removeon instance void antlr.Parser::remove_ErrorReported(class antlr.debug.MessageEventHandler)
    .addon instance void antlr.Parser::add_ErrorReported(class antlr.debug.MessageEventHandler)
  } // end of event Parser::ErrorReported
  .event antlr.debug.MessageEventHandler WarningReported
  {
    .addon instance void antlr.Parser::add_WarningReported(class antlr.debug.MessageEventHandler)
    .removeon instance void antlr.Parser::remove_WarningReported(class antlr.debug.MessageEventHandler)
  } // end of event Parser::WarningReported
  .event antlr.debug.MatchEventHandler MatchedToken
  {
    .removeon instance void antlr.Parser::remove_MatchedToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.Parser::add_MatchedToken(class antlr.debug.MatchEventHandler)
  } // end of event Parser::MatchedToken
  .event antlr.debug.MatchEventHandler MatchedNotToken
  {
    .addon instance void antlr.Parser::add_MatchedNotToken(class antlr.debug.MatchEventHandler)
    .removeon instance void antlr.Parser::remove_MatchedNotToken(class antlr.debug.MatchEventHandler)
  } // end of event Parser::MatchedNotToken
  .event antlr.debug.MatchEventHandler MisMatchedToken
  {
    .removeon instance void antlr.Parser::remove_MisMatchedToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.Parser::add_MisMatchedToken(class antlr.debug.MatchEventHandler)
  } // end of event Parser::MisMatchedToken
  .event antlr.debug.MatchEventHandler MisMatchedNotToken
  {
    .removeon instance void antlr.Parser::remove_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
    .addon instance void antlr.Parser::add_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
  } // end of event Parser::MisMatchedNotToken
  .event antlr.debug.TokenEventHandler ConsumedToken
  {
    .removeon instance void antlr.Parser::remove_ConsumedToken(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.Parser::add_ConsumedToken(class antlr.debug.TokenEventHandler)
  } // end of event Parser::ConsumedToken
  .event antlr.debug.TokenEventHandler TokenLA
  {
    .removeon instance void antlr.Parser::remove_TokenLA(class antlr.debug.TokenEventHandler)
    .addon instance void antlr.Parser::add_TokenLA(class antlr.debug.TokenEventHandler)
  } // end of event Parser::TokenLA
  .event antlr.debug.SemanticPredicateEventHandler SemPredEvaluated
  {
    .removeon instance void antlr.Parser::remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    .addon instance void antlr.Parser::add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
  } // end of event Parser::SemPredEvaluated
  .event antlr.debug.SyntacticPredicateEventHandler SynPredStarted
  {
    .addon instance void antlr.Parser::add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    .removeon instance void antlr.Parser::remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event Parser::SynPredStarted
  .event antlr.debug.SyntacticPredicateEventHandler SynPredFailed
  {
    .removeon instance void antlr.Parser::remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    .addon instance void antlr.Parser::add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event Parser::SynPredFailed
  .event antlr.debug.SyntacticPredicateEventHandler SynPredSucceeded
  {
    .addon instance void antlr.Parser::add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    .removeon instance void antlr.Parser::remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
  } // end of event Parser::SynPredSucceeded
  .property instance class [System]System.ComponentModel.EventHandlerList
          Events()
  {
    .get instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
  } // end of property Parser::Events
} // end of class antlr.Parser

.class public auto ansi beforefieldinit antlr.LLkParser
       extends antlr.Parser
{
  .field assembly int32 k
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.Parser::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int32 antlr.LLkParser::k
    IL_000f:  nop
    IL_0010:  ret
  } // end of method LLkParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.ParserSharedInputState state,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.Parser::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.2
    IL_000a:  stfld      int32 antlr.LLkParser::k
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  stfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0016:  nop
    IL_0017:  ret
  } // end of method LLkParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenBuffer tokenBuf,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.Parser::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.2
    IL_000a:  stfld      int32 antlr.LLkParser::k
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  callvirt   instance void antlr.Parser::setTokenBuffer(class antlr.TokenBuffer)
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method LLkParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream lexer,
                               int32 k_) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.TokenBuffer V_0)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.Parser::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.2
    IL_000a:  stfld      int32 antlr.LLkParser::k
    IL_000f:  ldarg.1
    IL_0010:  newobj     instance void antlr.TokenBuffer::.ctor(class antlr.TokenStream)
    IL_0015:  stloc.0
    IL_0016:  ldarg.0
    IL_0017:  ldloc.0
    IL_0018:  callvirt   instance void antlr.Parser::setTokenBuffer(class antlr.TokenBuffer)
    IL_001d:  nop
    IL_001e:  nop
    IL_001f:  ret
  } // end of method LLkParser::.ctor

  .method public hidebysig virtual instance void 
          consume() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000c:  callvirt   instance void antlr.TokenBuffer::consume()
    IL_0011:  nop
    IL_0012:  ret
  } // end of method LLkParser::consume

  .method public hidebysig virtual instance int32 
          LA(int32 i) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance int32 antlr.TokenBuffer::LA(int32)
    IL_0012:  stloc.0
    IL_0013:  br.s       IL_0015

    IL_0015:  ldloc.0
    IL_0016:  ret
  } // end of method LLkParser::LA

  .method public hidebysig virtual instance class antlr.IToken 
          LT(int32 i) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance class antlr.IToken antlr.TokenBuffer::LT(int32)
    IL_0012:  stloc.0
    IL_0013:  br.s       IL_0015

    IL_0015:  ldloc.0
    IL_0016:  ret
  } // end of method LLkParser::LT

  .method private hidebysig instance void 
          trace(string ee,
                string rname) cil managed
  {
    // 
    .maxstack  5
    .locals init (int32 V_0,
             bool V_1,
             object[] V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.Parser::traceIndent()
    IL_0007:  nop
    IL_0008:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000d:  ldarg.1
    IL_000e:  ldarg.2
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0015:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_001a:  ldc.i4.0
    IL_001b:  bgt.s      IL_0024

    IL_001d:  ldstr      "; "
    IL_0022:  br.s       IL_0029

    IL_0024:  ldstr      "; [guessing]"
    IL_0029:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_002e:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0033:  nop
    IL_0034:  ldc.i4.1
    IL_0035:  stloc.0
    IL_0036:  br         IL_00cf

    IL_003b:  nop
    IL_003c:  ldloc.0
    IL_003d:  ldc.i4.1
    IL_003e:  ceq
    IL_0040:  stloc.1
    IL_0041:  ldloc.1
    IL_0042:  brtrue.s   IL_0056

    IL_0044:  nop
    IL_0045:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_004a:  ldstr      ", "
    IL_004f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldarg.0
    IL_0057:  ldloc.0
    IL_0058:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_005d:  ldnull
    IL_005e:  ceq
    IL_0060:  stloc.1
    IL_0061:  ldloc.1
    IL_0062:  brtrue.s   IL_00a8

    IL_0064:  nop
    IL_0065:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_006a:  ldc.i4.4
    IL_006b:  newarr     [mscorlib]System.Object
    IL_0070:  stloc.2
    IL_0071:  ldloc.2
    IL_0072:  ldc.i4.0
    IL_0073:  ldstr      "LA("
    IL_0078:  stelem.ref
    IL_0079:  ldloc.2
    IL_007a:  ldc.i4.1
    IL_007b:  ldloc.0
    IL_007c:  box        [mscorlib]System.Int32
    IL_0081:  stelem.ref
    IL_0082:  ldloc.2
    IL_0083:  ldc.i4.2
    IL_0084:  ldstr      ")=="
    IL_0089:  stelem.ref
    IL_008a:  ldloc.2
    IL_008b:  ldc.i4.3
    IL_008c:  ldarg.0
    IL_008d:  ldloc.0
    IL_008e:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0093:  callvirt   instance string antlr.IToken::getText()
    IL_0098:  stelem.ref
    IL_0099:  ldloc.2
    IL_009a:  call       string [mscorlib]System.String::Concat(object[])
    IL_009f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_00a4:  nop
    IL_00a5:  nop
    IL_00a6:  br.s       IL_00ca

    IL_00a8:  nop
    IL_00a9:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_00ae:  ldstr      "LA("
    IL_00b3:  ldloc.0
    IL_00b4:  box        [mscorlib]System.Int32
    IL_00b9:  ldstr      ")==ull"
    IL_00be:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_00c3:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_00c8:  nop
    IL_00c9:  nop
    IL_00ca:  nop
    IL_00cb:  ldloc.0
    IL_00cc:  ldc.i4.1
    IL_00cd:  add
    IL_00ce:  stloc.0
    IL_00cf:  ldloc.0
    IL_00d0:  ldarg.0
    IL_00d1:  ldfld      int32 antlr.LLkParser::k
    IL_00d6:  cgt
    IL_00d8:  ldc.i4.0
    IL_00d9:  ceq
    IL_00db:  stloc.1
    IL_00dc:  ldloc.1
    IL_00dd:  brtrue     IL_003b

    IL_00e2:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_00e7:  ldstr      ""
    IL_00ec:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_00f1:  nop
    IL_00f2:  ret
  } // end of method LLkParser::trace

  .method public hidebysig virtual instance void 
          traceIn(string rname) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.Parser::traceDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.Parser::traceDepth
    IL_000f:  ldarg.0
    IL_0010:  ldstr      "> "
    IL_0015:  ldarg.1
    IL_0016:  call       instance void antlr.LLkParser::trace(string,
                                                              string)
    IL_001b:  nop
    IL_001c:  ret
  } // end of method LLkParser::traceIn

  .method public hidebysig virtual instance void 
          traceOut(string rname) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "< "
    IL_0007:  ldarg.1
    IL_0008:  call       instance void antlr.LLkParser::trace(string,
                                                              string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  dup
    IL_0010:  ldfld      int32 antlr.Parser::traceDepth
    IL_0015:  ldc.i4.1
    IL_0016:  sub
    IL_0017:  stfld      int32 antlr.Parser::traceDepth
    IL_001c:  ret
  } // end of method LLkParser::traceOut

} // end of class antlr.LLkParser

.class public auto ansi beforefieldinit antlr.debug.ParseTreeDebugParser
       extends antlr.LLkParser
{
  .field family class [mscorlib]System.Collections.Stack currentParseTreeRoot
  .field family class antlr.ParseTreeRule mostRecentParseTreeRoot
  .field family int32 numberOfDerivationSteps
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Collections.Stack::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_000b:  ldarg.0
    IL_000c:  ldnull
    IL_000d:  stfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_0012:  ldarg.0
    IL_0013:  ldc.i4.1
    IL_0014:  stfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  call       instance void antlr.LLkParser::.ctor(int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  nop
    IL_0023:  ret
  } // end of method ParseTreeDebugParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.ParserSharedInputState state,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Collections.Stack::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_000b:  ldarg.0
    IL_000c:  ldnull
    IL_000d:  stfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_0012:  ldarg.0
    IL_0013:  ldc.i4.1
    IL_0014:  stfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.2
    IL_001c:  call       instance void antlr.LLkParser::.ctor(class antlr.ParserSharedInputState,
                                                              int32)
    IL_0021:  nop
    IL_0022:  nop
    IL_0023:  nop
    IL_0024:  ret
  } // end of method ParseTreeDebugParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenBuffer tokenBuf,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Collections.Stack::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_000b:  ldarg.0
    IL_000c:  ldnull
    IL_000d:  stfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_0012:  ldarg.0
    IL_0013:  ldc.i4.1
    IL_0014:  stfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.2
    IL_001c:  call       instance void antlr.LLkParser::.ctor(class antlr.TokenBuffer,
                                                              int32)
    IL_0021:  nop
    IL_0022:  nop
    IL_0023:  nop
    IL_0024:  ret
  } // end of method ParseTreeDebugParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream lexer,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Collections.Stack::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_000b:  ldarg.0
    IL_000c:  ldnull
    IL_000d:  stfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_0012:  ldarg.0
    IL_0013:  ldc.i4.1
    IL_0014:  stfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.2
    IL_001c:  call       instance void antlr.LLkParser::.ctor(class antlr.TokenStream,
                                                              int32)
    IL_0021:  nop
    IL_0022:  nop
    IL_0023:  nop
    IL_0024:  ret
  } // end of method ParseTreeDebugParser::.ctor

  .method public hidebysig instance class antlr.ParseTree 
          getParseTree() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.ParseTree V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ParseTreeDebugParser::getParseTree

  .method public hidebysig instance int32 
          getNumberOfDerivationSteps() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ParseTreeDebugParser::getNumberOfDerivationSteps

  .method public hidebysig virtual instance void 
          match(int32 i) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void antlr.debug.ParseTreeDebugParser::addCurrentTokenToParseTree()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  call       instance void antlr.Parser::match(int32)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method ParseTreeDebugParser::match

  .method public hidebysig virtual instance void 
          match(class antlr.collections.impl.BitSet bitSet) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void antlr.debug.ParseTreeDebugParser::addCurrentTokenToParseTree()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  call       instance void antlr.Parser::match(class antlr.collections.impl.BitSet)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method ParseTreeDebugParser::match

  .method public hidebysig virtual instance void 
          matchNot(int32 i) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void antlr.debug.ParseTreeDebugParser::addCurrentTokenToParseTree()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  call       instance void antlr.Parser::matchNot(int32)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method ParseTreeDebugParser::matchNot

  .method family hidebysig instance void 
          addCurrentTokenToParseTree() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.ParseTreeRule V_0,
             class antlr.ParseTreeToken V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_000c:  ldc.i4.0
    IL_000d:  cgt
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.2
    IL_0013:  ldloc.2
    IL_0014:  brtrue.s   IL_0019

    IL_0016:  nop
    IL_0017:  br.s       IL_0068

    IL_0019:  ldarg.0
    IL_001a:  ldfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_001f:  callvirt   instance object [mscorlib]System.Collections.Stack::Peek()
    IL_0024:  castclass  antlr.ParseTreeRule
    IL_0029:  stloc.0
    IL_002a:  ldnull
    IL_002b:  stloc.1
    IL_002c:  ldarg.0
    IL_002d:  ldc.i4.1
    IL_002e:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0033:  ldc.i4.1
    IL_0034:  ceq
    IL_0036:  ldc.i4.0
    IL_0037:  ceq
    IL_0039:  stloc.2
    IL_003a:  ldloc.2
    IL_003b:  brtrue.s   IL_0051

    IL_003d:  nop
    IL_003e:  ldstr      "EOF"
    IL_0043:  newobj     instance void antlr.CommonToken::.ctor(string)
    IL_0048:  newobj     instance void antlr.ParseTreeToken::.ctor(class antlr.IToken)
    IL_004d:  stloc.1
    IL_004e:  nop
    IL_004f:  br.s       IL_0060

    IL_0051:  nop
    IL_0052:  ldarg.0
    IL_0053:  ldc.i4.1
    IL_0054:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0059:  newobj     instance void antlr.ParseTreeToken::.ctor(class antlr.IToken)
    IL_005e:  stloc.1
    IL_005f:  nop
    IL_0060:  ldloc.0
    IL_0061:  ldloc.1
    IL_0062:  callvirt   instance void antlr.BaseAST::addChild(class antlr.collections.AST)
    IL_0067:  nop
    IL_0068:  ret
  } // end of method ParseTreeDebugParser::addCurrentTokenToParseTree

  .method public hidebysig virtual instance void 
          traceIn(string s) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.ParseTreeRule V_0,
             class antlr.ParseTreeRule V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_000c:  ldc.i4.0
    IL_000d:  cgt
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.2
    IL_0013:  ldloc.2
    IL_0014:  brtrue.s   IL_0019

    IL_0016:  nop
    IL_0017:  br.s       IL_006b

    IL_0019:  ldarg.1
    IL_001a:  newobj     instance void antlr.ParseTreeRule::.ctor(string)
    IL_001f:  stloc.0
    IL_0020:  ldarg.0
    IL_0021:  ldfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_0026:  callvirt   instance int32 [mscorlib]System.Collections.Stack::get_Count()
    IL_002b:  ldc.i4.0
    IL_002c:  cgt
    IL_002e:  ldc.i4.0
    IL_002f:  ceq
    IL_0031:  stloc.2
    IL_0032:  ldloc.2
    IL_0033:  brtrue.s   IL_0050

    IL_0035:  nop
    IL_0036:  ldarg.0
    IL_0037:  ldfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_003c:  callvirt   instance object [mscorlib]System.Collections.Stack::Peek()
    IL_0041:  castclass  antlr.ParseTreeRule
    IL_0046:  stloc.1
    IL_0047:  ldloc.1
    IL_0048:  ldloc.0
    IL_0049:  callvirt   instance void antlr.BaseAST::addChild(class antlr.collections.AST)
    IL_004e:  nop
    IL_004f:  nop
    IL_0050:  ldarg.0
    IL_0051:  ldfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_0056:  ldloc.0
    IL_0057:  callvirt   instance void [mscorlib]System.Collections.Stack::Push(object)
    IL_005c:  nop
    IL_005d:  ldarg.0
    IL_005e:  dup
    IL_005f:  ldfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_0064:  ldc.i4.1
    IL_0065:  add
    IL_0066:  stfld      int32 antlr.debug.ParseTreeDebugParser::numberOfDerivationSteps
    IL_006b:  ret
  } // end of method ParseTreeDebugParser::traceIn

  .method public hidebysig virtual instance void 
          traceOut(string s) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_000c:  ldc.i4.0
    IL_000d:  cgt
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  brtrue.s   IL_0019

    IL_0016:  nop
    IL_0017:  br.s       IL_002f

    IL_0019:  ldarg.0
    IL_001a:  ldarg.0
    IL_001b:  ldfld      class [mscorlib]System.Collections.Stack antlr.debug.ParseTreeDebugParser::currentParseTreeRoot
    IL_0020:  callvirt   instance object [mscorlib]System.Collections.Stack::Pop()
    IL_0025:  castclass  antlr.ParseTreeRule
    IL_002a:  stfld      class antlr.ParseTreeRule antlr.debug.ParseTreeDebugParser::mostRecentParseTreeRoot
    IL_002f:  ret
  } // end of method ParseTreeDebugParser::traceOut

} // end of class antlr.debug.ParseTreeDebugParser

.class interface public abstract auto ansi antlr.debug.InputBufferListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  inputBufferConsume(object source,
                                            class antlr.debug.InputBufferEventArgs e) cil managed
  {
  } // end of method InputBufferListener::inputBufferConsume

  .method public hidebysig newslot abstract virtual 
          instance void  inputBufferLA(object source,
                                       class antlr.debug.InputBufferEventArgs e) cil managed
  {
  } // end of method InputBufferListener::inputBufferLA

  .method public hidebysig newslot abstract virtual 
          instance void  inputBufferMark(object source,
                                         class antlr.debug.InputBufferEventArgs e) cil managed
  {
  } // end of method InputBufferListener::inputBufferMark

  .method public hidebysig newslot abstract virtual 
          instance void  inputBufferRewind(object source,
                                           class antlr.debug.InputBufferEventArgs e) cil managed
  {
  } // end of method InputBufferListener::inputBufferRewind

} // end of class antlr.debug.InputBufferListener

.class public abstract auto ansi beforefieldinit antlr.debug.InputBufferListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.InputBufferListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  inputBufferConsume(object source,
                                            class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::inputBufferConsume

  .method public hidebysig newslot virtual 
          instance void  inputBufferLA(object source,
                                       class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::inputBufferLA

  .method public hidebysig newslot virtual 
          instance void  inputBufferMark(object source,
                                         class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::inputBufferMark

  .method public hidebysig newslot virtual 
          instance void  inputBufferRewind(object source,
                                           class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::inputBufferRewind

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method InputBufferListenerBase::refresh

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method InputBufferListenerBase::.ctor

} // end of class antlr.debug.InputBufferListenerBase

.class interface public abstract auto ansi antlr.debug.DebuggingParser
{
  .method public hidebysig newslot abstract virtual 
          instance string  getRuleName(int32 n) cil managed
  {
  } // end of method DebuggingParser::getRuleName

  .method public hidebysig newslot abstract virtual 
          instance string  getSemPredName(int32 n) cil managed
  {
  } // end of method DebuggingParser::getSemPredName

} // end of class antlr.debug.DebuggingParser

.class public auto ansi beforefieldinit antlr.TokenStreamSelector
       extends [mscorlib]System.Object
       implements antlr.TokenStream
{
  .field famorassem class [mscorlib]System.Collections.Hashtable inputStreamNames
  .field famorassem class antlr.TokenStream input
  .field famorassem class [mscorlib]System.Collections.Stack streamStack
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  newobj     instance void [mscorlib]System.Collections.Stack::.ctor()
    IL_0006:  stfld      class [mscorlib]System.Collections.Stack antlr.TokenStreamSelector::streamStack
    IL_000b:  ldarg.0
    IL_000c:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0011:  nop
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor()
    IL_0019:  stfld      class [mscorlib]System.Collections.Hashtable antlr.TokenStreamSelector::inputStreamNames
    IL_001e:  nop
    IL_001f:  ret
  } // end of method TokenStreamSelector::.ctor

  .method public hidebysig newslot virtual 
          instance void  addInputStream(class antlr.TokenStream 'stream',
                                        string key) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.TokenStreamSelector::inputStreamNames
    IL_0007:  ldarg.2
    IL_0008:  ldarg.1
    IL_0009:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamSelector::addInputStream

  .method public hidebysig newslot virtual 
          instance class antlr.TokenStream 
          getCurrentStream() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.TokenStream V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenStreamSelector::getCurrentStream

  .method public hidebysig newslot virtual 
          instance class antlr.TokenStream 
          getStream(string sname) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.TokenStream V_0,
             class antlr.TokenStream V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.TokenStreamSelector::inputStreamNames
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_Item(object)
    IL_000d:  castclass  antlr.TokenStream
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  ceq
    IL_0017:  ldc.i4.0
    IL_0018:  ceq
    IL_001a:  stloc.2
    IL_001b:  ldloc.2
    IL_001c:  brtrue.s   IL_0035

    IL_001e:  nop
    IL_001f:  ldstr      "TokenStream "
    IL_0024:  ldarg.1
    IL_0025:  ldstr      " not found"
    IL_002a:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_002f:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0034:  throw

    IL_0035:  ldloc.0
    IL_0036:  stloc.1
    IL_0037:  br.s       IL_0039

    IL_0039:  ldloc.1
    IL_003a:  ret
  } // end of method TokenStreamSelector::getStream

  .method public hidebysig newslot virtual 
          instance class antlr.IToken  nextToken() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IToken V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  br.s       IL_001a

    IL_0003:  nop
    .try
    {
      IL_0004:  nop
      IL_0005:  ldarg.0
      IL_0006:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
      IL_000b:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
      IL_0010:  stloc.0
      IL_0011:  leave.s    IL_001e

    }  // end .try
    catch antlr.TokenStreamRetryException 
    {
      IL_0013:  pop
      IL_0014:  nop
      IL_0015:  nop
      IL_0016:  leave.s    IL_0018

    }  // end handler
    IL_0018:  nop
    IL_0019:  nop
    IL_001a:  ldc.i4.1
    IL_001b:  stloc.1
    IL_001c:  br.s       IL_0003

    IL_001e:  nop
    IL_001f:  ldloc.0
    IL_0020:  ret
  } // end of method TokenStreamSelector::nextToken

  .method public hidebysig newslot virtual 
          instance class antlr.TokenStream 
          'pop'() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.TokenStream V_0,
             class antlr.TokenStream V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Stack antlr.TokenStreamSelector::streamStack
    IL_0007:  callvirt   instance object [mscorlib]System.Collections.Stack::Pop()
    IL_000c:  castclass  antlr.TokenStream
    IL_0011:  stloc.0
    IL_0012:  ldarg.0
    IL_0013:  ldloc.0
    IL_0014:  callvirt   instance void antlr.TokenStreamSelector::select(class antlr.TokenStream)
    IL_0019:  nop
    IL_001a:  ldloc.0
    IL_001b:  stloc.1
    IL_001c:  br.s       IL_001e

    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method TokenStreamSelector::'pop'

  .method public hidebysig newslot virtual 
          instance void  push(class antlr.TokenStream 'stream') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Stack antlr.TokenStreamSelector::streamStack
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_000d:  callvirt   instance void [mscorlib]System.Collections.Stack::Push(object)
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void antlr.TokenStreamSelector::select(class antlr.TokenStream)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method TokenStreamSelector::push

  .method public hidebysig newslot virtual 
          instance void  push(string sname) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Stack antlr.TokenStreamSelector::streamStack
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_000d:  callvirt   instance void [mscorlib]System.Collections.Stack::Push(object)
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void antlr.TokenStreamSelector::select(string)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method TokenStreamSelector::push

  .method public hidebysig newslot virtual 
          instance void  retry() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  newobj     instance void antlr.TokenStreamRetryException::.ctor()
    IL_0006:  throw
  } // end of method TokenStreamSelector::retry

  .method public hidebysig newslot virtual 
          instance void  select(class antlr.TokenStream 'stream') cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_000e:  isinst     antlr.CharScanner
    IL_0013:  ldnull
    IL_0014:  cgt.un
    IL_0016:  ldc.i4.0
    IL_0017:  ceq
    IL_0019:  stloc.0
    IL_001a:  ldloc.0
    IL_001b:  brtrue.s   IL_0030

    IL_001d:  nop
    IL_001e:  ldarg.0
    IL_001f:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_0024:  castclass  antlr.CharScanner
    IL_0029:  callvirt   instance void antlr.CharScanner::refresh()
    IL_002e:  nop
    IL_002f:  nop
    IL_0030:  ret
  } // end of method TokenStreamSelector::select

  .method public hidebysig newslot virtual 
          instance void  select(string sname) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldarg.1
    IL_0004:  callvirt   instance class antlr.TokenStream antlr.TokenStreamSelector::getStream(string)
    IL_0009:  stfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_0014:  isinst     antlr.CharScanner
    IL_0019:  ldnull
    IL_001a:  cgt.un
    IL_001c:  ldc.i4.0
    IL_001d:  ceq
    IL_001f:  stloc.0
    IL_0020:  ldloc.0
    IL_0021:  brtrue.s   IL_0036

    IL_0023:  nop
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.TokenStream antlr.TokenStreamSelector::input
    IL_002a:  castclass  antlr.CharScanner
    IL_002f:  callvirt   instance void antlr.CharScanner::refresh()
    IL_0034:  nop
    IL_0035:  nop
    IL_0036:  ret
  } // end of method TokenStreamSelector::select

} // end of class antlr.TokenStreamSelector

.class public auto ansi beforefieldinit antlr.TokenBuffer
       extends [mscorlib]System.Object
{
  .field famorassem class antlr.TokenStream input
  .field famorassem int32 nMarkers
  .field famorassem int32 markerOffset
  .field famorassem int32 numToConsume
  .field assembly class antlr.TokenQueue queue
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream input_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.TokenBuffer::nMarkers
    IL_0007:  ldarg.0
    IL_0008:  ldc.i4.0
    IL_0009:  stfld      int32 antlr.TokenBuffer::markerOffset
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.0
    IL_0010:  stfld      int32 antlr.TokenBuffer::numToConsume
    IL_0015:  ldarg.0
    IL_0016:  call       instance void [mscorlib]System.Object::.ctor()
    IL_001b:  nop
    IL_001c:  nop
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      class antlr.TokenStream antlr.TokenBuffer::input
    IL_0024:  ldarg.0
    IL_0025:  ldc.i4.1
    IL_0026:  newobj     instance void antlr.TokenQueue::.ctor(int32)
    IL_002b:  stfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_0030:  nop
    IL_0031:  ret
  } // end of method TokenBuffer::.ctor

  .method public hidebysig newslot virtual 
          instance void  reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.TokenBuffer::nMarkers
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.0
    IL_000a:  stfld      int32 antlr.TokenBuffer::markerOffset
    IL_000f:  ldarg.0
    IL_0010:  ldc.i4.0
    IL_0011:  stfld      int32 antlr.TokenBuffer::numToConsume
    IL_0016:  ldarg.0
    IL_0017:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_001c:  callvirt   instance void antlr.TokenQueue::reset()
    IL_0021:  nop
    IL_0022:  ret
  } // end of method TokenBuffer::reset

  .method public hidebysig newslot virtual 
          instance void  consume() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.TokenBuffer::numToConsume
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.TokenBuffer::numToConsume
    IL_000f:  ret
  } // end of method TokenBuffer::consume

  .method family hidebysig newslot virtual 
          instance void  fill(int32 amount) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.TokenBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  br.s       IL_0023

    IL_000a:  nop
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_0011:  ldarg.0
    IL_0012:  ldfld      class antlr.TokenStream antlr.TokenBuffer::input
    IL_0017:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
    IL_001c:  callvirt   instance void antlr.TokenQueue::append(class antlr.IToken)
    IL_0021:  nop
    IL_0022:  nop
    IL_0023:  ldarg.0
    IL_0024:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_0029:  ldfld      int32 antlr.TokenQueue::nbrEntries
    IL_002e:  ldarg.1
    IL_002f:  ldarg.0
    IL_0030:  ldfld      int32 antlr.TokenBuffer::markerOffset
    IL_0035:  add
    IL_0036:  clt
    IL_0038:  stloc.0
    IL_0039:  ldloc.0
    IL_003a:  brtrue.s   IL_000a

    IL_003c:  ret
  } // end of method TokenBuffer::fill

  .method public hidebysig newslot virtual 
          instance class antlr.TokenStream 
          getInput() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.TokenStream V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.TokenStream antlr.TokenBuffer::input
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TokenBuffer::getInput

  .method public hidebysig newslot virtual 
          instance int32  LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.TokenBuffer::fill(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int32 antlr.TokenBuffer::markerOffset
    IL_0015:  ldarg.1
    IL_0016:  add
    IL_0017:  ldc.i4.1
    IL_0018:  sub
    IL_0019:  callvirt   instance class antlr.IToken antlr.TokenQueue::elementAt(int32)
    IL_001e:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_0023:  stloc.0
    IL_0024:  br.s       IL_0026

    IL_0026:  ldloc.0
    IL_0027:  ret
  } // end of method TokenBuffer::LA

  .method public hidebysig newslot virtual 
          instance class antlr.IToken  LT(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.TokenBuffer::fill(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int32 antlr.TokenBuffer::markerOffset
    IL_0015:  ldarg.1
    IL_0016:  add
    IL_0017:  ldc.i4.1
    IL_0018:  sub
    IL_0019:  callvirt   instance class antlr.IToken antlr.TokenQueue::elementAt(int32)
    IL_001e:  stloc.0
    IL_001f:  br.s       IL_0021

    IL_0021:  ldloc.0
    IL_0022:  ret
  } // end of method TokenBuffer::LT

  .method public hidebysig newslot virtual 
          instance int32  mark() cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.TokenBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  dup
    IL_000a:  ldfld      int32 antlr.TokenBuffer::nMarkers
    IL_000f:  ldc.i4.1
    IL_0010:  add
    IL_0011:  stfld      int32 antlr.TokenBuffer::nMarkers
    IL_0016:  ldarg.0
    IL_0017:  ldfld      int32 antlr.TokenBuffer::markerOffset
    IL_001c:  stloc.0
    IL_001d:  br.s       IL_001f

    IL_001f:  ldloc.0
    IL_0020:  ret
  } // end of method TokenBuffer::mark

  .method public hidebysig newslot virtual 
          instance void  rewind(int32 mark) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.TokenBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int32 antlr.TokenBuffer::markerOffset
    IL_000f:  ldarg.0
    IL_0010:  dup
    IL_0011:  ldfld      int32 antlr.TokenBuffer::nMarkers
    IL_0016:  ldc.i4.1
    IL_0017:  sub
    IL_0018:  stfld      int32 antlr.TokenBuffer::nMarkers
    IL_001d:  ret
  } // end of method TokenBuffer::rewind

  .method family hidebysig newslot virtual 
          instance void  syncConsume() cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  br.s       IL_0043

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  ldfld      int32 antlr.TokenBuffer::nMarkers
    IL_000a:  ldc.i4.0
    IL_000b:  cgt
    IL_000d:  ldc.i4.0
    IL_000e:  ceq
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  brtrue.s   IL_0026

    IL_0014:  nop
    IL_0015:  ldarg.0
    IL_0016:  dup
    IL_0017:  ldfld      int32 antlr.TokenBuffer::markerOffset
    IL_001c:  ldc.i4.1
    IL_001d:  add
    IL_001e:  stfld      int32 antlr.TokenBuffer::markerOffset
    IL_0023:  nop
    IL_0024:  br.s       IL_0034

    IL_0026:  nop
    IL_0027:  ldarg.0
    IL_0028:  ldfld      class antlr.TokenQueue antlr.TokenBuffer::queue
    IL_002d:  callvirt   instance void antlr.TokenQueue::removeFirst()
    IL_0032:  nop
    IL_0033:  nop
    IL_0034:  ldarg.0
    IL_0035:  dup
    IL_0036:  ldfld      int32 antlr.TokenBuffer::numToConsume
    IL_003b:  ldc.i4.1
    IL_003c:  sub
    IL_003d:  stfld      int32 antlr.TokenBuffer::numToConsume
    IL_0042:  nop
    IL_0043:  ldarg.0
    IL_0044:  ldfld      int32 antlr.TokenBuffer::numToConsume
    IL_0049:  ldc.i4.0
    IL_004a:  cgt
    IL_004c:  stloc.0
    IL_004d:  ldloc.0
    IL_004e:  brtrue.s   IL_0003

    IL_0050:  ret
  } // end of method TokenBuffer::syncConsume

} // end of class antlr.TokenBuffer

.class public auto ansi serializable beforefieldinit antlr.CharStreamException
       extends antlr.ANTLRException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.ANTLRException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method CharStreamException::.ctor

} // end of class antlr.CharStreamException

.class public auto ansi serializable beforefieldinit antlr.CharStreamIOException
       extends antlr.CharStreamException
{
  .field public class [mscorlib]System.IO.IOException io
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.IOException io) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0007:  call       instance void antlr.CharStreamException::.ctor(string)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  stfld      class [mscorlib]System.IO.IOException antlr.CharStreamIOException::io
    IL_0015:  nop
    IL_0016:  ret
  } // end of method CharStreamIOException::.ctor

} // end of class antlr.CharStreamIOException

.class public auto ansi beforefieldinit antlr.ByteBuffer
       extends antlr.InputBuffer
{
  .field private static literal int32 BUF_SIZE = int32(0x00000010)
  .field assembly notserialized class [mscorlib]System.IO.Stream input
  .field private uint8[] buf
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.Stream input_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.s   16
    IL_0003:  newarr     [mscorlib]System.Byte
    IL_0008:  stfld      uint8[] antlr.ByteBuffer::buf
    IL_000d:  ldarg.0
    IL_000e:  call       instance void antlr.InputBuffer::.ctor()
    IL_0013:  nop
    IL_0014:  nop
    IL_0015:  ldarg.0
    IL_0016:  ldarg.1
    IL_0017:  stfld      class [mscorlib]System.IO.Stream antlr.ByteBuffer::input
    IL_001c:  nop
    IL_001d:  ret
  } // end of method ByteBuffer::.ctor

  .method public hidebysig virtual instance void 
          fill(int32 amount) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1,
             int32 V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.InputBuffer::syncConsume()
    IL_0007:  nop
    IL_0008:  ldarg.1
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int32 antlr.InputBuffer::markerOffset
    IL_000f:  add
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0016:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_001b:  sub
    IL_001c:  stloc.0
    IL_001d:  br         IL_00af

    IL_0022:  nop
    IL_0023:  ldarg.0
    IL_0024:  ldfld      class [mscorlib]System.IO.Stream antlr.ByteBuffer::input
    IL_0029:  ldarg.0
    IL_002a:  ldfld      uint8[] antlr.ByteBuffer::buf
    IL_002f:  ldc.i4.0
    IL_0030:  ldc.i4.s   16
    IL_0032:  callvirt   instance int32 [mscorlib]System.IO.Stream::Read(uint8[],
                                                                         int32,
                                                                         int32)
    IL_0037:  stloc.1
    IL_0038:  ldc.i4.0
    IL_0039:  stloc.2
    IL_003a:  br.s       IL_005b

    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0043:  ldarg.0
    IL_0044:  ldfld      uint8[] antlr.ByteBuffer::buf
    IL_0049:  ldloc.2
    IL_004a:  ldelem.u1
    IL_004b:  box        [mscorlib]System.Char
    IL_0050:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    IL_0055:  pop
    IL_0056:  nop
    IL_0057:  ldloc.2
    IL_0058:  ldc.i4.1
    IL_0059:  add
    IL_005a:  stloc.2
    IL_005b:  ldloc.2
    IL_005c:  ldloc.1
    IL_005d:  clt
    IL_005f:  stloc.3
    IL_0060:  ldloc.3
    IL_0061:  brtrue.s   IL_003c

    IL_0063:  ldloc.1
    IL_0064:  ldc.i4.s   16
    IL_0066:  clt
    IL_0068:  ldc.i4.0
    IL_0069:  ceq
    IL_006b:  stloc.3
    IL_006c:  ldloc.3
    IL_006d:  brtrue.s   IL_00aa

    IL_006f:  nop
    IL_0070:  br.s       IL_008a

    IL_0072:  nop
    IL_0073:  ldarg.0
    IL_0074:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0079:  ldsfld     char antlr.CharScanner::EOF_CHAR
    IL_007e:  box        [mscorlib]System.Char
    IL_0083:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    IL_0088:  pop
    IL_0089:  nop
    IL_008a:  ldloc.0
    IL_008b:  dup
    IL_008c:  ldc.i4.1
    IL_008d:  sub
    IL_008e:  stloc.0
    IL_008f:  ldc.i4.0
    IL_0090:  ble.s      IL_00a3

    IL_0092:  ldarg.0
    IL_0093:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
    IL_0098:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_009d:  ldc.i4.s   16
    IL_009f:  clt
    IL_00a1:  br.s       IL_00a4

    IL_00a3:  ldc.i4.0
    IL_00a4:  stloc.3
    IL_00a5:  ldloc.3
    IL_00a6:  brtrue.s   IL_0072

    IL_00a8:  br.s       IL_00ba

    IL_00aa:  ldloc.0
    IL_00ab:  ldloc.1
    IL_00ac:  sub
    IL_00ad:  stloc.0
    IL_00ae:  nop
    IL_00af:  ldloc.0
    IL_00b0:  ldc.i4.0
    IL_00b1:  cgt
    IL_00b3:  stloc.3
    IL_00b4:  ldloc.3
    IL_00b5:  brtrue     IL_0022

    IL_00ba:  ret
  } // end of method ByteBuffer::fill

} // end of class antlr.ByteBuffer

.class public auto ansi beforefieldinit antlr.StringUtils
       extends [mscorlib]System.Object
{
  .method public hidebysig static string 
          stripBack(string s,
                    char c) cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  br.s       IL_0016

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  ldc.i4.0
    IL_0006:  ldarg.0
    IL_0007:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_000c:  ldc.i4.1
    IL_000d:  sub
    IL_000e:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_0013:  starg.s    s
    IL_0015:  nop
    IL_0016:  ldarg.0
    IL_0017:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_001c:  ldc.i4.0
    IL_001d:  ble.s      IL_0032

    IL_001f:  ldarg.0
    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0026:  ldc.i4.1
    IL_0027:  sub
    IL_0028:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_002d:  ldarg.1
    IL_002e:  ceq
    IL_0030:  br.s       IL_0033

    IL_0032:  ldc.i4.0
    IL_0033:  stloc.1
    IL_0034:  ldloc.1
    IL_0035:  brtrue.s   IL_0003

    IL_0037:  ldarg.0
    IL_0038:  stloc.0
    IL_0039:  br.s       IL_003b

    IL_003b:  ldloc.0
    IL_003c:  ret
  } // end of method StringUtils::stripBack

  .method public hidebysig static string 
          stripBack(string s,
                    string remove) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0,
             int32 V_1,
             char V_2,
             string V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  nop
    IL_0002:  ldc.i4.0
    IL_0003:  stloc.0
    IL_0004:  ldc.i4.0
    IL_0005:  stloc.1
    IL_0006:  br.s       IL_0050

    IL_0008:  nop
    IL_0009:  ldarg.1
    IL_000a:  ldloc.1
    IL_000b:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0010:  stloc.2
    IL_0011:  br.s       IL_0028

    IL_0013:  nop
    IL_0014:  ldc.i4.1
    IL_0015:  stloc.0
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.0
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_001e:  ldc.i4.1
    IL_001f:  sub
    IL_0020:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_0025:  starg.s    s
    IL_0027:  nop
    IL_0028:  ldarg.0
    IL_0029:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_002e:  ldc.i4.0
    IL_002f:  ble.s      IL_0044

    IL_0031:  ldarg.0
    IL_0032:  ldarg.0
    IL_0033:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0038:  ldc.i4.1
    IL_0039:  sub
    IL_003a:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_003f:  ldloc.2
    IL_0040:  ceq
    IL_0042:  br.s       IL_0045

    IL_0044:  ldc.i4.0
    IL_0045:  stloc.s    V_4
    IL_0047:  ldloc.s    V_4
    IL_0049:  brtrue.s   IL_0013

    IL_004b:  nop
    IL_004c:  ldloc.1
    IL_004d:  ldc.i4.1
    IL_004e:  add
    IL_004f:  stloc.1
    IL_0050:  ldloc.1
    IL_0051:  ldarg.1
    IL_0052:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0057:  clt
    IL_0059:  stloc.s    V_4
    IL_005b:  ldloc.s    V_4
    IL_005d:  brtrue.s   IL_0008

    IL_005f:  nop
    IL_0060:  ldloc.0
    IL_0061:  stloc.s    V_4
    IL_0063:  ldloc.s    V_4
    IL_0065:  brtrue.s   IL_0001

    IL_0067:  ldarg.0
    IL_0068:  stloc.3
    IL_0069:  br.s       IL_006b

    IL_006b:  ldloc.3
    IL_006c:  ret
  } // end of method StringUtils::stripBack

  .method public hidebysig static string 
          stripFront(string s,
                     char c) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  br.s       IL_000e

    IL_0003:  nop
    IL_0004:  ldarg.0
    IL_0005:  ldc.i4.1
    IL_0006:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_000b:  starg.s    s
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0014:  ldc.i4.0
    IL_0015:  ble.s      IL_0023

    IL_0017:  ldarg.0
    IL_0018:  ldc.i4.0
    IL_0019:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_001e:  ldarg.1
    IL_001f:  ceq
    IL_0021:  br.s       IL_0024

    IL_0023:  ldc.i4.0
    IL_0024:  stloc.1
    IL_0025:  ldloc.1
    IL_0026:  brtrue.s   IL_0003

    IL_0028:  ldarg.0
    IL_0029:  stloc.0
    IL_002a:  br.s       IL_002c

    IL_002c:  ldloc.0
    IL_002d:  ret
  } // end of method StringUtils::stripFront

  .method public hidebysig static string 
          stripFront(string s,
                     string remove) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             int32 V_1,
             char V_2,
             string V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  nop
    IL_0002:  ldc.i4.0
    IL_0003:  stloc.0
    IL_0004:  ldc.i4.0
    IL_0005:  stloc.1
    IL_0006:  br.s       IL_0041

    IL_0008:  nop
    IL_0009:  ldarg.1
    IL_000a:  ldloc.1
    IL_000b:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0010:  stloc.2
    IL_0011:  br.s       IL_0020

    IL_0013:  nop
    IL_0014:  ldc.i4.1
    IL_0015:  stloc.0
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.1
    IL_0018:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_001d:  starg.s    s
    IL_001f:  nop
    IL_0020:  ldarg.0
    IL_0021:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0026:  ldc.i4.0
    IL_0027:  ble.s      IL_0035

    IL_0029:  ldarg.0
    IL_002a:  ldc.i4.0
    IL_002b:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
    IL_0030:  ldloc.2
    IL_0031:  ceq
    IL_0033:  br.s       IL_0036

    IL_0035:  ldc.i4.0
    IL_0036:  stloc.s    V_4
    IL_0038:  ldloc.s    V_4
    IL_003a:  brtrue.s   IL_0013

    IL_003c:  nop
    IL_003d:  ldloc.1
    IL_003e:  ldc.i4.1
    IL_003f:  add
    IL_0040:  stloc.1
    IL_0041:  ldloc.1
    IL_0042:  ldarg.1
    IL_0043:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0048:  clt
    IL_004a:  stloc.s    V_4
    IL_004c:  ldloc.s    V_4
    IL_004e:  brtrue.s   IL_0008

    IL_0050:  nop
    IL_0051:  ldloc.0
    IL_0052:  stloc.s    V_4
    IL_0054:  ldloc.s    V_4
    IL_0056:  brtrue.s   IL_0001

    IL_0058:  ldarg.0
    IL_0059:  stloc.3
    IL_005a:  br.s       IL_005c

    IL_005c:  ldloc.3
    IL_005d:  ret
  } // end of method StringUtils::stripFront

  .method public hidebysig static string 
          stripFrontBack(string src,
                         string head,
                         string tail) cil managed
  {
    // 
    .maxstack  5
    .locals init (int32 V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance int32 [mscorlib]System.String::IndexOf(string)
    IL_0008:  stloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance int32 [mscorlib]System.String::LastIndexOf(string)
    IL_0010:  stloc.1
    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.m1
    IL_0013:  beq.s      IL_001e

    IL_0015:  ldloc.1
    IL_0016:  ldc.i4.m1
    IL_0017:  ceq
    IL_0019:  ldc.i4.0
    IL_001a:  ceq
    IL_001c:  br.s       IL_001f

    IL_001e:  ldc.i4.0
    IL_001f:  stloc.3
    IL_0020:  ldloc.3
    IL_0021:  brtrue.s   IL_0027

    IL_0023:  ldarg.0
    IL_0024:  stloc.2
    IL_0025:  br.s       IL_0038

    IL_0027:  ldarg.0
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.1
    IL_002a:  add
    IL_002b:  ldloc.1
    IL_002c:  ldloc.0
    IL_002d:  ldc.i4.1
    IL_002e:  add
    IL_002f:  sub
    IL_0030:  callvirt   instance string [mscorlib]System.String::Substring(int32,
                                                                            int32)
    IL_0035:  stloc.2
    IL_0036:  br.s       IL_0038

    IL_0038:  ldloc.2
    IL_0039:  ret
  } // end of method StringUtils::stripFrontBack

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method StringUtils::.ctor

} // end of class antlr.StringUtils

.class public abstract auto ansi beforefieldinit antlr.ParseTree
       extends antlr.BaseAST
{
  .method public hidebysig instance string 
          getLeftmostDerivationStep(int32 step) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             string V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  cgt
    IL_0005:  stloc.2
    IL_0006:  ldloc.2
    IL_0007:  brtrue.s   IL_0013

    IL_0009:  nop
    IL_000a:  ldarg.0
    IL_000b:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0010:  stloc.1
    IL_0011:  br.s       IL_0030

    IL_0013:  ldc.i4     0x7d0
    IL_0018:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(int32)
    IL_001d:  stloc.0
    IL_001e:  ldarg.0
    IL_001f:  ldloc.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance int32 antlr.ParseTree::getLeftmostDerivation(class [mscorlib]System.Text.StringBuilder,
                                                                               int32)
    IL_0026:  pop
    IL_0027:  ldloc.0
    IL_0028:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_002d:  stloc.1
    IL_002e:  br.s       IL_0030

    IL_0030:  ldloc.1
    IL_0031:  ret
  } // end of method ParseTree::getLeftmostDerivationStep

  .method public hidebysig instance string 
          getLeftmostDerivation(int32 maxSteps) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldc.i4     0x7d0
    IL_0006:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(int32)
    IL_000b:  stloc.0
    IL_000c:  ldloc.0
    IL_000d:  ldstr      "    "
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0018:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_001d:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0022:  pop
    IL_0023:  ldloc.0
    IL_0024:  ldstr      "\n"
    IL_0029:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_002e:  pop
    IL_002f:  ldc.i4.1
    IL_0030:  stloc.1
    IL_0031:  br.s       IL_005f

    IL_0033:  nop
    IL_0034:  ldloc.0
    IL_0035:  ldstr      " =>"
    IL_003a:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_003f:  pop
    IL_0040:  ldloc.0
    IL_0041:  ldarg.0
    IL_0042:  ldloc.1
    IL_0043:  call       instance string antlr.ParseTree::getLeftmostDerivationStep(int32)
    IL_0048:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_004d:  pop
    IL_004e:  ldloc.0
    IL_004f:  ldstr      "\n"
    IL_0054:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0059:  pop
    IL_005a:  nop
    IL_005b:  ldloc.1
    IL_005c:  ldc.i4.1
    IL_005d:  add
    IL_005e:  stloc.1
    IL_005f:  ldloc.1
    IL_0060:  ldarg.1
    IL_0061:  clt
    IL_0063:  stloc.3
    IL_0064:  ldloc.3
    IL_0065:  brtrue.s   IL_0033

    IL_0067:  ldloc.0
    IL_0068:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_006d:  stloc.2
    IL_006e:  br.s       IL_0070

    IL_0070:  ldloc.2
    IL_0071:  ret
  } // end of method ParseTree::getLeftmostDerivation

  .method famorassem hidebysig newslot abstract virtual 
          instance int32  getLeftmostDerivation(class [mscorlib]System.Text.StringBuilder buf,
                                                int32 step) cil managed
  {
  } // end of method ParseTree::getLeftmostDerivation

  .method public hidebysig virtual instance void 
          initialize(int32 i,
                     string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParseTree::initialize

  .method public hidebysig virtual instance void 
          initialize(class antlr.collections.AST ast) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParseTree::initialize

  .method public hidebysig virtual instance void 
          initialize(class antlr.IToken token) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParseTree::initialize

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.BaseAST::.ctor()
    IL_0006:  ret
  } // end of method ParseTree::.ctor

} // end of class antlr.ParseTree

.class private auto ansi beforefieldinit SupportClass
       extends [mscorlib]System.Object
{
  .method public hidebysig static int32  URShift(int32 number,
                                                 int32 bits) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  clt
    IL_0005:  stloc.1
    IL_0006:  ldloc.1
    IL_0007:  brtrue.s   IL_0012

    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  ldc.i4.s   31
    IL_000d:  and
    IL_000e:  shr
    IL_000f:  stloc.0
    IL_0010:  br.s       IL_0023

    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldc.i4.s   31
    IL_0016:  and
    IL_0017:  shr
    IL_0018:  ldc.i4.2
    IL_0019:  ldarg.1
    IL_001a:  not
    IL_001b:  ldc.i4.s   31
    IL_001d:  and
    IL_001e:  shl
    IL_001f:  add
    IL_0020:  stloc.0
    IL_0021:  br.s       IL_0023

    IL_0023:  ldloc.0
    IL_0024:  ret
  } // end of method SupportClass::URShift

  .method public hidebysig static int32  URShift(int32 number,
                                                 int64 bits) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  conv.i4
    IL_0004:  call       int32 SupportClass::URShift(int32,
                                                     int32)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method SupportClass::URShift

  .method public hidebysig static int64  URShift(int64 number,
                                                 int32 bits) cil managed
  {
    // 
    .maxstack  4
    .locals init (int64 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  conv.i8
    IL_0004:  clt
    IL_0006:  stloc.1
    IL_0007:  ldloc.1
    IL_0008:  brtrue.s   IL_0013

    IL_000a:  ldarg.0
    IL_000b:  ldarg.1
    IL_000c:  ldc.i4.s   63
    IL_000e:  and
    IL_000f:  shr
    IL_0010:  stloc.0
    IL_0011:  br.s       IL_0025

    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  ldc.i4.s   63
    IL_0017:  and
    IL_0018:  shr
    IL_0019:  ldc.i4.2
    IL_001a:  conv.i8
    IL_001b:  ldarg.1
    IL_001c:  not
    IL_001d:  ldc.i4.s   63
    IL_001f:  and
    IL_0020:  shl
    IL_0021:  add
    IL_0022:  stloc.0
    IL_0023:  br.s       IL_0025

    IL_0025:  ldloc.0
    IL_0026:  ret
  } // end of method SupportClass::URShift

  .method public hidebysig static int64  URShift(int64 number,
                                                 int64 bits) cil managed
  {
    // 
    .maxstack  2
    .locals init (int64 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  conv.i4
    IL_0004:  call       int64 SupportClass::URShift(int64,
                                                     int32)
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method SupportClass::URShift

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method SupportClass::.ctor

} // end of class SupportClass

.class public auto ansi beforefieldinit antlr.LexerSharedInputState
       extends [mscorlib]System.Object
{
  .field famorassem int32 column
  .field famorassem int32 line
  .field famorassem int32 tokenStartColumn
  .field famorassem int32 tokenStartLine
  .field famorassem class antlr.InputBuffer input
  .field famorassem string filename
  .field public int32 guessing
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.InputBuffer inbuf) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  call       instance void antlr.LexerSharedInputState::initialize()
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldarg.1
    IL_0011:  stfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0016:  nop
    IL_0017:  ret
  } // end of method LexerSharedInputState::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.Stream inStream) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  newobj     instance void antlr.ByteBuffer::.ctor(class [mscorlib]System.IO.Stream)
    IL_0007:  call       instance void antlr.LexerSharedInputState::.ctor(class antlr.InputBuffer)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ret
  } // end of method LexerSharedInputState::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.TextReader inReader) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  newobj     instance void antlr.CharBuffer::.ctor(class [mscorlib]System.IO.TextReader)
    IL_0007:  call       instance void antlr.LexerSharedInputState::.ctor(class antlr.InputBuffer)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ret
  } // end of method LexerSharedInputState::.ctor

  .method private hidebysig instance void 
          initialize() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  stfld      int32 antlr.LexerSharedInputState::column
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.1
    IL_000a:  stfld      int32 antlr.LexerSharedInputState::line
    IL_000f:  ldarg.0
    IL_0010:  ldc.i4.1
    IL_0011:  stfld      int32 antlr.LexerSharedInputState::tokenStartColumn
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.1
    IL_0018:  stfld      int32 antlr.LexerSharedInputState::tokenStartLine
    IL_001d:  ldarg.0
    IL_001e:  ldc.i4.0
    IL_001f:  stfld      int32 antlr.LexerSharedInputState::guessing
    IL_0024:  ldarg.0
    IL_0025:  ldnull
    IL_0026:  stfld      string antlr.LexerSharedInputState::filename
    IL_002b:  ret
  } // end of method LexerSharedInputState::initialize

  .method public hidebysig newslot virtual 
          instance void  reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void antlr.LexerSharedInputState::initialize()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000e:  callvirt   instance void antlr.InputBuffer::reset()
    IL_0013:  nop
    IL_0014:  ret
  } // end of method LexerSharedInputState::reset

  .method public hidebysig newslot virtual 
          instance void  resetInput(class antlr.InputBuffer ib) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.LexerSharedInputState::reset()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_000f:  ret
  } // end of method LexerSharedInputState::resetInput

  .method public hidebysig newslot virtual 
          instance void  resetInput(class [mscorlib]System.IO.Stream s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.LexerSharedInputState::reset()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  newobj     instance void antlr.ByteBuffer::.ctor(class [mscorlib]System.IO.Stream)
    IL_000f:  stfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0014:  ret
  } // end of method LexerSharedInputState::resetInput

  .method public hidebysig newslot virtual 
          instance void  resetInput(class [mscorlib]System.IO.TextReader tr) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.LexerSharedInputState::reset()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  newobj     instance void antlr.CharBuffer::.ctor(class [mscorlib]System.IO.TextReader)
    IL_000f:  stfld      class antlr.InputBuffer antlr.LexerSharedInputState::input
    IL_0014:  ret
  } // end of method LexerSharedInputState::resetInput

} // end of class antlr.LexerSharedInputState

.class public abstract auto ansi beforefieldinit antlr.FileLineFormatter
       extends [mscorlib]System.Object
{
  .field private static class antlr.FileLineFormatter formatter
  .method public hidebysig static class antlr.FileLineFormatter 
          getFormatter() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.FileLineFormatter V_0)
    IL_0000:  nop
    IL_0001:  ldsfld     class antlr.FileLineFormatter antlr.FileLineFormatter::formatter
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method FileLineFormatter::getFormatter

  .method public hidebysig static void  setFormatter(class antlr.FileLineFormatter f) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  stsfld     class antlr.FileLineFormatter antlr.FileLineFormatter::formatter
    IL_0007:  ret
  } // end of method FileLineFormatter::setFormatter

  .method public hidebysig newslot abstract virtual 
          instance string  getFormatString(string fileName,
                                           int32 line,
                                           int32 column) cil managed
  {
  } // end of method FileLineFormatter::getFormatString

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method FileLineFormatter::.ctor

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.DefaultFileLineFormatter::.ctor()
    IL_0005:  stsfld     class antlr.FileLineFormatter antlr.FileLineFormatter::formatter
    IL_000a:  ret
  } // end of method FileLineFormatter::.cctor

} // end of class antlr.FileLineFormatter

.class public auto ansi beforefieldinit antlr.DefaultFileLineFormatter
       extends antlr.FileLineFormatter
{
  .method public hidebysig virtual instance string 
          getFormatString(string fileName,
                          int32 line,
                          int32 column) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             string V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  ldnull
    IL_0009:  ceq
    IL_000b:  stloc.2
    IL_000c:  ldloc.2
    IL_000d:  brtrue.s   IL_0021

    IL_000f:  ldloc.0
    IL_0010:  ldarg.1
    IL_0011:  ldstr      ":"
    IL_0016:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_001b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0020:  pop
    IL_0021:  ldarg.2
    IL_0022:  ldc.i4.m1
    IL_0023:  ceq
    IL_0025:  stloc.2
    IL_0026:  ldloc.2
    IL_0027:  brtrue.s   IL_0075

    IL_0029:  nop
    IL_002a:  ldarg.1
    IL_002b:  ldnull
    IL_002c:  ceq
    IL_002e:  ldc.i4.0
    IL_002f:  ceq
    IL_0031:  stloc.2
    IL_0032:  ldloc.2
    IL_0033:  brtrue.s   IL_0041

    IL_0035:  ldloc.0
    IL_0036:  ldstr      "line "
    IL_003b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0040:  pop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.2
    IL_0043:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(int32)
    IL_0048:  pop
    IL_0049:  ldarg.3
    IL_004a:  ldc.i4.m1
    IL_004b:  ceq
    IL_004d:  stloc.2
    IL_004e:  ldloc.2
    IL_004f:  brtrue.s   IL_0068

    IL_0051:  ldloc.0
    IL_0052:  ldstr      ":"
    IL_0057:  ldarg.3
    IL_0058:  box        [mscorlib]System.Int32
    IL_005d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0062:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0067:  pop
    IL_0068:  ldloc.0
    IL_0069:  ldstr      ":"
    IL_006e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0073:  pop
    IL_0074:  nop
    IL_0075:  ldloc.0
    IL_0076:  ldstr      " "
    IL_007b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0080:  pop
    IL_0081:  ldloc.0
    IL_0082:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0087:  stloc.1
    IL_0088:  br.s       IL_008a

    IL_008a:  ldloc.1
    IL_008b:  ret
  } // end of method DefaultFileLineFormatter::getFormatString

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.FileLineFormatter::.ctor()
    IL_0006:  ret
  } // end of method DefaultFileLineFormatter::.ctor

} // end of class antlr.DefaultFileLineFormatter

.class public auto ansi beforefieldinit antlr.CommonHiddenStreamToken
       extends antlr.CommonToken
       implements antlr.IHiddenStreamToken,
                  antlr.IToken
{
  .class auto ansi nested public beforefieldinit CommonHiddenStreamTokenCreator
         extends antlr.TokenCreator
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.TokenCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method CommonHiddenStreamTokenCreator::.ctor

    .method public hidebysig specialname virtual 
            instance string  get_TokenTypeName() cil managed
    {
      // 
      .maxstack  1
      .locals init (string V_0)
      IL_0000:  nop
      IL_0001:  ldtoken    antlr.CommonHiddenStreamToken
      IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_000b:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0010:  stloc.0
      IL_0011:  br.s       IL_0013

      IL_0013:  ldloc.0
      IL_0014:  ret
    } // end of method CommonHiddenStreamTokenCreator::get_TokenTypeName

    .method public hidebysig virtual instance class antlr.IToken 
            Create() cil managed
    {
      // 
      .maxstack  1
      .locals init (class antlr.IToken V_0)
      IL_0000:  nop
      IL_0001:  newobj     instance void antlr.CommonHiddenStreamToken::.ctor()
      IL_0006:  stloc.0
      IL_0007:  br.s       IL_0009

      IL_0009:  ldloc.0
      IL_000a:  ret
    } // end of method CommonHiddenStreamTokenCreator::Create

    .property instance string TokenTypeName()
    {
      .get instance string antlr.CommonHiddenStreamToken/CommonHiddenStreamTokenCreator::get_TokenTypeName()
    } // end of property CommonHiddenStreamTokenCreator::TokenTypeName
  } // end of class CommonHiddenStreamTokenCreator

  .field public static initonly class antlr.CommonHiddenStreamToken/CommonHiddenStreamTokenCreator Creator
  .field famorassem class antlr.IHiddenStreamToken hiddenBefore
  .field famorassem class antlr.IHiddenStreamToken hiddenAfter
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.CommonToken::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method CommonHiddenStreamToken::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 t,
                               string txt) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  call       instance void antlr.CommonToken::.ctor(int32,
                                                                string)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method CommonHiddenStreamToken::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.CommonToken::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method CommonHiddenStreamToken::.ctor

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenAfter() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.CommonHiddenStreamToken::hiddenAfter
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonHiddenStreamToken::getHiddenAfter

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenBefore() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.CommonHiddenStreamToken::hiddenBefore
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonHiddenStreamToken::getHiddenBefore

  .method public hidebysig newslot virtual 
          instance void  setHiddenAfter(class antlr.IHiddenStreamToken t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.IHiddenStreamToken antlr.CommonHiddenStreamToken::hiddenAfter
    IL_0008:  ret
  } // end of method CommonHiddenStreamToken::setHiddenAfter

  .method public hidebysig newslot virtual 
          instance void  setHiddenBefore(class antlr.IHiddenStreamToken t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.IHiddenStreamToken antlr.CommonHiddenStreamToken::hiddenBefore
    IL_0008:  ret
  } // end of method CommonHiddenStreamToken::setHiddenBefore

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.CommonHiddenStreamToken/CommonHiddenStreamTokenCreator::.ctor()
    IL_0005:  stsfld     class antlr.CommonHiddenStreamToken/CommonHiddenStreamTokenCreator antlr.CommonHiddenStreamToken::Creator
    IL_000a:  ret
  } // end of method CommonHiddenStreamToken::.cctor

} // end of class antlr.CommonHiddenStreamToken

.class public auto ansi beforefieldinit antlr.debug.SemanticPredicateListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.SemanticPredicateListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SemanticPredicateListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SemanticPredicateListenerBase::refresh

  .method public hidebysig newslot virtual 
          instance void  semanticPredicateEvaluated(object source,
                                                    class antlr.debug.SemanticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SemanticPredicateListenerBase::semanticPredicateEvaluated

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method SemanticPredicateListenerBase::.ctor

} // end of class antlr.debug.SemanticPredicateListenerBase

.class interface public abstract auto ansi antlr.debug.ParserMatchListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  parserMatch(object source,
                                     class antlr.debug.MatchEventArgs e) cil managed
  {
  } // end of method ParserMatchListener::parserMatch

  .method public hidebysig newslot abstract virtual 
          instance void  parserMatchNot(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
  } // end of method ParserMatchListener::parserMatchNot

  .method public hidebysig newslot abstract virtual 
          instance void  parserMismatch(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
  } // end of method ParserMatchListener::parserMismatch

  .method public hidebysig newslot abstract virtual 
          instance void  parserMismatchNot(object source,
                                           class antlr.debug.MatchEventArgs e) cil managed
  {
  } // end of method ParserMatchListener::parserMismatchNot

} // end of class antlr.debug.ParserMatchListener

.class interface public abstract auto ansi antlr.debug.TraceListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  enterRule(object source,
                                   class antlr.debug.TraceEventArgs e) cil managed
  {
  } // end of method TraceListener::enterRule

  .method public hidebysig newslot abstract virtual 
          instance void  exitRule(object source,
                                  class antlr.debug.TraceEventArgs e) cil managed
  {
  } // end of method TraceListener::exitRule

} // end of class antlr.debug.TraceListener

.class interface public abstract auto ansi antlr.debug.SyntacticPredicateListener
       implements antlr.debug.Listener
{
  .method public hidebysig newslot abstract virtual 
          instance void  syntacticPredicateFailed(object source,
                                                  class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
  } // end of method SyntacticPredicateListener::syntacticPredicateFailed

  .method public hidebysig newslot abstract virtual 
          instance void  syntacticPredicateStarted(object source,
                                                   class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
  } // end of method SyntacticPredicateListener::syntacticPredicateStarted

  .method public hidebysig newslot abstract virtual 
          instance void  syntacticPredicateSucceeded(object source,
                                                     class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
  } // end of method SyntacticPredicateListener::syntacticPredicateSucceeded

} // end of class antlr.debug.SyntacticPredicateListener

.class interface public abstract auto ansi antlr.debug.ParserListener
       implements antlr.debug.SemanticPredicateListener,
                  antlr.debug.ParserMatchListener,
                  antlr.debug.MessageListener,
                  antlr.debug.ParserTokenListener,
                  antlr.debug.TraceListener,
                  antlr.debug.SyntacticPredicateListener,
                  antlr.debug.Listener
{
} // end of class antlr.debug.ParserListener

.class interface public abstract auto ansi antlr.debug.ParserController
       implements antlr.debug.ParserListener,
                  antlr.debug.SemanticPredicateListener,
                  antlr.debug.ParserMatchListener,
                  antlr.debug.MessageListener,
                  antlr.debug.ParserTokenListener,
                  antlr.debug.TraceListener,
                  antlr.debug.SyntacticPredicateListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot specialname abstract virtual 
          instance void  set_ParserEventSupport(class antlr.debug.ParserEventSupport 'value') cil managed
  {
  } // end of method ParserController::set_ParserEventSupport

  .method public hidebysig newslot abstract virtual 
          instance void  checkBreak() cil managed
  {
  } // end of method ParserController::checkBreak

  .property instance class antlr.debug.ParserEventSupport
          ParserEventSupport()
  {
    .set instance void antlr.debug.ParserController::set_ParserEventSupport(class antlr.debug.ParserEventSupport)
  } // end of property ParserController::ParserEventSupport
} // end of class antlr.debug.ParserController

.class public auto ansi beforefieldinit antlr.debug.InputBufferEventSupport
       extends [mscorlib]System.Object
{
  .field static famorassem literal int32 CONSUME = int32(0x00000000)
  .field static famorassem literal int32 LA = int32(0x00000001)
  .field static famorassem literal int32 MARK = int32(0x00000002)
  .field static famorassem literal int32 REWIND = int32(0x00000003)
  .field private object source
  .field private class [mscorlib]System.Collections.ArrayList inputBufferListeners
  .field private class antlr.debug.InputBufferEventArgs inputBufferEvent
  .method public hidebysig newslot specialname virtual 
          instance class [mscorlib]System.Collections.ArrayList 
          get_InputBufferListeners() cil managed
  {
    // 
    .maxstack  1
    .locals init (class [mscorlib]System.Collections.ArrayList V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method InputBufferEventSupport::get_InputBufferListeners

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object source) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  newobj     instance void antlr.debug.InputBufferEventArgs::.ctor()
    IL_000e:  stfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  stfld      object antlr.debug.InputBufferEventSupport::source
    IL_001a:  nop
    IL_001b:  ret
  } // end of method InputBufferEventSupport::.ctor

  .method public hidebysig newslot virtual 
          instance void  addInputBufferListener(class antlr.debug.InputBufferListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_001c

    IL_0011:  ldarg.0
    IL_0012:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor()
    IL_0017:  stfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_001c:  ldarg.0
    IL_001d:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0022:  ldarg.1
    IL_0023:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    IL_0028:  pop
    IL_0029:  ret
  } // end of method InputBufferEventSupport::addInputBufferListener

  .method public hidebysig newslot virtual 
          instance void  fireConsume(char c) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0007:  ldc.i4.0
    IL_0008:  ldarg.1
    IL_0009:  ldc.i4.0
    IL_000a:  callvirt   instance void antlr.debug.InputBufferEventArgs::setValues(int32,
                                                                                   char,
                                                                                   int32)
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  ldc.i4.0
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0018:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireEvents(int32,
                                                                                       class [mscorlib]System.Collections.ArrayList)
    IL_001d:  nop
    IL_001e:  ret
  } // end of method InputBufferEventSupport::fireConsume

  .method public hidebysig newslot virtual 
          instance void  fireEvent(int32 'type',
                                   class antlr.debug.Listener l) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  stloc.0
    IL_0003:  ldloc.0
    IL_0004:  switch     ( 
                          IL_001b,
                          IL_0035,
                          IL_004f,
                          IL_0069)
    IL_0019:  br.s       IL_0083

    IL_001b:  ldarg.2
    IL_001c:  castclass  antlr.debug.InputBufferListener
    IL_0021:  ldarg.0
    IL_0022:  ldfld      object antlr.debug.InputBufferEventSupport::source
    IL_0027:  ldarg.0
    IL_0028:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_002d:  callvirt   instance void antlr.debug.InputBufferListener::inputBufferConsume(object,
                                                                                           class antlr.debug.InputBufferEventArgs)
    IL_0032:  nop
    IL_0033:  br.s       IL_009e

    IL_0035:  ldarg.2
    IL_0036:  castclass  antlr.debug.InputBufferListener
    IL_003b:  ldarg.0
    IL_003c:  ldfld      object antlr.debug.InputBufferEventSupport::source
    IL_0041:  ldarg.0
    IL_0042:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0047:  callvirt   instance void antlr.debug.InputBufferListener::inputBufferLA(object,
                                                                                      class antlr.debug.InputBufferEventArgs)
    IL_004c:  nop
    IL_004d:  br.s       IL_009e

    IL_004f:  ldarg.2
    IL_0050:  castclass  antlr.debug.InputBufferListener
    IL_0055:  ldarg.0
    IL_0056:  ldfld      object antlr.debug.InputBufferEventSupport::source
    IL_005b:  ldarg.0
    IL_005c:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0061:  callvirt   instance void antlr.debug.InputBufferListener::inputBufferMark(object,
                                                                                        class antlr.debug.InputBufferEventArgs)
    IL_0066:  nop
    IL_0067:  br.s       IL_009e

    IL_0069:  ldarg.2
    IL_006a:  castclass  antlr.debug.InputBufferListener
    IL_006f:  ldarg.0
    IL_0070:  ldfld      object antlr.debug.InputBufferEventSupport::source
    IL_0075:  ldarg.0
    IL_0076:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_007b:  callvirt   instance void antlr.debug.InputBufferListener::inputBufferRewind(object,
                                                                                          class antlr.debug.InputBufferEventArgs)
    IL_0080:  nop
    IL_0081:  br.s       IL_009e

    IL_0083:  ldstr      "bad type "
    IL_0088:  ldarg.1
    IL_0089:  box        [mscorlib]System.Int32
    IL_008e:  ldstr      " for fireEvent()"
    IL_0093:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_0098:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_009d:  throw

    IL_009e:  ret
  } // end of method InputBufferEventSupport::fireEvent

  .method public hidebysig newslot virtual 
          instance void  fireEvents(int32 'type',
                                    class [mscorlib]System.Collections.ArrayList listeners) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             class antlr.debug.Listener V_1,
             int32 V_2,
             class antlr.debug.InputBufferEventSupport V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  ldnull
    IL_0004:  stloc.1
    IL_0005:  ldarg.0
    IL_0006:  dup
    IL_0007:  stloc.3
    IL_0008:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_000d:  nop
    .try
    {
      IL_000e:  nop
      IL_000f:  ldarg.2
      IL_0010:  ldnull
      IL_0011:  ceq
      IL_0013:  ldc.i4.0
      IL_0014:  ceq
      IL_0016:  stloc.s    V_4
      IL_0018:  ldloc.s    V_4
      IL_001a:  brtrue.s   IL_001e

      IL_001c:  leave.s    IL_006f

      IL_001e:  ldarg.2
      IL_001f:  callvirt   instance object [mscorlib]System.Collections.ArrayList::Clone()
      IL_0024:  castclass  [mscorlib]System.Collections.ArrayList
      IL_0029:  stloc.0
      IL_002a:  nop
      IL_002b:  leave.s    IL_0035

    }  // end .try
    finally
    {
      IL_002d:  ldloc.3
      IL_002e:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_0033:  nop
      IL_0034:  endfinally
    }  // end handler
    IL_0035:  nop
    IL_0036:  ldloc.0
    IL_0037:  ldnull
    IL_0038:  ceq
    IL_003a:  stloc.s    V_4
    IL_003c:  ldloc.s    V_4
    IL_003e:  brtrue.s   IL_006f

    IL_0040:  ldc.i4.0
    IL_0041:  stloc.2
    IL_0042:  br.s       IL_0060

    IL_0044:  nop
    IL_0045:  ldloc.0
    IL_0046:  ldloc.2
    IL_0047:  callvirt   instance object [mscorlib]System.Collections.ArrayList::get_Item(int32)
    IL_004c:  castclass  antlr.debug.Listener
    IL_0051:  stloc.1
    IL_0052:  ldarg.0
    IL_0053:  ldarg.1
    IL_0054:  ldloc.1
    IL_0055:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireEvent(int32,
                                                                                      class antlr.debug.Listener)
    IL_005a:  nop
    IL_005b:  nop
    IL_005c:  ldloc.2
    IL_005d:  ldc.i4.1
    IL_005e:  add
    IL_005f:  stloc.2
    IL_0060:  ldloc.2
    IL_0061:  ldloc.0
    IL_0062:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_0067:  clt
    IL_0069:  stloc.s    V_4
    IL_006b:  ldloc.s    V_4
    IL_006d:  brtrue.s   IL_0044

    IL_006f:  nop
    IL_0070:  ret
  } // end of method InputBufferEventSupport::fireEvents

  .method public hidebysig newslot virtual 
          instance void  fireLA(char c,
                                int32 la) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0007:  ldc.i4.1
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  callvirt   instance void antlr.debug.InputBufferEventArgs::setValues(int32,
                                                                                   char,
                                                                                   int32)
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0018:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireEvents(int32,
                                                                                       class [mscorlib]System.Collections.ArrayList)
    IL_001d:  nop
    IL_001e:  ret
  } // end of method InputBufferEventSupport::fireLA

  .method public hidebysig newslot virtual 
          instance void  fireMark(int32 pos) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0007:  ldc.i4.2
    IL_0008:  ldc.i4.s   32
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance void antlr.debug.InputBufferEventArgs::setValues(int32,
                                                                                   char,
                                                                                   int32)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldc.i4.2
    IL_0013:  ldarg.0
    IL_0014:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0019:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireEvents(int32,
                                                                                       class [mscorlib]System.Collections.ArrayList)
    IL_001e:  nop
    IL_001f:  ret
  } // end of method InputBufferEventSupport::fireMark

  .method public hidebysig newslot virtual 
          instance void  fireRewind(int32 pos) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.InputBufferEventArgs antlr.debug.InputBufferEventSupport::inputBufferEvent
    IL_0007:  ldc.i4.3
    IL_0008:  ldc.i4.s   32
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance void antlr.debug.InputBufferEventArgs::setValues(int32,
                                                                                   char,
                                                                                   int32)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldc.i4.3
    IL_0013:  ldarg.0
    IL_0014:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0019:  callvirt   instance void antlr.debug.InputBufferEventSupport::fireEvents(int32,
                                                                                       class [mscorlib]System.Collections.ArrayList)
    IL_001e:  nop
    IL_001f:  ret
  } // end of method InputBufferEventSupport::fireRewind

  .method famorassem hidebysig newslot virtual 
          instance void  refresh(class [mscorlib]System.Collections.ArrayList listeners) cil managed
  {
    // 
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             int32 V_1,
             class [mscorlib]System.Collections.ArrayList V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  dup
    IL_0003:  stloc.2
    IL_0004:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0009:  nop
    .try
    {
      IL_000a:  nop
      IL_000b:  ldarg.1
      IL_000c:  callvirt   instance object [mscorlib]System.Collections.ArrayList::Clone()
      IL_0011:  castclass  [mscorlib]System.Collections.ArrayList
      IL_0016:  stloc.0
      IL_0017:  nop
      IL_0018:  leave.s    IL_0022

    }  // end .try
    finally
    {
      IL_001a:  ldloc.2
      IL_001b:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_0020:  nop
      IL_0021:  endfinally
    }  // end handler
    IL_0022:  nop
    IL_0023:  ldloc.0
    IL_0024:  ldnull
    IL_0025:  ceq
    IL_0027:  stloc.3
    IL_0028:  ldloc.3
    IL_0029:  brtrue.s   IL_0052

    IL_002b:  ldc.i4.0
    IL_002c:  stloc.1
    IL_002d:  br.s       IL_0045

    IL_002f:  ldloc.0
    IL_0030:  ldloc.1
    IL_0031:  callvirt   instance object [mscorlib]System.Collections.ArrayList::get_Item(int32)
    IL_0036:  castclass  antlr.debug.Listener
    IL_003b:  callvirt   instance void antlr.debug.Listener::refresh()
    IL_0040:  nop
    IL_0041:  ldloc.1
    IL_0042:  ldc.i4.1
    IL_0043:  add
    IL_0044:  stloc.1
    IL_0045:  ldloc.1
    IL_0046:  ldloc.0
    IL_0047:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_004c:  clt
    IL_004e:  stloc.3
    IL_004f:  ldloc.3
    IL_0050:  brtrue.s   IL_002f

    IL_0052:  ret
  } // end of method InputBufferEventSupport::refresh

  .method public hidebysig newslot virtual 
          instance void  refreshListeners() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0008:  callvirt   instance void antlr.debug.InputBufferEventSupport::refresh(class [mscorlib]System.Collections.ArrayList)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method InputBufferEventSupport::refreshListeners

  .method public hidebysig newslot virtual 
          instance void  removeInputBufferListener(class antlr.debug.InputBufferListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             object V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.2
    IL_000b:  ldloc.2
    IL_000c:  brtrue.s   IL_0029

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::inputBufferListeners
    IL_0015:  stloc.0
    IL_0016:  ldarg.1
    IL_0017:  stloc.1
    IL_0018:  ldloc.0
    IL_0019:  ldloc.1
    IL_001a:  callvirt   instance bool [mscorlib]System.Collections.ArrayList::Contains(object)
    IL_001f:  pop
    IL_0020:  ldloc.0
    IL_0021:  ldloc.1
    IL_0022:  callvirt   instance void [mscorlib]System.Collections.ArrayList::Remove(object)
    IL_0027:  nop
    IL_0028:  nop
    IL_0029:  ret
  } // end of method InputBufferEventSupport::removeInputBufferListener

  .property instance class [mscorlib]System.Collections.ArrayList
          InputBufferListeners()
  {
    .get instance class [mscorlib]System.Collections.ArrayList antlr.debug.InputBufferEventSupport::get_InputBufferListeners()
  } // end of property InputBufferEventSupport::InputBufferListeners
} // end of class antlr.debug.InputBufferEventSupport

.class public auto ansi beforefieldinit antlr.ParserSharedInputState
       extends [mscorlib]System.Object
{
  .field famorassem class antlr.TokenBuffer input
  .field public int32 guessing
  .field famorassem string filename
  .method public hidebysig newslot virtual 
          instance void  reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.ParserSharedInputState::guessing
    IL_0008:  ldarg.0
    IL_0009:  ldnull
    IL_000a:  stfld      string antlr.ParserSharedInputState::filename
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class antlr.TokenBuffer antlr.ParserSharedInputState::input
    IL_0015:  callvirt   instance void antlr.TokenBuffer::reset()
    IL_001a:  nop
    IL_001b:  ret
  } // end of method ParserSharedInputState::reset

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.ParserSharedInputState::guessing
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  ret
  } // end of method ParserSharedInputState::.ctor

} // end of class antlr.ParserSharedInputState

.class public auto ansi serializable beforefieldinit antlr.MismatchedCharException
       extends antlr.RecognitionException
{
  .class auto ansi sealed nested public CharTypeEnum
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum CharType = int32(0x00000001)
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum NotCharType = int32(0x00000002)
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum RangeType = int32(0x00000003)
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum NotRangeType = int32(0x00000004)
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum SetType = int32(0x00000005)
    .field public static literal valuetype antlr.MismatchedCharException/CharTypeEnum NotSetType = int32(0x00000006)
  } // end of class CharTypeEnum

  .field public valuetype antlr.MismatchedCharException/CharTypeEnum mismatchType
  .field public int32 foundChar
  .field public int32 expecting
  .field public int32 upper
  .field public class antlr.collections.impl.BitSet bset
  .field public class antlr.CharScanner scanner
  .method public hidebysig specialname virtual 
          instance string  get_Message() cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32[] V_1,
             int32 V_2,
             string V_3,
             valuetype antlr.MismatchedCharException/CharTypeEnum V_4,
             bool V_5)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_000d:  stloc.s    V_4
    IL_000f:  ldloc.s    V_4
    IL_0011:  ldc.i4.1
    IL_0012:  sub
    IL_0013:  switch     ( 
                          IL_0035,
                          IL_006e,
                          IL_0099,
                          IL_0099,
                          IL_0116,
                          IL_0116)
    IL_0030:  br         IL_018a

    IL_0035:  ldloc.0
    IL_0036:  ldstr      "expecting "
    IL_003b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0040:  pop
    IL_0041:  ldarg.0
    IL_0042:  ldloc.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      int32 antlr.MismatchedCharException::expecting
    IL_0049:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_004e:  nop
    IL_004f:  ldloc.0
    IL_0050:  ldstr      ", found "
    IL_0055:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_005a:  pop
    IL_005b:  ldarg.0
    IL_005c:  ldloc.0
    IL_005d:  ldarg.0
    IL_005e:  ldfld      int32 antlr.MismatchedCharException::foundChar
    IL_0063:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_0068:  nop
    IL_0069:  br         IL_0199

    IL_006e:  ldloc.0
    IL_006f:  ldstr      "expecting anything but '"
    IL_0074:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0079:  pop
    IL_007a:  ldarg.0
    IL_007b:  ldloc.0
    IL_007c:  ldarg.0
    IL_007d:  ldfld      int32 antlr.MismatchedCharException::expecting
    IL_0082:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_0087:  nop
    IL_0088:  ldloc.0
    IL_0089:  ldstr      "'; got it anyway"
    IL_008e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0093:  pop
    IL_0094:  br         IL_0199

    IL_0099:  ldloc.0
    IL_009a:  ldstr      "expecting token "
    IL_009f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00a4:  pop
    IL_00a5:  ldarg.0
    IL_00a6:  ldfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_00ab:  ldc.i4.4
    IL_00ac:  ceq
    IL_00ae:  ldc.i4.0
    IL_00af:  ceq
    IL_00b1:  stloc.s    V_5
    IL_00b3:  ldloc.s    V_5
    IL_00b5:  brtrue.s   IL_00c3

    IL_00b7:  ldloc.0
    IL_00b8:  ldstr      "NOT "
    IL_00bd:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00c2:  pop
    IL_00c3:  ldloc.0
    IL_00c4:  ldstr      "in range: "
    IL_00c9:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00ce:  pop
    IL_00cf:  ldarg.0
    IL_00d0:  ldloc.0
    IL_00d1:  ldarg.0
    IL_00d2:  ldfld      int32 antlr.MismatchedCharException::expecting
    IL_00d7:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_00dc:  nop
    IL_00dd:  ldloc.0
    IL_00de:  ldstr      ".."
    IL_00e3:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00e8:  pop
    IL_00e9:  ldarg.0
    IL_00ea:  ldloc.0
    IL_00eb:  ldarg.0
    IL_00ec:  ldfld      int32 antlr.MismatchedCharException::upper
    IL_00f1:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_00f6:  nop
    IL_00f7:  ldloc.0
    IL_00f8:  ldstr      ", found "
    IL_00fd:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0102:  pop
    IL_0103:  ldarg.0
    IL_0104:  ldloc.0
    IL_0105:  ldarg.0
    IL_0106:  ldfld      int32 antlr.MismatchedCharException::foundChar
    IL_010b:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_0110:  nop
    IL_0111:  br         IL_0199

    IL_0116:  ldloc.0
    IL_0117:  ldstr      "expecting "
    IL_011c:  ldarg.0
    IL_011d:  ldfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_0122:  ldc.i4.6
    IL_0123:  beq.s      IL_012c

    IL_0125:  ldstr      ""
    IL_012a:  br.s       IL_0131

    IL_012c:  ldstr      "NOT "
    IL_0131:  ldstr      "one of ("
    IL_0136:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_013b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0140:  pop
    IL_0141:  ldarg.0
    IL_0142:  ldfld      class antlr.collections.impl.BitSet antlr.MismatchedCharException::bset
    IL_0147:  callvirt   instance int32[] antlr.collections.impl.BitSet::toArray()
    IL_014c:  stloc.1
    IL_014d:  ldc.i4.0
    IL_014e:  stloc.2
    IL_014f:  br.s       IL_0162

    IL_0151:  nop
    IL_0152:  ldarg.0
    IL_0153:  ldloc.0
    IL_0154:  ldloc.1
    IL_0155:  ldloc.2
    IL_0156:  ldelem.i4
    IL_0157:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_015c:  nop
    IL_015d:  nop
    IL_015e:  ldloc.2
    IL_015f:  ldc.i4.1
    IL_0160:  add
    IL_0161:  stloc.2
    IL_0162:  ldloc.2
    IL_0163:  ldloc.1
    IL_0164:  ldlen
    IL_0165:  conv.i4
    IL_0166:  clt
    IL_0168:  stloc.s    V_5
    IL_016a:  ldloc.s    V_5
    IL_016c:  brtrue.s   IL_0151

    IL_016e:  ldloc.0
    IL_016f:  ldstr      "), found "
    IL_0174:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0179:  pop
    IL_017a:  ldarg.0
    IL_017b:  ldloc.0
    IL_017c:  ldarg.0
    IL_017d:  ldfld      int32 antlr.MismatchedCharException::foundChar
    IL_0182:  call       instance void antlr.MismatchedCharException::appendCharName(class [mscorlib]System.Text.StringBuilder,
                                                                                     int32)
    IL_0187:  nop
    IL_0188:  br.s       IL_0199

    IL_018a:  ldloc.0
    IL_018b:  ldarg.0
    IL_018c:  call       instance string [mscorlib]System.Exception::get_Message()
    IL_0191:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0196:  pop
    IL_0197:  br.s       IL_0199

    IL_0199:  ldloc.0
    IL_019a:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_019f:  stloc.3
    IL_01a0:  br.s       IL_01a2

    IL_01a2:  ldloc.3
    IL_01a3:  ret
  } // end of method MismatchedCharException::get_Message

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "Mismatched char"
    IL_0006:  call       instance void antlr.RecognitionException::.ctor(string)
    IL_000b:  nop
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  ret
  } // end of method MismatchedCharException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(char c,
                               char lower,
                               char upper_,
                               bool matchNot,
                               class antlr.CharScanner scanner_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "Mismatched char"
    IL_0006:  ldarg.s    scanner_
    IL_0008:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_000d:  ldarg.s    scanner_
    IL_000f:  callvirt   instance int32 antlr.CharScanner::getLine()
    IL_0014:  ldarg.s    scanner_
    IL_0016:  callvirt   instance int32 antlr.CharScanner::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.s    matchNot
    IL_0025:  brtrue.s   IL_002a

    IL_0027:  ldc.i4.3
    IL_0028:  br.s       IL_002b

    IL_002a:  ldc.i4.4
    IL_002b:  stfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_0030:  ldarg.0
    IL_0031:  ldarg.1
    IL_0032:  stfld      int32 antlr.MismatchedCharException::foundChar
    IL_0037:  ldarg.0
    IL_0038:  ldarg.2
    IL_0039:  stfld      int32 antlr.MismatchedCharException::expecting
    IL_003e:  ldarg.0
    IL_003f:  ldarg.3
    IL_0040:  stfld      int32 antlr.MismatchedCharException::upper
    IL_0045:  ldarg.0
    IL_0046:  ldarg.s    scanner_
    IL_0048:  stfld      class antlr.CharScanner antlr.MismatchedCharException::scanner
    IL_004d:  nop
    IL_004e:  ret
  } // end of method MismatchedCharException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(char c,
                               char expecting_,
                               bool matchNot,
                               class antlr.CharScanner scanner_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "Mismatched char"
    IL_0006:  ldarg.s    scanner_
    IL_0008:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_000d:  ldarg.s    scanner_
    IL_000f:  callvirt   instance int32 antlr.CharScanner::getLine()
    IL_0014:  ldarg.s    scanner_
    IL_0016:  callvirt   instance int32 antlr.CharScanner::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.3
    IL_0024:  brtrue.s   IL_0029

    IL_0026:  ldc.i4.1
    IL_0027:  br.s       IL_002a

    IL_0029:  ldc.i4.2
    IL_002a:  stfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_002f:  ldarg.0
    IL_0030:  ldarg.1
    IL_0031:  stfld      int32 antlr.MismatchedCharException::foundChar
    IL_0036:  ldarg.0
    IL_0037:  ldarg.2
    IL_0038:  stfld      int32 antlr.MismatchedCharException::expecting
    IL_003d:  ldarg.0
    IL_003e:  ldarg.s    scanner_
    IL_0040:  stfld      class antlr.CharScanner antlr.MismatchedCharException::scanner
    IL_0045:  nop
    IL_0046:  ret
  } // end of method MismatchedCharException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(char c,
                               class antlr.collections.impl.BitSet set_,
                               bool matchNot,
                               class antlr.CharScanner scanner_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "Mismatched char"
    IL_0006:  ldarg.s    scanner_
    IL_0008:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_000d:  ldarg.s    scanner_
    IL_000f:  callvirt   instance int32 antlr.CharScanner::getLine()
    IL_0014:  ldarg.s    scanner_
    IL_0016:  callvirt   instance int32 antlr.CharScanner::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.3
    IL_0024:  brtrue.s   IL_0029

    IL_0026:  ldc.i4.5
    IL_0027:  br.s       IL_002a

    IL_0029:  ldc.i4.6
    IL_002a:  stfld      valuetype antlr.MismatchedCharException/CharTypeEnum antlr.MismatchedCharException::mismatchType
    IL_002f:  ldarg.0
    IL_0030:  ldarg.1
    IL_0031:  stfld      int32 antlr.MismatchedCharException::foundChar
    IL_0036:  ldarg.0
    IL_0037:  ldarg.2
    IL_0038:  stfld      class antlr.collections.impl.BitSet antlr.MismatchedCharException::bset
    IL_003d:  ldarg.0
    IL_003e:  ldarg.s    scanner_
    IL_0040:  stfld      class antlr.CharScanner antlr.MismatchedCharException::scanner
    IL_0045:  nop
    IL_0046:  ret
  } // end of method MismatchedCharException::.ctor

  .method private hidebysig instance void 
          appendCharName(class [mscorlib]System.Text.StringBuilder sb,
                         int32 c) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.2
    IL_0002:  stloc.0
    IL_0003:  ldloc.0
    IL_0004:  ldc.i4.s   9
    IL_0006:  sub
    IL_0007:  switch     ( 
                          IL_0054,
                          IL_0038,
                          IL_0062,
                          IL_0062,
                          IL_0046)
    IL_0020:  ldloc.0
    IL_0021:  ldc.i4     0xffff
    IL_0026:  beq.s      IL_002a

    IL_0028:  br.s       IL_0062

    IL_002a:  ldarg.1
    IL_002b:  ldstr      "'<EOF>'"
    IL_0030:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0035:  pop
    IL_0036:  br.s       IL_007f

    IL_0038:  ldarg.1
    IL_0039:  ldstr      "'\\n'"
    IL_003e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0043:  pop
    IL_0044:  br.s       IL_007f

    IL_0046:  ldarg.1
    IL_0047:  ldstr      "'\\r'"
    IL_004c:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0051:  pop
    IL_0052:  br.s       IL_007f

    IL_0054:  ldarg.1
    IL_0055:  ldstr      "'\\t'"
    IL_005a:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_005f:  pop
    IL_0060:  br.s       IL_007f

    IL_0062:  ldarg.1
    IL_0063:  ldc.i4.s   39
    IL_0065:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_006a:  pop
    IL_006b:  ldarg.1
    IL_006c:  ldarg.2
    IL_006d:  conv.u2
    IL_006e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0073:  pop
    IL_0074:  ldarg.1
    IL_0075:  ldc.i4.s   39
    IL_0077:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_007c:  pop
    IL_007d:  br.s       IL_007f

    IL_007f:  ret
  } // end of method MismatchedCharException::appendCharName

  .property instance string Message()
  {
    .get instance string antlr.MismatchedCharException::get_Message()
  } // end of property MismatchedCharException::Message
} // end of class antlr.MismatchedCharException

.class public abstract auto ansi beforefieldinit antlr.debug.GuessingEventArgs
       extends antlr.debug.ANTLREventArgs
{
  .field private int32 guessing_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method GuessingEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.debug.ANTLREventArgs::.ctor(int32)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method GuessingEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Guessing() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.GuessingEventArgs::guessing_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method GuessingEventArgs::get_Guessing

  .method public hidebysig newslot specialname virtual 
          instance void  set_Guessing(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.GuessingEventArgs::guessing_
    IL_0008:  ret
  } // end of method GuessingEventArgs::set_Guessing

  .method public hidebysig newslot virtual 
          instance void  setValues(int32 'type',
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance void antlr.debug.ANTLREventArgs::setValues(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance void antlr.debug.GuessingEventArgs::set_Guessing(int32)
    IL_0010:  nop
    IL_0011:  ret
  } // end of method GuessingEventArgs::setValues

  .property instance int32 Guessing()
  {
    .set instance void antlr.debug.GuessingEventArgs::set_Guessing(int32)
    .get instance int32 antlr.debug.GuessingEventArgs::get_Guessing()
  } // end of property GuessingEventArgs::Guessing
} // end of class antlr.debug.GuessingEventArgs

.class public auto ansi beforefieldinit antlr.debug.SemanticPredicateEventArgs
       extends antlr.debug.GuessingEventArgs
{
  .field public static literal int32 VALIDATING = int32(0x00000000)
  .field public static literal int32 PREDICTING = int32(0x00000001)
  .field private int32 condition_
  .field private bool result_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method SemanticPredicateEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.debug.GuessingEventArgs::.ctor(int32)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method SemanticPredicateEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Condition() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.SemanticPredicateEventArgs::condition_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method SemanticPredicateEventArgs::get_Condition

  .method public hidebysig newslot specialname virtual 
          instance void  set_Condition(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.SemanticPredicateEventArgs::condition_
    IL_0008:  ret
  } // end of method SemanticPredicateEventArgs::set_Condition

  .method public hidebysig newslot specialname virtual 
          instance bool  get_Result() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.SemanticPredicateEventArgs::result_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method SemanticPredicateEventArgs::get_Result

  .method public hidebysig newslot specialname virtual 
          instance void  set_Result(bool 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.debug.SemanticPredicateEventArgs::result_
    IL_0008:  ret
  } // end of method SemanticPredicateEventArgs::set_Result

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    int32 condition,
                    bool result,
                    int32 guessing) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.s    guessing
    IL_0005:  call       instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_000a:  nop
    IL_000b:  ldarg.0
    IL_000c:  ldarg.2
    IL_000d:  callvirt   instance void antlr.debug.SemanticPredicateEventArgs::set_Condition(int32)
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldarg.3
    IL_0015:  callvirt   instance void antlr.debug.SemanticPredicateEventArgs::set_Result(bool)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method SemanticPredicateEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.7
    IL_0002:  newarr     [mscorlib]System.Object
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldc.i4.0
    IL_000a:  ldstr      "SemanticPredicateEvent ["
    IL_000f:  stelem.ref
    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance int32 antlr.debug.SemanticPredicateEventArgs::get_Condition()
    IL_0018:  box        [mscorlib]System.Int32
    IL_001d:  stelem.ref
    IL_001e:  ldloc.1
    IL_001f:  ldc.i4.2
    IL_0020:  ldstr      ","
    IL_0025:  stelem.ref
    IL_0026:  ldloc.1
    IL_0027:  ldc.i4.3
    IL_0028:  ldarg.0
    IL_0029:  callvirt   instance bool antlr.debug.SemanticPredicateEventArgs::get_Result()
    IL_002e:  box        [mscorlib]System.Boolean
    IL_0033:  stelem.ref
    IL_0034:  ldloc.1
    IL_0035:  ldc.i4.4
    IL_0036:  ldstr      ","
    IL_003b:  stelem.ref
    IL_003c:  ldloc.1
    IL_003d:  ldc.i4.5
    IL_003e:  ldarg.0
    IL_003f:  callvirt   instance int32 antlr.debug.GuessingEventArgs::get_Guessing()
    IL_0044:  box        [mscorlib]System.Int32
    IL_0049:  stelem.ref
    IL_004a:  ldloc.1
    IL_004b:  ldc.i4.6
    IL_004c:  ldstr      "]"
    IL_0051:  stelem.ref
    IL_0052:  ldloc.1
    IL_0053:  call       string [mscorlib]System.String::Concat(object[])
    IL_0058:  stloc.0
    IL_0059:  br.s       IL_005b

    IL_005b:  ldloc.0
    IL_005c:  ret
  } // end of method SemanticPredicateEventArgs::ToString

  .property instance int32 Condition()
  {
    .get instance int32 antlr.debug.SemanticPredicateEventArgs::get_Condition()
    .set instance void antlr.debug.SemanticPredicateEventArgs::set_Condition(int32)
  } // end of property SemanticPredicateEventArgs::Condition
  .property instance bool Result()
  {
    .get instance bool antlr.debug.SemanticPredicateEventArgs::get_Result()
    .set instance void antlr.debug.SemanticPredicateEventArgs::set_Result(bool)
  } // end of property SemanticPredicateEventArgs::Result
} // end of class antlr.debug.SemanticPredicateEventArgs

.class public abstract auto ansi beforefieldinit antlr.debug.TraceListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.TraceListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method TraceListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  enterRule(object source,
                                   class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method TraceListenerBase::enterRule

  .method public hidebysig newslot virtual 
          instance void  exitRule(object source,
                                  class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method TraceListenerBase::exitRule

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method TraceListenerBase::refresh

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TraceListenerBase::.ctor

} // end of class antlr.debug.TraceListenerBase

.class public auto ansi beforefieldinit antlr.debug.Tracer
       extends antlr.debug.TraceListenerBase
       implements antlr.debug.TraceListener,
                  antlr.debug.Listener
{
  .field family string indentString
  .method famorassem hidebysig newslot virtual 
          instance void  dedent() cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.debug.Tracer::indentString
    IL_0007:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_000c:  ldc.i4.2
    IL_000d:  clt
    IL_000f:  ldc.i4.0
    IL_0010:  ceq
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  brtrue.s   IL_0023

    IL_0016:  ldarg.0
    IL_0017:  ldstr      ""
    IL_001c:  stfld      string antlr.debug.Tracer::indentString
    IL_0021:  br.s       IL_0035

    IL_0023:  ldarg.0
    IL_0024:  ldarg.0
    IL_0025:  ldfld      string antlr.debug.Tracer::indentString
    IL_002a:  ldc.i4.2
    IL_002b:  callvirt   instance string [mscorlib]System.String::Substring(int32)
    IL_0030:  stfld      string antlr.debug.Tracer::indentString
    IL_0035:  ret
  } // end of method Tracer::dedent

  .method public hidebysig virtual instance void 
          enterRule(object source,
                    class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance void antlr.debug.Tracer::indent()
    IL_001e:  nop
    IL_001f:  ret
  } // end of method Tracer::enterRule

  .method public hidebysig virtual instance void 
          exitRule(object source,
                   class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance void antlr.debug.Tracer::dedent()
    IL_0007:  nop
    IL_0008:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000d:  ldarg.0
    IL_000e:  ldfld      string antlr.debug.Tracer::indentString
    IL_0013:  ldarg.2
    IL_0014:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0019:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_001e:  nop
    IL_001f:  ret
  } // end of method Tracer::exitRule

  .method famorassem hidebysig newslot virtual 
          instance void  indent() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      string antlr.debug.Tracer::indentString
    IL_0008:  ldstr      "  "
    IL_000d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0012:  stfld      string antlr.debug.Tracer::indentString
    IL_0017:  ret
  } // end of method Tracer::indent

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      ""
    IL_0006:  stfld      string antlr.debug.Tracer::indentString
    IL_000b:  ldarg.0
    IL_000c:  call       instance void antlr.debug.TraceListenerBase::.ctor()
    IL_0011:  nop
    IL_0012:  ret
  } // end of method Tracer::.ctor

} // end of class antlr.debug.Tracer

.class public auto ansi beforefieldinit antlr.debug.ParserReporter
       extends antlr.debug.Tracer
       implements antlr.debug.ParserListener,
                  antlr.debug.SemanticPredicateListener,
                  antlr.debug.ParserMatchListener,
                  antlr.debug.MessageListener,
                  antlr.debug.ParserTokenListener,
                  antlr.debug.TraceListener,
                  antlr.debug.SyntacticPredicateListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  parserConsume(object source,
                                       class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserConsume

  .method public hidebysig newslot virtual 
          instance void  parserLA(object source,
                                  class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserLA

  .method public hidebysig newslot virtual 
          instance void  parserMatch(object source,
                                     class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserMatch

  .method public hidebysig newslot virtual 
          instance void  parserMatchNot(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserMatchNot

  .method public hidebysig newslot virtual 
          instance void  parserMismatch(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserMismatch

  .method public hidebysig newslot virtual 
          instance void  parserMismatchNot(object source,
                                           class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::parserMismatchNot

  .method public hidebysig newslot virtual 
          instance void  reportError(object source,
                                     class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(object source,
                                       class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::reportWarning

  .method public hidebysig newslot virtual 
          instance void  semanticPredicateEvaluated(object source,
                                                    class antlr.debug.SemanticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::semanticPredicateEvaluated

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateFailed(object source,
                                                  class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::syntacticPredicateFailed

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateStarted(object source,
                                                   class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::syntacticPredicateStarted

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateSucceeded(object source,
                                                     class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.0
    IL_0007:  ldfld      string antlr.debug.Tracer::indentString
    IL_000c:  ldarg.2
    IL_000d:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0012:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_0017:  nop
    IL_0018:  ret
  } // end of method ParserReporter::syntacticPredicateSucceeded

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.Tracer::.ctor()
    IL_0006:  ret
  } // end of method ParserReporter::.ctor

} // end of class antlr.debug.ParserReporter

.class public auto ansi beforefieldinit antlr.debug.MatchEventArgs
       extends antlr.debug.GuessingEventArgs
{
  .class auto ansi sealed nested public ParserMatchEnums
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums TOKEN = int32(0x00000000)
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums BITSET = int32(0x00000001)
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums CHAR = int32(0x00000002)
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums CHAR_BITSET = int32(0x00000003)
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums STRING = int32(0x00000004)
    .field public static literal valuetype antlr.debug.MatchEventArgs/ParserMatchEnums CHAR_RANGE = int32(0x00000005)
  } // end of class ParserMatchEnums

  .field public static int32 TOKEN
  .field public static int32 BITSET
  .field public static int32 CHAR
  .field public static int32 CHAR_BITSET
  .field public static int32 STRING
  .field public static int32 CHAR_RANGE
  .field private bool inverse_
  .field private bool matched_
  .field private object target_
  .field private int32 val_
  .field private string text_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method MatchEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type',
                               int32 val,
                               object target,
                               string text,
                               int32 guessing,
                               bool inverse,
                               bool matched) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  ldarg.3
    IL_000c:  ldarg.s    text
    IL_000e:  ldarg.s    guessing
    IL_0010:  ldarg.s    inverse
    IL_0012:  ldarg.s    matched
    IL_0014:  call       instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  ret
  } // end of method MatchEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance object  get_Target() cil managed
  {
    // 
    .maxstack  1
    .locals init (object V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.MatchEventArgs::target_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MatchEventArgs::get_Target

  .method public hidebysig newslot specialname virtual 
          instance void  set_Target(object 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      object antlr.debug.MatchEventArgs::target_
    IL_0008:  ret
  } // end of method MatchEventArgs::set_Target

  .method public hidebysig newslot specialname virtual 
          instance string  get_Text() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.debug.MatchEventArgs::text_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MatchEventArgs::get_Text

  .method public hidebysig newslot specialname virtual 
          instance void  set_Text(string 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      string antlr.debug.MatchEventArgs::text_
    IL_0008:  ret
  } // end of method MatchEventArgs::set_Text

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Value() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.MatchEventArgs::val_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MatchEventArgs::get_Value

  .method public hidebysig newslot specialname virtual 
          instance void  set_Value(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.MatchEventArgs::val_
    IL_0008:  ret
  } // end of method MatchEventArgs::set_Value

  .method assembly hidebysig specialname 
          instance void  set_Inverse(bool 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.debug.MatchEventArgs::inverse_
    IL_0008:  ret
  } // end of method MatchEventArgs::set_Inverse

  .method assembly hidebysig specialname 
          instance void  set_Matched(bool 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      bool antlr.debug.MatchEventArgs::matched_
    IL_0008:  ret
  } // end of method MatchEventArgs::set_Matched

  .method public hidebysig newslot virtual 
          instance bool  isInverse() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.MatchEventArgs::inverse_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MatchEventArgs::isInverse

  .method public hidebysig newslot virtual 
          instance bool  isMatched() cil managed
  {
    // 
    .maxstack  1
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.MatchEventArgs::matched_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method MatchEventArgs::isMatched

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    int32 val,
                    object target,
                    string text,
                    int32 guessing,
                    bool inverse,
                    bool matched) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.s    guessing
    IL_0005:  call       instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_000a:  nop
    IL_000b:  ldarg.0
    IL_000c:  ldarg.2
    IL_000d:  callvirt   instance void antlr.debug.MatchEventArgs::set_Value(int32)
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldarg.3
    IL_0015:  callvirt   instance void antlr.debug.MatchEventArgs::set_Target(object)
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.s    inverse
    IL_001e:  call       instance void antlr.debug.MatchEventArgs::set_Inverse(bool)
    IL_0023:  nop
    IL_0024:  ldarg.0
    IL_0025:  ldarg.s    matched
    IL_0027:  call       instance void antlr.debug.MatchEventArgs::set_Matched(bool)
    IL_002c:  nop
    IL_002d:  ldarg.0
    IL_002e:  ldarg.s    text
    IL_0030:  callvirt   instance void antlr.debug.MatchEventArgs::set_Text(string)
    IL_0035:  nop
    IL_0036:  ret
  } // end of method MatchEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   10
    IL_0003:  newarr     [mscorlib]System.Object
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.0
    IL_000b:  ldstr      "ParserMatchEvent ["
    IL_0010:  stelem.ref
    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.1
    IL_0013:  ldarg.0
    IL_0014:  callvirt   instance bool antlr.debug.MatchEventArgs::isMatched()
    IL_0019:  brtrue.s   IL_0022

    IL_001b:  ldstr      "bad,"
    IL_0020:  br.s       IL_0027

    IL_0022:  ldstr      "ok,"
    IL_0027:  stelem.ref
    IL_0028:  ldloc.1
    IL_0029:  ldc.i4.2
    IL_002a:  ldarg.0
    IL_002b:  callvirt   instance bool antlr.debug.MatchEventArgs::isInverse()
    IL_0030:  brtrue.s   IL_0039

    IL_0032:  ldstr      ""
    IL_0037:  br.s       IL_003e

    IL_0039:  ldstr      "NOT "
    IL_003e:  stelem.ref
    IL_003f:  ldloc.1
    IL_0040:  ldc.i4.3
    IL_0041:  ldarg.0
    IL_0042:  callvirt   instance int32 antlr.debug.ANTLREventArgs::get_Type()
    IL_0047:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_004c:  beq.s      IL_0055

    IL_004e:  ldstr      "bitset,"
    IL_0053:  br.s       IL_005a

    IL_0055:  ldstr      "token,"
    IL_005a:  stelem.ref
    IL_005b:  ldloc.1
    IL_005c:  ldc.i4.4
    IL_005d:  ldarg.0
    IL_005e:  callvirt   instance int32 antlr.debug.MatchEventArgs::get_Value()
    IL_0063:  box        [mscorlib]System.Int32
    IL_0068:  stelem.ref
    IL_0069:  ldloc.1
    IL_006a:  ldc.i4.5
    IL_006b:  ldstr      ","
    IL_0070:  stelem.ref
    IL_0071:  ldloc.1
    IL_0072:  ldc.i4.6
    IL_0073:  ldarg.0
    IL_0074:  callvirt   instance object antlr.debug.MatchEventArgs::get_Target()
    IL_0079:  stelem.ref
    IL_007a:  ldloc.1
    IL_007b:  ldc.i4.7
    IL_007c:  ldstr      ","
    IL_0081:  stelem.ref
    IL_0082:  ldloc.1
    IL_0083:  ldc.i4.8
    IL_0084:  ldarg.0
    IL_0085:  callvirt   instance int32 antlr.debug.GuessingEventArgs::get_Guessing()
    IL_008a:  box        [mscorlib]System.Int32
    IL_008f:  stelem.ref
    IL_0090:  ldloc.1
    IL_0091:  ldc.i4.s   9
    IL_0093:  ldstr      "]"
    IL_0098:  stelem.ref
    IL_0099:  ldloc.1
    IL_009a:  call       string [mscorlib]System.String::Concat(object[])
    IL_009f:  stloc.0
    IL_00a0:  br.s       IL_00a2

    IL_00a2:  ldloc.0
    IL_00a3:  ret
  } // end of method MatchEventArgs::ToString

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  stsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0006:  ldc.i4.1
    IL_0007:  stsfld     int32 antlr.debug.MatchEventArgs::BITSET
    IL_000c:  ldc.i4.2
    IL_000d:  stsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0012:  ldc.i4.3
    IL_0013:  stsfld     int32 antlr.debug.MatchEventArgs::CHAR_BITSET
    IL_0018:  ldc.i4.4
    IL_0019:  stsfld     int32 antlr.debug.MatchEventArgs::STRING
    IL_001e:  ldc.i4.5
    IL_001f:  stsfld     int32 antlr.debug.MatchEventArgs::CHAR_RANGE
    IL_0024:  ret
  } // end of method MatchEventArgs::.cctor

  .property instance object Target()
  {
    .get instance object antlr.debug.MatchEventArgs::get_Target()
    .set instance void antlr.debug.MatchEventArgs::set_Target(object)
  } // end of property MatchEventArgs::Target
  .property instance string Text()
  {
    .set instance void antlr.debug.MatchEventArgs::set_Text(string)
    .get instance string antlr.debug.MatchEventArgs::get_Text()
  } // end of property MatchEventArgs::Text
  .property instance int32 Value()
  {
    .get instance int32 antlr.debug.MatchEventArgs::get_Value()
    .set instance void antlr.debug.MatchEventArgs::set_Value(int32)
  } // end of property MatchEventArgs::Value
  .property instance bool Inverse()
  {
    .set instance void antlr.debug.MatchEventArgs::set_Inverse(bool)
  } // end of property MatchEventArgs::Inverse
  .property instance bool Matched()
  {
    .set instance void antlr.debug.MatchEventArgs::set_Matched(bool)
  } // end of property MatchEventArgs::Matched
} // end of class antlr.debug.MatchEventArgs

.class public auto ansi beforefieldinit antlr.debug.ParserListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.ParserListener,
                  antlr.debug.SemanticPredicateListener,
                  antlr.debug.ParserMatchListener,
                  antlr.debug.MessageListener,
                  antlr.debug.ParserTokenListener,
                  antlr.debug.TraceListener,
                  antlr.debug.SyntacticPredicateListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  enterRule(object source,
                                   class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::enterRule

  .method public hidebysig newslot virtual 
          instance void  exitRule(object source,
                                  class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::exitRule

  .method public hidebysig newslot virtual 
          instance void  parserConsume(object source,
                                       class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserConsume

  .method public hidebysig newslot virtual 
          instance void  parserLA(object source,
                                  class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserLA

  .method public hidebysig newslot virtual 
          instance void  parserMatch(object source,
                                     class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserMatch

  .method public hidebysig newslot virtual 
          instance void  parserMatchNot(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserMatchNot

  .method public hidebysig newslot virtual 
          instance void  parserMismatch(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserMismatch

  .method public hidebysig newslot virtual 
          instance void  parserMismatchNot(object source,
                                           class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::parserMismatchNot

  .method public hidebysig newslot virtual 
          instance void  reportError(object source,
                                     class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::reportError

  .method public hidebysig newslot virtual 
          instance void  reportWarning(object source,
                                       class antlr.debug.MessageEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::reportWarning

  .method public hidebysig newslot virtual 
          instance void  semanticPredicateEvaluated(object source,
                                                    class antlr.debug.SemanticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::semanticPredicateEvaluated

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateFailed(object source,
                                                  class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::syntacticPredicateFailed

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateStarted(object source,
                                                   class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::syntacticPredicateStarted

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateSucceeded(object source,
                                                     class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::syntacticPredicateSucceeded

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserListenerBase::refresh

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ParserListenerBase::.ctor

} // end of class antlr.debug.ParserListenerBase

.class public auto ansi beforefieldinit antlr.debug.NewLineEventArgs
       extends antlr.debug.ANTLREventArgs
{
  .field private int32 line_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method NewLineEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 line) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  callvirt   instance void antlr.debug.NewLineEventArgs::set_Line(int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ret
  } // end of method NewLineEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Line() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.NewLineEventArgs::line_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method NewLineEventArgs::get_Line

  .method public hidebysig newslot specialname virtual 
          instance void  set_Line(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.NewLineEventArgs::line_
    IL_0008:  ret
  } // end of method NewLineEventArgs::set_Line

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      "NewLineEvent ["
    IL_0006:  ldarg.0
    IL_0007:  ldfld      int32 antlr.debug.NewLineEventArgs::line_
    IL_000c:  box        [mscorlib]System.Int32
    IL_0011:  ldstr      "]"
    IL_0016:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_001b:  stloc.0
    IL_001c:  br.s       IL_001e

    IL_001e:  ldloc.0
    IL_001f:  ret
  } // end of method NewLineEventArgs::ToString

  .property instance int32 Line()
  {
    .set instance void antlr.debug.NewLineEventArgs::set_Line(int32)
    .get instance int32 antlr.debug.NewLineEventArgs::get_Line()
  } // end of property NewLineEventArgs::Line
} // end of class antlr.debug.NewLineEventArgs

.class public auto ansi beforefieldinit antlr.debug.LLkDebuggingParser
       extends antlr.LLkParser
       implements antlr.debug.DebuggingParser
{
  .field famorassem class antlr.debug.ParserEventSupport parserEventSupport
  .field private bool _notDebugMode
  .field famorassem string[] ruleNames
  .field famorassem string[] semPredNames
  .method private hidebysig instance void 
          InitBlock() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  newobj     instance void antlr.debug.ParserEventSupport::.ctor(object)
    IL_0008:  stfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_000d:  ret
  } // end of method LLkDebuggingParser::InitBlock

  .method public hidebysig virtual instance void 
          setDebugMode(bool mode) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldc.i4.0
    IL_0004:  ceq
    IL_0006:  stfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_000b:  ret
  } // end of method LLkDebuggingParser::setDebugMode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.LLkParser::.ctor(int32)
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  call       instance void antlr.debug.LLkDebuggingParser::InitBlock()
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method LLkDebuggingParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.ParserSharedInputState state,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  call       instance void antlr.LLkParser::.ctor(class antlr.ParserSharedInputState,
                                                              int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  call       instance void antlr.debug.LLkDebuggingParser::InitBlock()
    IL_0017:  nop
    IL_0018:  nop
    IL_0019:  ret
  } // end of method LLkDebuggingParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenBuffer tokenBuf,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  call       instance void antlr.LLkParser::.ctor(class antlr.TokenBuffer,
                                                              int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  call       instance void antlr.debug.LLkDebuggingParser::InitBlock()
    IL_0017:  nop
    IL_0018:  nop
    IL_0019:  ret
  } // end of method LLkDebuggingParser::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream lexer,
                               int32 k_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  call       instance void antlr.LLkParser::.ctor(class antlr.TokenStream,
                                                              int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  call       instance void antlr.debug.LLkDebuggingParser::InitBlock()
    IL_0017:  nop
    IL_0018:  nop
    IL_0019:  ret
  } // end of method LLkDebuggingParser::.ctor

  .method public hidebysig virtual instance void 
          addMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addMessageListener(class antlr.debug.MessageListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addMessageListener

  .method public hidebysig virtual instance void 
          addParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addParserListener(class antlr.debug.ParserListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addParserListener

  .method public hidebysig virtual instance void 
          addParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addParserMatchListener

  .method public hidebysig virtual instance void 
          addParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addParserTokenListener

  .method public hidebysig virtual instance void 
          addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addSemanticPredicateListener

  .method public hidebysig virtual instance void 
          addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addSyntacticPredicateListener

  .method public hidebysig virtual instance void 
          addTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::addTraceListener(class antlr.debug.TraceListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::addTraceListener

  .method public hidebysig virtual instance void 
          consume() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   -99
    IL_0003:  stloc.0
    IL_0004:  ldarg.0
    IL_0005:  ldc.i4.1
    IL_0006:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_000b:  stloc.0
    IL_000c:  ldarg.0
    IL_000d:  call       instance void antlr.LLkParser::consume()
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0019:  ldloc.0
    IL_001a:  callvirt   instance void antlr.debug.ParserEventSupport::fireConsume(int32)
    IL_001f:  nop
    IL_0020:  ret
  } // end of method LLkDebuggingParser::consume

  .method famorassem hidebysig newslot virtual 
          instance void  fireEnterRule(int32 num,
                                       int32 data) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0027

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001b:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_0020:  ldarg.2
    IL_0021:  callvirt   instance void antlr.debug.ParserEventSupport::fireEnterRule(int32,
                                                                                     int32,
                                                                                     int32)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method LLkDebuggingParser::fireEnterRule

  .method famorassem hidebysig newslot virtual 
          instance void  fireExitRule(int32 num,
                                      int32 data) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0027

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001b:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_0020:  ldarg.2
    IL_0021:  callvirt   instance void antlr.debug.ParserEventSupport::fireExitRule(int32,
                                                                                    int32,
                                                                                    int32)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method LLkDebuggingParser::fireExitRule

  .method famorassem hidebysig newslot virtual 
          instance bool  fireSemanticPredicateEvaluated(int32 'type',
                                                        int32 num,
                                                        bool condition) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  brtrue.s   IL_002a

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.2
    IL_0016:  ldarg.3
    IL_0017:  ldarg.0
    IL_0018:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001d:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_0022:  callvirt   instance bool antlr.debug.ParserEventSupport::fireSemanticPredicateEvaluated(int32,
                                                                                                      int32,
                                                                                                      bool,
                                                                                                      int32)
    IL_0027:  stloc.0
    IL_0028:  br.s       IL_002e

    IL_002a:  ldarg.3
    IL_002b:  stloc.0
    IL_002c:  br.s       IL_002e

    IL_002e:  ldloc.0
    IL_002f:  ret
  } // end of method LLkDebuggingParser::fireSemanticPredicateEvaluated

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateFailed() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001a:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ParserEventSupport::fireSyntacticPredicateFailed(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method LLkDebuggingParser::fireSyntacticPredicateFailed

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateStarted() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001a:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ParserEventSupport::fireSyntacticPredicateStarted(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method LLkDebuggingParser::fireSyntacticPredicateStarted

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateSucceeded() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.Parser::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_001a:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ParserEventSupport::fireSyntacticPredicateSucceeded(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method LLkDebuggingParser::fireSyntacticPredicateSucceeded

  .method public hidebysig newslot virtual 
          instance string  getRuleName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.debug.LLkDebuggingParser::ruleNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method LLkDebuggingParser::getRuleName

  .method public hidebysig newslot virtual 
          instance string  getSemPredName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.debug.LLkDebuggingParser::semPredNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method LLkDebuggingParser::getSemPredName

  .method public hidebysig newslot virtual 
          instance void  goToSleep() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.debug.LLkDebuggingParser V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  stloc.0
    IL_0004:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0009:  nop
    .try
    {
      IL_000a:  nop
      .try
      {
        IL_000b:  nop
        IL_000c:  ldarg.0
        IL_000d:  call       bool [mscorlib]System.Threading.Monitor::Wait(object)
        IL_0012:  pop
        IL_0013:  nop
        IL_0014:  leave.s    IL_001b

      }  // end .try
      catch [mscorlib]System.Threading.ThreadInterruptedException 
      {
        IL_0016:  pop
        IL_0017:  nop
        IL_0018:  nop
        IL_0019:  leave.s    IL_001b

      }  // end handler
      IL_001b:  nop
      IL_001c:  nop
      IL_001d:  leave.s    IL_0027

    }  // end .try
    finally
    {
      IL_001f:  ldloc.0
      IL_0020:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_0025:  nop
      IL_0026:  endfinally
    }  // end handler
    IL_0027:  nop
    IL_0028:  ret
  } // end of method LLkDebuggingParser::goToSleep

  .method public hidebysig virtual instance bool 
          isDebugMode() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.LLkDebuggingParser::_notDebugMode
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  br.s       IL_000d

    IL_000d:  ldloc.0
    IL_000e:  ret
  } // end of method LLkDebuggingParser::isDebugMode

  .method public hidebysig newslot virtual 
          instance bool  isGuessing() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
    IL_0007:  ldfld      int32 antlr.ParserSharedInputState::guessing
    IL_000c:  ldc.i4.0
    IL_000d:  cgt
    IL_000f:  stloc.0
    IL_0010:  br.s       IL_0012

    IL_0012:  ldloc.0
    IL_0013:  ret
  } // end of method LLkDebuggingParser::isGuessing

  .method public hidebysig virtual instance int32 
          LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance int32 antlr.LLkParser::LA(int32)
    IL_0008:  stloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_000f:  ldarg.1
    IL_0010:  ldloc.0
    IL_0011:  callvirt   instance void antlr.debug.ParserEventSupport::fireLA(int32,
                                                                              int32)
    IL_0016:  nop
    IL_0017:  ldloc.0
    IL_0018:  stloc.1
    IL_0019:  br.s       IL_001b

    IL_001b:  ldloc.1
    IL_001c:  ret
  } // end of method LLkDebuggingParser::LA

  .method public hidebysig virtual instance void 
          match(int32 t) cil managed
  {
    // 
    .maxstack  5
    .locals init (string V_0,
             int32 V_1,
             class antlr.MismatchedTokenException V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0008:  callvirt   instance string antlr.IToken::getText()
    IL_000d:  stloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.1
    IL_0010:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0015:  stloc.1
    .try
    {
      IL_0016:  nop
      IL_0017:  ldarg.0
      IL_0018:  ldarg.1
      IL_0019:  call       instance void antlr.Parser::match(int32)
      IL_001e:  nop
      IL_001f:  ldarg.0
      IL_0020:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0025:  ldarg.1
      IL_0026:  ldloc.0
      IL_0027:  ldarg.0
      IL_0028:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_002d:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0032:  callvirt   instance void antlr.debug.ParserEventSupport::fireMatch(int32,
                                                                                   string,
                                                                                   int32)
      IL_0037:  nop
      IL_0038:  nop
      IL_0039:  leave.s    IL_006e

    }  // end .try
    catch antlr.MismatchedTokenException 
    {
      IL_003b:  stloc.2
      IL_003c:  nop
      IL_003d:  ldarg.0
      IL_003e:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0043:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0048:  ldc.i4.0
      IL_0049:  ceq
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  stloc.3
      IL_004f:  ldloc.3
      IL_0050:  brtrue.s   IL_006c

      IL_0052:  ldarg.0
      IL_0053:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0058:  ldloc.1
      IL_0059:  ldarg.1
      IL_005a:  ldloc.0
      IL_005b:  ldarg.0
      IL_005c:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0061:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0066:  callvirt   instance void antlr.debug.ParserEventSupport::fireMismatch(int32,
                                                                                      int32,
                                                                                      string,
                                                                                      int32)
      IL_006b:  nop
      IL_006c:  ldloc.2
      IL_006d:  throw

    }  // end handler
    IL_006e:  nop
    IL_006f:  ret
  } // end of method LLkDebuggingParser::match

  .method public hidebysig virtual instance void 
          match(class antlr.collections.impl.BitSet b) cil managed
  {
    // 
    .maxstack  5
    .locals init (string V_0,
             int32 V_1,
             class antlr.MismatchedTokenException V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0008:  callvirt   instance string antlr.IToken::getText()
    IL_000d:  stloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.1
    IL_0010:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0015:  stloc.1
    .try
    {
      IL_0016:  nop
      IL_0017:  ldarg.0
      IL_0018:  ldarg.1
      IL_0019:  call       instance void antlr.Parser::match(class antlr.collections.impl.BitSet)
      IL_001e:  nop
      IL_001f:  ldarg.0
      IL_0020:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0025:  ldloc.1
      IL_0026:  ldarg.1
      IL_0027:  ldloc.0
      IL_0028:  ldarg.0
      IL_0029:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_002e:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0033:  callvirt   instance void antlr.debug.ParserEventSupport::fireMatch(int32,
                                                                                   class antlr.collections.impl.BitSet,
                                                                                   string,
                                                                                   int32)
      IL_0038:  nop
      IL_0039:  nop
      IL_003a:  leave.s    IL_006f

    }  // end .try
    catch antlr.MismatchedTokenException 
    {
      IL_003c:  stloc.2
      IL_003d:  nop
      IL_003e:  ldarg.0
      IL_003f:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0044:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0049:  ldc.i4.0
      IL_004a:  ceq
      IL_004c:  ldc.i4.0
      IL_004d:  ceq
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  brtrue.s   IL_006d

      IL_0053:  ldarg.0
      IL_0054:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0059:  ldloc.1
      IL_005a:  ldarg.1
      IL_005b:  ldloc.0
      IL_005c:  ldarg.0
      IL_005d:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0062:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0067:  callvirt   instance void antlr.debug.ParserEventSupport::fireMismatch(int32,
                                                                                      class antlr.collections.impl.BitSet,
                                                                                      string,
                                                                                      int32)
      IL_006c:  nop
      IL_006d:  ldloc.2
      IL_006e:  throw

    }  // end handler
    IL_006f:  nop
    IL_0070:  ret
  } // end of method LLkDebuggingParser::match

  .method public hidebysig virtual instance void 
          matchNot(int32 t) cil managed
  {
    // 
    .maxstack  5
    .locals init (string V_0,
             int32 V_1,
             class antlr.MismatchedTokenException V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance class antlr.IToken antlr.Parser::LT(int32)
    IL_0008:  callvirt   instance string antlr.IToken::getText()
    IL_000d:  stloc.0
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.1
    IL_0010:  callvirt   instance int32 antlr.Parser::LA(int32)
    IL_0015:  stloc.1
    .try
    {
      IL_0016:  nop
      IL_0017:  ldarg.0
      IL_0018:  ldarg.1
      IL_0019:  call       instance void antlr.Parser::matchNot(int32)
      IL_001e:  nop
      IL_001f:  ldarg.0
      IL_0020:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0025:  ldloc.1
      IL_0026:  ldarg.1
      IL_0027:  ldloc.0
      IL_0028:  ldarg.0
      IL_0029:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_002e:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0033:  callvirt   instance void antlr.debug.ParserEventSupport::fireMatchNot(int32,
                                                                                      int32,
                                                                                      string,
                                                                                      int32)
      IL_0038:  nop
      IL_0039:  nop
      IL_003a:  leave.s    IL_006f

    }  // end .try
    catch antlr.MismatchedTokenException 
    {
      IL_003c:  stloc.2
      IL_003d:  nop
      IL_003e:  ldarg.0
      IL_003f:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0044:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0049:  ldc.i4.0
      IL_004a:  ceq
      IL_004c:  ldc.i4.0
      IL_004d:  ceq
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  brtrue.s   IL_006d

      IL_0053:  ldarg.0
      IL_0054:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
      IL_0059:  ldloc.1
      IL_005a:  ldarg.1
      IL_005b:  ldloc.0
      IL_005c:  ldarg.0
      IL_005d:  ldfld      class antlr.ParserSharedInputState antlr.Parser::inputState
      IL_0062:  ldfld      int32 antlr.ParserSharedInputState::guessing
      IL_0067:  callvirt   instance void antlr.debug.ParserEventSupport::fireMismatchNot(int32,
                                                                                         int32,
                                                                                         string,
                                                                                         int32)
      IL_006c:  nop
      IL_006d:  ldloc.2
      IL_006e:  throw

    }  // end handler
    IL_006f:  nop
    IL_0070:  ret
  } // end of method LLkDebuggingParser::matchNot

  .method public hidebysig virtual instance void 
          removeMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeMessageListener(class antlr.debug.MessageListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeMessageListener

  .method public hidebysig virtual instance void 
          removeParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeParserListener(class antlr.debug.ParserListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeParserListener

  .method public hidebysig virtual instance void 
          removeParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeParserMatchListener

  .method public hidebysig virtual instance void 
          removeParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeParserTokenListener

  .method public hidebysig virtual instance void 
          removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeSemanticPredicateListener

  .method public hidebysig virtual instance void 
          removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeSyntacticPredicateListener

  .method public hidebysig virtual instance void 
          removeTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::removeTraceListener(class antlr.debug.TraceListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method LLkDebuggingParser::removeTraceListener

  .method public hidebysig virtual instance void 
          reportError(class antlr.RecognitionException ex) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::fireReportError(class [mscorlib]System.Exception)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.Parser::reportError(class antlr.RecognitionException)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method LLkDebuggingParser::reportError

  .method public hidebysig virtual instance void 
          reportError(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::fireReportError(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.Parser::reportError(string)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method LLkDebuggingParser::reportError

  .method public hidebysig virtual instance void 
          reportWarning(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserEventSupport antlr.debug.LLkDebuggingParser::parserEventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ParserEventSupport::fireReportWarning(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.Parser::reportWarning(string)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method LLkDebuggingParser::reportWarning

  .method public hidebysig newslot virtual 
          instance void  setupDebugging(class antlr.TokenBuffer tokenBuf) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldnull
    IL_0003:  ldarg.1
    IL_0004:  callvirt   instance void antlr.debug.LLkDebuggingParser::setupDebugging(class antlr.TokenStream,
                                                                                      class antlr.TokenBuffer)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method LLkDebuggingParser::setupDebugging

  .method public hidebysig newslot virtual 
          instance void  setupDebugging(class antlr.TokenStream lexer) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldnull
    IL_0004:  callvirt   instance void antlr.debug.LLkDebuggingParser::setupDebugging(class antlr.TokenStream,
                                                                                      class antlr.TokenBuffer)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method LLkDebuggingParser::setupDebugging

  .method famorassem hidebysig newslot virtual 
          instance void  setupDebugging(class antlr.TokenStream lexer,
                                        class antlr.TokenBuffer tokenBuf) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Type V_0,
             class [mscorlib]System.Reflection.ConstructorInfo V_1,
             class [mscorlib]System.Exception V_2,
             class [mscorlib]System.Type[] V_3,
             object[] V_4)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance void antlr.Parser::setDebugMode(bool)
    IL_0008:  nop
    .try
    {
      IL_0009:  nop
      IL_000a:  ldstr      "antlr.parseview.ParseView"
      IL_000f:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetType(string)
      IL_0014:  stloc.0
      IL_0015:  ldloc.0
      IL_0016:  ldc.i4.3
      IL_0017:  newarr     [mscorlib]System.Type
      IL_001c:  stloc.3
      IL_001d:  ldloc.3
      IL_001e:  ldc.i4.0
      IL_001f:  ldtoken    antlr.debug.LLkDebuggingParser
      IL_0024:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0029:  stelem.ref
      IL_002a:  ldloc.3
      IL_002b:  ldc.i4.1
      IL_002c:  ldtoken    antlr.TokenStream
      IL_0031:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0036:  stelem.ref
      IL_0037:  ldloc.3
      IL_0038:  ldc.i4.2
      IL_0039:  ldtoken    antlr.TokenBuffer
      IL_003e:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_0043:  stelem.ref
      IL_0044:  ldloc.3
      IL_0045:  callvirt   instance class [mscorlib]System.Reflection.ConstructorInfo [mscorlib]System.Type::GetConstructor(class [mscorlib]System.Type[])
      IL_004a:  stloc.1
      IL_004b:  ldloc.1
      IL_004c:  ldc.i4.3
      IL_004d:  newarr     [mscorlib]System.Object
      IL_0052:  stloc.s    V_4
      IL_0054:  ldloc.s    V_4
      IL_0056:  ldc.i4.0
      IL_0057:  ldarg.0
      IL_0058:  stelem.ref
      IL_0059:  ldloc.s    V_4
      IL_005b:  ldc.i4.1
      IL_005c:  ldarg.1
      IL_005d:  stelem.ref
      IL_005e:  ldloc.s    V_4
      IL_0060:  ldc.i4.2
      IL_0061:  ldarg.2
      IL_0062:  stelem.ref
      IL_0063:  ldloc.s    V_4
      IL_0065:  callvirt   instance object [mscorlib]System.Reflection.ConstructorInfo::Invoke(object[])
      IL_006a:  pop
      IL_006b:  nop
      IL_006c:  leave.s    IL_00a0

    }  // end .try
    catch [mscorlib]System.Exception 
    {
      IL_006e:  stloc.2
      IL_006f:  nop
      IL_0070:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
      IL_0075:  ldstr      "Error initializing ParseView: "
      IL_007a:  ldloc.2
      IL_007b:  call       string [mscorlib]System.String::Concat(object,
                                                                  object)
      IL_0080:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
      IL_0085:  nop
      IL_0086:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
      IL_008b:  ldstr      "Please report this to Scott Stanchfield, thetick@m"
      + "agelang.com"
      IL_0090:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
      IL_0095:  nop
      IL_0096:  ldc.i4.1
      IL_0097:  call       void [mscorlib]System.Environment::Exit(int32)
      IL_009c:  nop
      IL_009d:  nop
      IL_009e:  leave.s    IL_00a0

    }  // end handler
    IL_00a0:  nop
    IL_00a1:  ret
  } // end of method LLkDebuggingParser::setupDebugging

  .method public hidebysig newslot virtual 
          instance void  wakeUp() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.debug.LLkDebuggingParser V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  stloc.0
    IL_0004:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0009:  nop
    .try
    {
      IL_000a:  nop
      IL_000b:  ldarg.0
      IL_000c:  call       void [mscorlib]System.Threading.Monitor::Pulse(object)
      IL_0011:  nop
      IL_0012:  nop
      IL_0013:  leave.s    IL_001d

    }  // end .try
    finally
    {
      IL_0015:  ldloc.0
      IL_0016:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_001b:  nop
      IL_001c:  endfinally
    }  // end handler
    IL_001d:  nop
    IL_001e:  ret
  } // end of method LLkDebuggingParser::wakeUp

} // end of class antlr.debug.LLkDebuggingParser

.class public auto ansi serializable beforefieldinit antlr.TokenStreamRetryException
       extends antlr.TokenStreamException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.TokenStreamException::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TokenStreamRetryException::.ctor

} // end of class antlr.TokenStreamRetryException

.class public auto ansi serializable beforefieldinit antlr.NoViableAltForCharException
       extends antlr.RecognitionException
{
  .field public char foundChar
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(char c,
                               class antlr.CharScanner scanner) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "NoViableAlt"
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance string antlr.CharScanner::getFilename()
    IL_000c:  ldarg.2
    IL_000d:  callvirt   instance int32 antlr.CharScanner::getLine()
    IL_0012:  ldarg.2
    IL_0013:  callvirt   instance int32 antlr.CharScanner::getColumn()
    IL_0018:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_001d:  nop
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  stfld      char antlr.NoViableAltForCharException::foundChar
    IL_0026:  nop
    IL_0027:  ret
  } // end of method NoViableAltForCharException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(char c,
                               string fileName,
                               int32 line,
                               int32 column) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldstr      "NoViableAlt"
    IL_0006:  ldarg.2
    IL_0007:  ldarg.3
    IL_0008:  ldarg.s    column
    IL_000a:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  stfld      char antlr.NoViableAltForCharException::foundChar
    IL_0018:  nop
    IL_0019:  ret
  } // end of method NoViableAltForCharException::.ctor

  .method public hidebysig specialname virtual 
          instance string  get_Message() cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             string V_1,
             bool V_2,
             int32 V_3)
    IL_0000:  nop
    IL_0001:  ldstr      "unexpected char: "
    IL_0006:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(string)
    IL_000b:  stloc.0
    IL_000c:  ldarg.0
    IL_000d:  ldfld      char antlr.NoViableAltForCharException::foundChar
    IL_0012:  ldc.i4.s   32
    IL_0014:  blt.s      IL_0022

    IL_0016:  ldarg.0
    IL_0017:  ldfld      char antlr.NoViableAltForCharException::foundChar
    IL_001c:  ldc.i4.s   126
    IL_001e:  cgt
    IL_0020:  br.s       IL_0023

    IL_0022:  ldc.i4.1
    IL_0023:  stloc.2
    IL_0024:  ldloc.2
    IL_0025:  brtrue.s   IL_004a

    IL_0027:  nop
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.s   39
    IL_002b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0030:  pop
    IL_0031:  ldloc.0
    IL_0032:  ldarg.0
    IL_0033:  ldfld      char antlr.NoViableAltForCharException::foundChar
    IL_0038:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_003d:  pop
    IL_003e:  ldloc.0
    IL_003f:  ldc.i4.s   39
    IL_0041:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0046:  pop
    IL_0047:  nop
    IL_0048:  br.s       IL_0072

    IL_004a:  nop
    IL_004b:  ldloc.0
    IL_004c:  ldstr      "0x"
    IL_0051:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0056:  pop
    IL_0057:  ldloc.0
    IL_0058:  ldarg.0
    IL_0059:  ldfld      char antlr.NoViableAltForCharException::foundChar
    IL_005e:  stloc.3
    IL_005f:  ldloca.s   V_3
    IL_0061:  ldstr      "X"
    IL_0066:  call       instance string [mscorlib]System.Int32::ToString(string)
    IL_006b:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0070:  pop
    IL_0071:  nop
    IL_0072:  ldloc.0
    IL_0073:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0078:  stloc.1
    IL_0079:  br.s       IL_007b

    IL_007b:  ldloc.1
    IL_007c:  ret
  } // end of method NoViableAltForCharException::get_Message

  .property instance string Message()
  {
    .get instance string antlr.NoViableAltForCharException::get_Message()
  } // end of property NoViableAltForCharException::Message
} // end of class antlr.NoViableAltForCharException

.class public abstract auto ansi beforefieldinit antlr.debug.SyntacticPredicateListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.SyntacticPredicateListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SyntacticPredicateListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SyntacticPredicateListenerBase::refresh

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateFailed(object source,
                                                  class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SyntacticPredicateListenerBase::syntacticPredicateFailed

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateStarted(object source,
                                                   class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SyntacticPredicateListenerBase::syntacticPredicateStarted

  .method public hidebysig newslot virtual 
          instance void  syntacticPredicateSucceeded(object source,
                                                     class antlr.debug.SyntacticPredicateEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method SyntacticPredicateListenerBase::syntacticPredicateSucceeded

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method SyntacticPredicateListenerBase::.ctor

} // end of class antlr.debug.SyntacticPredicateListenerBase

.class public abstract auto ansi beforefieldinit antlr.debug.ParserMatchListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.ParserMatchListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  parserMatch(object source,
                                     class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::parserMatch

  .method public hidebysig newslot virtual 
          instance void  parserMatchNot(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::parserMatchNot

  .method public hidebysig newslot virtual 
          instance void  parserMismatch(object source,
                                        class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::parserMismatch

  .method public hidebysig newslot virtual 
          instance void  parserMismatchNot(object source,
                                           class antlr.debug.MatchEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::parserMismatchNot

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserMatchListenerBase::refresh

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ParserMatchListenerBase::.ctor

} // end of class antlr.debug.ParserMatchListenerBase

.class public auto ansi beforefieldinit antlr.debug.InputBufferReporter
       extends antlr.debug.InputBufferListenerBase
       implements antlr.debug.InputBufferListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  inputBufferChanged(object source,
                                            class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method InputBufferReporter::inputBufferChanged

  .method public hidebysig virtual instance void 
          inputBufferConsume(object source,
                             class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method InputBufferReporter::inputBufferConsume

  .method public hidebysig virtual instance void 
          inputBufferLA(object source,
                        class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method InputBufferReporter::inputBufferLA

  .method public hidebysig virtual instance void 
          inputBufferMark(object source,
                          class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method InputBufferReporter::inputBufferMark

  .method public hidebysig virtual instance void 
          inputBufferRewind(object source,
                            class antlr.debug.InputBufferEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0006:  ldarg.2
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(object)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method InputBufferReporter::inputBufferRewind

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.InputBufferListenerBase::.ctor()
    IL_0006:  ret
  } // end of method InputBufferReporter::.ctor

} // end of class antlr.debug.InputBufferReporter

.class public auto ansi beforefieldinit antlr.ParseTreeRule
       extends antlr.ParseTree
{
  .field public static literal int32 INVALID_ALT = int32(0xFFFFFFFF)
  .field family string ruleName
  .field family int32 altNumber
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string ruleName) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.m1
    IL_0003:  call       instance void antlr.ParseTreeRule::.ctor(string,
                                                                  int32)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method ParseTreeRule::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string ruleName,
                               int32 altNumber) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.ParseTree::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      string antlr.ParseTreeRule::ruleName
    IL_000f:  ldarg.0
    IL_0010:  ldarg.2
    IL_0011:  stfld      int32 antlr.ParseTreeRule::altNumber
    IL_0016:  nop
    IL_0017:  ret
  } // end of method ParseTreeRule::.ctor

  .method public hidebysig instance string 
          getRuleName() cil managed
  {
    // 
    .maxstack  1
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string antlr.ParseTreeRule::ruleName
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method ParseTreeRule::getRuleName

  .method famorassem hidebysig virtual instance int32 
          getLeftmostDerivation(class [mscorlib]System.Text.StringBuilder buf,
                                int32 step) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             class antlr.collections.AST V_1,
             int32 V_2,
             int32 V_3,
             int32 V_4,
             bool V_5)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  ldarg.2
    IL_0004:  ldc.i4.0
    IL_0005:  cgt
    IL_0007:  stloc.s    V_5
    IL_0009:  ldloc.s    V_5
    IL_000b:  brtrue.s   IL_0029

    IL_000d:  nop
    IL_000e:  ldarg.1
    IL_000f:  ldc.i4.s   32
    IL_0011:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0016:  pop
    IL_0017:  ldarg.1
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_001e:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0023:  pop
    IL_0024:  ldloc.0
    IL_0025:  stloc.s    V_4
    IL_0027:  br.s       IL_009a

    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance class antlr.collections.AST antlr.BaseAST::getFirstChild()
    IL_002f:  stloc.1
    IL_0030:  ldc.i4.1
    IL_0031:  stloc.0
    IL_0032:  br.s       IL_0088

    IL_0034:  nop
    IL_0035:  ldloc.0
    IL_0036:  ldarg.2
    IL_0037:  bge.s      IL_0047

    IL_0039:  ldloc.1
    IL_003a:  isinst     antlr.ParseTreeToken
    IL_003f:  ldnull
    IL_0040:  cgt.un
    IL_0042:  ldc.i4.0
    IL_0043:  ceq
    IL_0045:  br.s       IL_0048

    IL_0047:  ldc.i4.0
    IL_0048:  stloc.s    V_5
    IL_004a:  ldloc.s    V_5
    IL_004c:  brtrue.s   IL_0068

    IL_004e:  nop
    IL_004f:  ldarg.1
    IL_0050:  ldc.i4.s   32
    IL_0052:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0057:  pop
    IL_0058:  ldarg.1
    IL_0059:  ldloc.1
    IL_005a:  callvirt   instance string antlr.collections.AST::ToString()
    IL_005f:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0064:  pop
    IL_0065:  nop
    IL_0066:  br.s       IL_0080

    IL_0068:  nop
    IL_0069:  ldarg.2
    IL_006a:  ldloc.0
    IL_006b:  sub
    IL_006c:  stloc.2
    IL_006d:  ldloc.1
    IL_006e:  castclass  antlr.ParseTree
    IL_0073:  ldarg.1
    IL_0074:  ldloc.2
    IL_0075:  callvirt   instance int32 antlr.ParseTree::getLeftmostDerivation(class [mscorlib]System.Text.StringBuilder,
                                                                               int32)
    IL_007a:  stloc.3
    IL_007b:  ldloc.0
    IL_007c:  ldloc.3
    IL_007d:  add
    IL_007e:  stloc.0
    IL_007f:  nop
    IL_0080:  ldloc.1
    IL_0081:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0086:  stloc.1
    IL_0087:  nop
    IL_0088:  ldloc.1
    IL_0089:  ldnull
    IL_008a:  ceq
    IL_008c:  ldc.i4.0
    IL_008d:  ceq
    IL_008f:  stloc.s    V_5
    IL_0091:  ldloc.s    V_5
    IL_0093:  brtrue.s   IL_0034

    IL_0095:  ldloc.0
    IL_0096:  stloc.s    V_4
    IL_0098:  br.s       IL_009a

    IL_009a:  ldloc.s    V_4
    IL_009c:  ret
  } // end of method ParseTreeRule::getLeftmostDerivation

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             bool V_1,
             object[] V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.ParseTreeRule::altNumber
    IL_0007:  ldc.i4.m1
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.1
    IL_000e:  ldloc.1
    IL_000f:  brtrue.s   IL_002e

    IL_0011:  nop
    IL_0012:  ldc.i4.s   60
    IL_0014:  box        [mscorlib]System.Char
    IL_0019:  ldarg.0
    IL_001a:  ldfld      string antlr.ParseTreeRule::ruleName
    IL_001f:  ldc.i4.s   62
    IL_0021:  box        [mscorlib]System.Char
    IL_0026:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_002b:  stloc.0
    IL_002c:  br.s       IL_0070

    IL_002e:  nop
    IL_002f:  ldc.i4.5
    IL_0030:  newarr     [mscorlib]System.Object
    IL_0035:  stloc.2
    IL_0036:  ldloc.2
    IL_0037:  ldc.i4.0
    IL_0038:  ldc.i4.s   60
    IL_003a:  box        [mscorlib]System.Char
    IL_003f:  stelem.ref
    IL_0040:  ldloc.2
    IL_0041:  ldc.i4.1
    IL_0042:  ldarg.0
    IL_0043:  ldfld      string antlr.ParseTreeRule::ruleName
    IL_0048:  stelem.ref
    IL_0049:  ldloc.2
    IL_004a:  ldc.i4.2
    IL_004b:  ldstr      "["
    IL_0050:  stelem.ref
    IL_0051:  ldloc.2
    IL_0052:  ldc.i4.3
    IL_0053:  ldarg.0
    IL_0054:  ldfld      int32 antlr.ParseTreeRule::altNumber
    IL_0059:  box        [mscorlib]System.Int32
    IL_005e:  stelem.ref
    IL_005f:  ldloc.2
    IL_0060:  ldc.i4.4
    IL_0061:  ldstr      "]>"
    IL_0066:  stelem.ref
    IL_0067:  ldloc.2
    IL_0068:  call       string [mscorlib]System.String::Concat(object[])
    IL_006d:  stloc.0
    IL_006e:  br.s       IL_0070

    IL_0070:  ldloc.0
    IL_0071:  ret
  } // end of method ParseTreeRule::ToString

} // end of class antlr.ParseTreeRule

.class public auto ansi beforefieldinit antlr.debug.InputBufferEventArgs
       extends antlr.debug.ANTLREventArgs
{
  .field public static literal int32 CONSUME = int32(0x00000000)
  .field public static literal int32 LA = int32(0x00000001)
  .field public static literal int32 MARK = int32(0x00000002)
  .field public static literal int32 REWIND = int32(0x00000003)
  .field assembly char c_
  .field assembly int32 lookaheadAmount_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method InputBufferEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type',
                               char c,
                               int32 lookaheadAmount) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.ANTLREventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  ldarg.3
    IL_000c:  call       instance void antlr.debug.InputBufferEventArgs::setValues(int32,
                                                                                   char,
                                                                                   int32)
    IL_0011:  nop
    IL_0012:  nop
    IL_0013:  ret
  } // end of method InputBufferEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance char  get_Char() cil managed
  {
    // 
    .maxstack  1
    .locals init (char V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char antlr.debug.InputBufferEventArgs::c_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method InputBufferEventArgs::get_Char

  .method public hidebysig newslot specialname virtual 
          instance void  set_Char(char 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      char antlr.debug.InputBufferEventArgs::c_
    IL_0008:  ret
  } // end of method InputBufferEventArgs::set_Char

  .method public hidebysig newslot specialname virtual 
          instance int32  get_LookaheadAmount() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.InputBufferEventArgs::lookaheadAmount_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method InputBufferEventArgs::get_LookaheadAmount

  .method public hidebysig newslot specialname virtual 
          instance void  set_LookaheadAmount(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.InputBufferEventArgs::lookaheadAmount_
    IL_0008:  ret
  } // end of method InputBufferEventArgs::set_LookaheadAmount

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    char c,
                    int32 la) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance void antlr.debug.ANTLREventArgs::setValues(int32)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.2
    IL_000b:  callvirt   instance void antlr.debug.InputBufferEventArgs::set_Char(char)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.3
    IL_0013:  callvirt   instance void antlr.debug.InputBufferEventArgs::set_LookaheadAmount(int32)
    IL_0018:  nop
    IL_0019:  ret
  } // end of method InputBufferEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.6
    IL_0002:  newarr     [mscorlib]System.Object
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldc.i4.0
    IL_000a:  ldstr      "CharBufferEvent ["
    IL_000f:  stelem.ref
    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance int32 antlr.debug.ANTLREventArgs::get_Type()
    IL_0018:  brfalse.s  IL_0021

    IL_001a:  ldstr      "LA, "
    IL_001f:  br.s       IL_0026

    IL_0021:  ldstr      "CONSUME, "
    IL_0026:  stelem.ref
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.2
    IL_0029:  ldarg.0
    IL_002a:  callvirt   instance char antlr.debug.InputBufferEventArgs::get_Char()
    IL_002f:  box        [mscorlib]System.Char
    IL_0034:  stelem.ref
    IL_0035:  ldloc.1
    IL_0036:  ldc.i4.3
    IL_0037:  ldstr      ","
    IL_003c:  stelem.ref
    IL_003d:  ldloc.1
    IL_003e:  ldc.i4.4
    IL_003f:  ldarg.0
    IL_0040:  callvirt   instance int32 antlr.debug.InputBufferEventArgs::get_LookaheadAmount()
    IL_0045:  box        [mscorlib]System.Int32
    IL_004a:  stelem.ref
    IL_004b:  ldloc.1
    IL_004c:  ldc.i4.5
    IL_004d:  ldstr      "]"
    IL_0052:  stelem.ref
    IL_0053:  ldloc.1
    IL_0054:  call       string [mscorlib]System.String::Concat(object[])
    IL_0059:  stloc.0
    IL_005a:  br.s       IL_005c

    IL_005c:  ldloc.0
    IL_005d:  ret
  } // end of method InputBufferEventArgs::ToString

  .property instance char Char()
  {
    .set instance void antlr.debug.InputBufferEventArgs::set_Char(char)
    .get instance char antlr.debug.InputBufferEventArgs::get_Char()
  } // end of property InputBufferEventArgs::Char
  .property instance int32 LookaheadAmount()
  {
    .set instance void antlr.debug.InputBufferEventArgs::set_LookaheadAmount(int32)
    .get instance int32 antlr.debug.InputBufferEventArgs::get_LookaheadAmount()
  } // end of property InputBufferEventArgs::LookaheadAmount
} // end of class antlr.debug.InputBufferEventArgs

.class public auto ansi beforefieldinit antlr.TreeParserSharedInputState
       extends [mscorlib]System.Object
{
  .field public int32 guessing
  .method public hidebysig newslot virtual 
          instance void  reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.TreeParserSharedInputState::guessing
    IL_0008:  ret
  } // end of method TreeParserSharedInputState::reset

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.TreeParserSharedInputState::guessing
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TreeParserSharedInputState::.ctor

} // end of class antlr.TreeParserSharedInputState

.class public auto ansi beforefieldinit antlr.ParseTreeToken
       extends antlr.ParseTree
{
  .field family class antlr.IToken token
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.IToken token) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.ParseTree::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      class antlr.IToken antlr.ParseTreeToken::token
    IL_000f:  nop
    IL_0010:  ret
  } // end of method ParseTreeToken::.ctor

  .method famorassem hidebysig virtual instance int32 
          getLeftmostDerivation(class [mscorlib]System.Text.StringBuilder buf,
                                int32 step) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.s   32
    IL_0004:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
    IL_0009:  pop
    IL_000a:  ldarg.1
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0011:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0016:  pop
    IL_0017:  ldarg.2
    IL_0018:  stloc.0
    IL_0019:  br.s       IL_001b

    IL_001b:  ldloc.0
    IL_001c:  ret
  } // end of method ParseTreeToken::getLeftmostDerivation

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IToken antlr.ParseTreeToken::token
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  brtrue.s   IL_001d

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      class antlr.IToken antlr.ParseTreeToken::token
    IL_0015:  callvirt   instance string antlr.IToken::getText()
    IL_001a:  stloc.0
    IL_001b:  br.s       IL_0025

    IL_001d:  ldstr      "<missing token>"
    IL_0022:  stloc.0
    IL_0023:  br.s       IL_0025

    IL_0025:  ldloc.0
    IL_0026:  ret
  } // end of method ParseTreeToken::ToString

} // end of class antlr.ParseTreeToken

.class public auto ansi beforefieldinit antlr.CommonASTWithHiddenTokens
       extends antlr.CommonAST
{
  .class auto ansi nested public beforefieldinit CommonASTWithHiddenTokensCreator
         extends antlr.ASTNodeCreator
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void antlr.ASTNodeCreator::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  nop
      IL_0009:  ret
    } // end of method CommonASTWithHiddenTokensCreator::.ctor

    .method public hidebysig specialname virtual 
            instance string  get_ASTNodeTypeName() cil managed
    {
      // 
      .maxstack  1
      .locals init (string V_0)
      IL_0000:  nop
      IL_0001:  ldtoken    antlr.CommonASTWithHiddenTokens
      IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
      IL_000b:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0010:  stloc.0
      IL_0011:  br.s       IL_0013

      IL_0013:  ldloc.0
      IL_0014:  ret
    } // end of method CommonASTWithHiddenTokensCreator::get_ASTNodeTypeName

    .method public hidebysig virtual instance class antlr.collections.AST 
            Create() cil managed
    {
      // 
      .maxstack  1
      .locals init (class antlr.collections.AST V_0)
      IL_0000:  nop
      IL_0001:  newobj     instance void antlr.CommonASTWithHiddenTokens::.ctor()
      IL_0006:  stloc.0
      IL_0007:  br.s       IL_0009

      IL_0009:  ldloc.0
      IL_000a:  ret
    } // end of method CommonASTWithHiddenTokensCreator::Create

    .property instance string ASTNodeTypeName()
    {
      .get instance string antlr.CommonASTWithHiddenTokens/CommonASTWithHiddenTokensCreator::get_ASTNodeTypeName()
    } // end of property CommonASTWithHiddenTokensCreator::ASTNodeTypeName
  } // end of class CommonASTWithHiddenTokensCreator

  .field public static initonly class antlr.CommonASTWithHiddenTokens/CommonASTWithHiddenTokensCreator Creator
  .field famorassem class antlr.IHiddenStreamToken hiddenBefore
  .field famorassem class antlr.IHiddenStreamToken hiddenAfter
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.CommonAST::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method CommonASTWithHiddenTokens::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.CommonAST::.ctor(class antlr.IToken)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method CommonASTWithHiddenTokens::.ctor

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.CommonASTWithHiddenTokens another) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 70 72 65 63 61 74 65 64 20 73 69   // ..=Deprecated si
                                                                              6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E 37 2E   // nce version 2.7.
                                                                              32 2E 20 55 73 65 20 41 53 54 46 61 63 74 6F 72   // 2. Use ASTFactor
                                                                              79 2E 64 75 70 28 29 20 69 6E 73 74 65 61 64 2E   // y.dup() instead.
                                                                              00 00 00 ) 
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.CommonAST::.ctor(class antlr.CommonAST)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  ldfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenBefore
    IL_0010:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenBefore
    IL_0015:  ldarg.0
    IL_0016:  ldarg.1
    IL_0017:  ldfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenAfter
    IL_001c:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenAfter
    IL_0021:  nop
    IL_0022:  ret
  } // end of method CommonASTWithHiddenTokens::.ctor

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenAfter() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenAfter
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonASTWithHiddenTokens::getHiddenAfter

  .method public hidebysig newslot virtual 
          instance class antlr.IHiddenStreamToken 
          getHiddenBefore() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenBefore
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonASTWithHiddenTokens::getHiddenBefore

  .method public hidebysig virtual instance void 
          initialize(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  castclass  antlr.CommonASTWithHiddenTokens
    IL_0008:  callvirt   instance class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::getHiddenBefore()
    IL_000d:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenBefore
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  castclass  antlr.CommonASTWithHiddenTokens
    IL_0019:  callvirt   instance class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::getHiddenAfter()
    IL_001e:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenAfter
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  call       instance void antlr.CommonAST::initialize(class antlr.collections.AST)
    IL_002a:  nop
    IL_002b:  ret
  } // end of method CommonASTWithHiddenTokens::initialize

  .method public hidebysig virtual instance void 
          initialize(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.IHiddenStreamToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  castclass  antlr.IHiddenStreamToken
    IL_0007:  stloc.0
    IL_0008:  ldarg.0
    IL_0009:  ldloc.0
    IL_000a:  call       instance void antlr.CommonAST::initialize(class antlr.IToken)
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  ldloc.0
    IL_0012:  callvirt   instance class antlr.IHiddenStreamToken antlr.IHiddenStreamToken::getHiddenBefore()
    IL_0017:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenBefore
    IL_001c:  ldarg.0
    IL_001d:  ldloc.0
    IL_001e:  callvirt   instance class antlr.IHiddenStreamToken antlr.IHiddenStreamToken::getHiddenAfter()
    IL_0023:  stfld      class antlr.IHiddenStreamToken antlr.CommonASTWithHiddenTokens::hiddenAfter
    IL_0028:  ret
  } // end of method CommonASTWithHiddenTokens::initialize

  .method public hidebysig virtual instance object 
          Clone() cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 3D 44 65 70 72 65 63 61 74 65 64 20 73 69   // ..=Deprecated si
                                                                              6E 63 65 20 76 65 72 73 69 6F 6E 20 32 2E 37 2E   // nce version 2.7.
                                                                              32 2E 20 55 73 65 20 41 53 54 46 61 63 74 6F 72   // 2. Use ASTFactor
                                                                              79 2E 64 75 70 28 29 20 69 6E 73 74 65 61 64 2E   // y.dup() instead.
                                                                              00 00 00 ) 
    // 
    .maxstack  2
    .locals init (object V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  newobj     instance void antlr.CommonASTWithHiddenTokens::.ctor(class antlr.CommonASTWithHiddenTokens)
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method CommonASTWithHiddenTokens::Clone

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  newobj     instance void antlr.CommonASTWithHiddenTokens/CommonASTWithHiddenTokensCreator::.ctor()
    IL_0005:  stsfld     class antlr.CommonASTWithHiddenTokens/CommonASTWithHiddenTokensCreator antlr.CommonASTWithHiddenTokens::Creator
    IL_000a:  ret
  } // end of method CommonASTWithHiddenTokens::.cctor

} // end of class antlr.CommonASTWithHiddenTokens

.class public auto ansi beforefieldinit antlr.CharQueue
       extends [mscorlib]System.Object
{
  .field famorassem char[] buffer
  .field private int32 sizeLessOne
  .field private int32 offset
  .field famorassem int32 nbrEntries
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 minSize) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.1
    IL_0009:  ldc.i4.0
    IL_000a:  clt
    IL_000c:  ldc.i4.0
    IL_000d:  ceq
    IL_000f:  stloc.1
    IL_0010:  ldloc.1
    IL_0011:  brtrue.s   IL_001f

    IL_0013:  nop
    IL_0014:  ldarg.0
    IL_0015:  ldc.i4.s   16
    IL_0017:  callvirt   instance void antlr.CharQueue::'init'(int32)
    IL_001c:  nop
    IL_001d:  br.s       IL_0055

    IL_001f:  ldarg.1
    IL_0020:  ldc.i4     0x3fffffff
    IL_0025:  clt
    IL_0027:  stloc.1
    IL_0028:  ldloc.1
    IL_0029:  brtrue.s   IL_003a

    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  ldc.i4     0x7fffffff
    IL_0032:  callvirt   instance void antlr.CharQueue::'init'(int32)
    IL_0037:  nop
    IL_0038:  br.s       IL_0055

    IL_003a:  ldc.i4.2
    IL_003b:  stloc.0
    IL_003c:  br.s       IL_0044

    IL_003e:  nop
    IL_003f:  nop
    IL_0040:  ldloc.0
    IL_0041:  ldc.i4.2
    IL_0042:  mul
    IL_0043:  stloc.0
    IL_0044:  ldloc.0
    IL_0045:  ldarg.1
    IL_0046:  clt
    IL_0048:  stloc.1
    IL_0049:  ldloc.1
    IL_004a:  brtrue.s   IL_003e

    IL_004c:  ldarg.0
    IL_004d:  ldloc.0
    IL_004e:  callvirt   instance void antlr.CharQueue::'init'(int32)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ret
  } // end of method CharQueue::.ctor

  .method public hidebysig instance void 
          append(char tok) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.CharQueue::nbrEntries
    IL_0007:  ldarg.0
    IL_0008:  ldfld      char[] antlr.CharQueue::buffer
    IL_000d:  ldlen
    IL_000e:  conv.i4
    IL_000f:  ceq
    IL_0011:  ldc.i4.0
    IL_0012:  ceq
    IL_0014:  stloc.0
    IL_0015:  ldloc.0
    IL_0016:  brtrue.s   IL_0021

    IL_0018:  nop
    IL_0019:  ldarg.0
    IL_001a:  call       instance void antlr.CharQueue::expand()
    IL_001f:  nop
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      char[] antlr.CharQueue::buffer
    IL_0027:  ldarg.0
    IL_0028:  ldfld      int32 antlr.CharQueue::offset
    IL_002d:  ldarg.0
    IL_002e:  ldfld      int32 antlr.CharQueue::nbrEntries
    IL_0033:  add
    IL_0034:  ldarg.0
    IL_0035:  ldfld      int32 antlr.CharQueue::sizeLessOne
    IL_003a:  and
    IL_003b:  ldarg.1
    IL_003c:  stelem.i2
    IL_003d:  ldarg.0
    IL_003e:  dup
    IL_003f:  ldfld      int32 antlr.CharQueue::nbrEntries
    IL_0044:  ldc.i4.1
    IL_0045:  add
    IL_0046:  stfld      int32 antlr.CharQueue::nbrEntries
    IL_004b:  ret
  } // end of method CharQueue::append

  .method public hidebysig instance char 
          elementAt(int32 idx) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char[] antlr.CharQueue::buffer
    IL_0007:  ldarg.0
    IL_0008:  ldfld      int32 antlr.CharQueue::offset
    IL_000d:  ldarg.1
    IL_000e:  add
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int32 antlr.CharQueue::sizeLessOne
    IL_0015:  and
    IL_0016:  ldelem.u2
    IL_0017:  stloc.0
    IL_0018:  br.s       IL_001a

    IL_001a:  ldloc.0
    IL_001b:  ret
  } // end of method CharQueue::elementAt

  .method private hidebysig instance void 
          expand() cil managed
  {
    // 
    .maxstack  4
    .locals init (char[] V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      char[] antlr.CharQueue::buffer
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.2
    IL_000a:  mul
    IL_000b:  newarr     [mscorlib]System.Char
    IL_0010:  stloc.0
    IL_0011:  ldc.i4.0
    IL_0012:  stloc.1
    IL_0013:  br.s       IL_0025

    IL_0015:  nop
    IL_0016:  ldloc.0
    IL_0017:  ldloc.1
    IL_0018:  ldarg.0
    IL_0019:  ldloc.1
    IL_001a:  call       instance char antlr.CharQueue::elementAt(int32)
    IL_001f:  stelem.i2
    IL_0020:  nop
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.1
    IL_0023:  add
    IL_0024:  stloc.1
    IL_0025:  ldloc.1
    IL_0026:  ldarg.0
    IL_0027:  ldfld      char[] antlr.CharQueue::buffer
    IL_002c:  ldlen
    IL_002d:  conv.i4
    IL_002e:  clt
    IL_0030:  stloc.2
    IL_0031:  ldloc.2
    IL_0032:  brtrue.s   IL_0015

    IL_0034:  ldarg.0
    IL_0035:  ldloc.0
    IL_0036:  stfld      char[] antlr.CharQueue::buffer
    IL_003b:  ldarg.0
    IL_003c:  ldarg.0
    IL_003d:  ldfld      char[] antlr.CharQueue::buffer
    IL_0042:  ldlen
    IL_0043:  conv.i4
    IL_0044:  ldc.i4.1
    IL_0045:  sub
    IL_0046:  stfld      int32 antlr.CharQueue::sizeLessOne
    IL_004b:  ldarg.0
    IL_004c:  ldc.i4.0
    IL_004d:  stfld      int32 antlr.CharQueue::offset
    IL_0052:  ret
  } // end of method CharQueue::expand

  .method public hidebysig newslot virtual 
          instance void  'init'(int32 size) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  newarr     [mscorlib]System.Char
    IL_0008:  stfld      char[] antlr.CharQueue::buffer
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  ldc.i4.1
    IL_0010:  sub
    IL_0011:  stfld      int32 antlr.CharQueue::sizeLessOne
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.0
    IL_0018:  stfld      int32 antlr.CharQueue::offset
    IL_001d:  ldarg.0
    IL_001e:  ldc.i4.0
    IL_001f:  stfld      int32 antlr.CharQueue::nbrEntries
    IL_0024:  ret
  } // end of method CharQueue::'init'

  .method public hidebysig instance void 
          reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.CharQueue::offset
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.0
    IL_000a:  stfld      int32 antlr.CharQueue::nbrEntries
    IL_000f:  ret
  } // end of method CharQueue::reset

  .method public hidebysig instance void 
          removeFirst() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      int32 antlr.CharQueue::offset
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  ldarg.0
    IL_000b:  ldfld      int32 antlr.CharQueue::sizeLessOne
    IL_0010:  and
    IL_0011:  stfld      int32 antlr.CharQueue::offset
    IL_0016:  ldarg.0
    IL_0017:  dup
    IL_0018:  ldfld      int32 antlr.CharQueue::nbrEntries
    IL_001d:  ldc.i4.1
    IL_001e:  sub
    IL_001f:  stfld      int32 antlr.CharQueue::nbrEntries
    IL_0024:  ret
  } // end of method CharQueue::removeFirst

} // end of class antlr.CharQueue

.class public sequential ansi sealed beforefieldinit antlr.ASTPair
       extends [mscorlib]System.ValueType
{
  .field public class antlr.collections.AST root
  .field public class antlr.collections.AST child
  .method public hidebysig instance void 
          advanceChildToEnd() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_003a

    IL_000e:  nop
    IL_000f:  br.s       IL_0024

    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldarg.0
    IL_0014:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0019:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_001e:  stfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0023:  nop
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_002a:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_002f:  ldnull
    IL_0030:  ceq
    IL_0032:  ldc.i4.0
    IL_0033:  ceq
    IL_0035:  stloc.0
    IL_0036:  ldloc.0
    IL_0037:  brtrue.s   IL_0011

    IL_0039:  nop
    IL_003a:  ret
  } // end of method ASTPair::advanceChildToEnd

  .method public hidebysig instance valuetype antlr.ASTPair 
          copy() cil managed
  {
    // 
    .maxstack  2
    .locals init (valuetype antlr.ASTPair V_0,
             valuetype antlr.ASTPair V_1)
    IL_0000:  nop
    IL_0001:  ldloca.s   V_0
    IL_0003:  initobj    antlr.ASTPair
    IL_0009:  ldloca.s   V_0
    IL_000b:  ldarg.0
    IL_000c:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0011:  stfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0016:  ldloca.s   V_0
    IL_0018:  ldarg.0
    IL_0019:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_001e:  stfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0023:  ldloc.0
    IL_0024:  stloc.1
    IL_0025:  br.s       IL_0027

    IL_0027:  ldloc.1
    IL_0028:  ret
  } // end of method ASTPair::copy

  .method private hidebysig instance void 
          reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldnull
    IL_0003:  stfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0008:  ldarg.0
    IL_0009:  ldnull
    IL_000a:  stfld      class antlr.collections.AST antlr.ASTPair::child
    IL_000f:  ret
  } // end of method ASTPair::reset

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             string V_1,
             string V_2,
             string[] V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0007:  brfalse.s  IL_0016

    IL_0009:  ldarg.0
    IL_000a:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_000f:  callvirt   instance string antlr.collections.AST::getText()
    IL_0014:  br.s       IL_001b

    IL_0016:  ldstr      "null"
    IL_001b:  stloc.0
    IL_001c:  ldarg.0
    IL_001d:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0022:  brfalse.s  IL_0031

    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_002a:  callvirt   instance string antlr.collections.AST::getText()
    IL_002f:  br.s       IL_0036

    IL_0031:  ldstr      "null"
    IL_0036:  stloc.1
    IL_0037:  ldc.i4.5
    IL_0038:  newarr     [mscorlib]System.String
    IL_003d:  stloc.3
    IL_003e:  ldloc.3
    IL_003f:  ldc.i4.0
    IL_0040:  ldstr      "["
    IL_0045:  stelem.ref
    IL_0046:  ldloc.3
    IL_0047:  ldc.i4.1
    IL_0048:  ldloc.0
    IL_0049:  stelem.ref
    IL_004a:  ldloc.3
    IL_004b:  ldc.i4.2
    IL_004c:  ldstr      ","
    IL_0051:  stelem.ref
    IL_0052:  ldloc.3
    IL_0053:  ldc.i4.3
    IL_0054:  ldloc.1
    IL_0055:  stelem.ref
    IL_0056:  ldloc.3
    IL_0057:  ldc.i4.4
    IL_0058:  ldstr      "]"
    IL_005d:  stelem.ref
    IL_005e:  ldloc.3
    IL_005f:  call       string [mscorlib]System.String::Concat(string[])
    IL_0064:  stloc.2
    IL_0065:  br.s       IL_0067

    IL_0067:  ldloc.2
    IL_0068:  ret
  } // end of method ASTPair::ToString

} // end of class antlr.ASTPair

.class public auto ansi sealed antlr.debug.MessageEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method MessageEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.MessageEventArgs e) runtime managed
  {
  } // end of method MessageEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.MessageEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method MessageEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method MessageEventHandler::EndInvoke

} // end of class antlr.debug.MessageEventHandler

.class public auto ansi sealed antlr.debug.NewLineEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method NewLineEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.NewLineEventArgs e) runtime managed
  {
  } // end of method NewLineEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.NewLineEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method NewLineEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method NewLineEventHandler::EndInvoke

} // end of class antlr.debug.NewLineEventHandler

.class public auto ansi sealed antlr.debug.MatchEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method MatchEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.MatchEventArgs e) runtime managed
  {
  } // end of method MatchEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.MatchEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method MatchEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method MatchEventHandler::EndInvoke

} // end of class antlr.debug.MatchEventHandler

.class public auto ansi sealed antlr.debug.TokenEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method TokenEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.TokenEventArgs e) runtime managed
  {
  } // end of method TokenEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.TokenEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method TokenEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method TokenEventHandler::EndInvoke

} // end of class antlr.debug.TokenEventHandler

.class public auto ansi sealed antlr.debug.SemanticPredicateEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method SemanticPredicateEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.SemanticPredicateEventArgs e) runtime managed
  {
  } // end of method SemanticPredicateEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.SemanticPredicateEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method SemanticPredicateEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method SemanticPredicateEventHandler::EndInvoke

} // end of class antlr.debug.SemanticPredicateEventHandler

.class public auto ansi sealed antlr.debug.SyntacticPredicateEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method SyntacticPredicateEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.SyntacticPredicateEventArgs e) runtime managed
  {
  } // end of method SyntacticPredicateEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.SyntacticPredicateEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method SyntacticPredicateEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method SyntacticPredicateEventHandler::EndInvoke

} // end of class antlr.debug.SyntacticPredicateEventHandler

.class public auto ansi sealed antlr.debug.TraceEventHandler
       extends [mscorlib]System.MulticastDelegate
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object 'object',
                               native int 'method') runtime managed
  {
  } // end of method TraceEventHandler::.ctor

  .method public hidebysig newslot virtual 
          instance void  Invoke(object sender,
                                class antlr.debug.TraceEventArgs e) runtime managed
  {
  } // end of method TraceEventHandler::Invoke

  .method public hidebysig newslot virtual 
          instance class [mscorlib]System.IAsyncResult 
          BeginInvoke(object sender,
                      class antlr.debug.TraceEventArgs e,
                      class [mscorlib]System.AsyncCallback callback,
                      object 'object') runtime managed
  {
  } // end of method TraceEventHandler::BeginInvoke

  .method public hidebysig newslot virtual 
          instance void  EndInvoke(class [mscorlib]System.IAsyncResult result) runtime managed
  {
  } // end of method TraceEventHandler::EndInvoke

} // end of class antlr.debug.TraceEventHandler

.class public auto ansi beforefieldinit antlr.debug.ParserEventSupport
       extends [mscorlib]System.Object
{
  .field private object source
  .field private class [mscorlib]System.Collections.Hashtable listeners
  .field private class antlr.debug.MatchEventArgs matchEvent
  .field private class antlr.debug.MessageEventArgs messageEvent
  .field private class antlr.debug.TokenEventArgs tokenEvent
  .field private class antlr.debug.SemanticPredicateEventArgs semPredEvent
  .field private class antlr.debug.SyntacticPredicateEventArgs synPredEvent
  .field private class antlr.debug.TraceEventArgs traceEvent
  .field private class antlr.debug.NewLineEventArgs newLineEvent
  .field private class antlr.debug.ParserController controller
  .field private int32 ruleDepth
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object source) cil managed
  {
    // 
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  newobj     instance void antlr.debug.MatchEventArgs::.ctor()
    IL_0015:  stfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_001a:  ldarg.0
    IL_001b:  newobj     instance void antlr.debug.MessageEventArgs::.ctor()
    IL_0020:  stfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0025:  ldarg.0
    IL_0026:  newobj     instance void antlr.debug.TokenEventArgs::.ctor()
    IL_002b:  stfld      class antlr.debug.TokenEventArgs antlr.debug.ParserEventSupport::tokenEvent
    IL_0030:  ldarg.0
    IL_0031:  newobj     instance void antlr.debug.TraceEventArgs::.ctor()
    IL_0036:  stfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_003b:  ldarg.0
    IL_003c:  newobj     instance void antlr.debug.SemanticPredicateEventArgs::.ctor()
    IL_0041:  stfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ParserEventSupport::semPredEvent
    IL_0046:  ldarg.0
    IL_0047:  newobj     instance void antlr.debug.SyntacticPredicateEventArgs::.ctor()
    IL_004c:  stfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0051:  ldarg.0
    IL_0052:  newobj     instance void antlr.debug.NewLineEventArgs::.ctor()
    IL_0057:  stfld      class antlr.debug.NewLineEventArgs antlr.debug.ParserEventSupport::newLineEvent
    IL_005c:  ldarg.0
    IL_005d:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor()
    IL_0062:  stfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ParserEventSupport::listeners
    IL_0067:  ldarg.0
    IL_0068:  ldarg.1
    IL_0069:  stfld      object antlr.debug.ParserEventSupport::source
    IL_006e:  nop
    IL_006f:  ret
  } // end of method ParserEventSupport::.ctor

  .method public hidebysig newslot virtual 
          instance void  checkController() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ParserController antlr.debug.ParserEventSupport::controller
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_001a

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ParserController antlr.debug.ParserEventSupport::controller
    IL_0014:  callvirt   instance void antlr.debug.ParserController::checkBreak()
    IL_0019:  nop
    IL_001a:  ret
  } // end of method ParserEventSupport::checkController

  .method public hidebysig newslot virtual 
          instance void  addDoneListener(class antlr.debug.Listener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.Listener::doneParsing(object,
                                                                         class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_Done(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ParserEventSupport::listeners
    IL_0025:  ldarg.1
    IL_0026:  ldarg.1
    IL_0027:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_002c:  nop
    IL_002d:  ret
  } // end of method ParserEventSupport::addDoneListener

  .method public hidebysig newslot virtual 
          instance void  addMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.MessageListener::reportError(object,
                                                                                class antlr.debug.MessageEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_ErrorReported(class antlr.debug.MessageEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.MessageListener::reportWarning(object,
                                                                                  class antlr.debug.MessageEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0037:  callvirt   instance void antlr.Parser::add_WarningReported(class antlr.debug.MessageEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::addMessageListener

  .method public hidebysig newslot virtual 
          instance void  addParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  isinst     antlr.debug.ParserController
    IL_0007:  ldnull
    IL_0008:  cgt.un
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_002c

    IL_0011:  nop
    IL_0012:  ldarg.1
    IL_0013:  castclass  antlr.debug.ParserController
    IL_0018:  ldarg.0
    IL_0019:  callvirt   instance void antlr.debug.ParserController::set_ParserEventSupport(class antlr.debug.ParserEventSupport)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  castclass  antlr.debug.ParserController
    IL_0026:  stfld      class antlr.debug.ParserController antlr.debug.ParserEventSupport::controller
    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  ldarg.1
    IL_002e:  callvirt   instance void antlr.debug.ParserEventSupport::addParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_0033:  nop
    IL_0034:  ldarg.0
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance void antlr.debug.ParserEventSupport::addParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_003b:  nop
    IL_003c:  ldarg.0
    IL_003d:  ldarg.1
    IL_003e:  callvirt   instance void antlr.debug.ParserEventSupport::addMessageListener(class antlr.debug.MessageListener)
    IL_0043:  nop
    IL_0044:  ldarg.0
    IL_0045:  ldarg.1
    IL_0046:  callvirt   instance void antlr.debug.ParserEventSupport::addTraceListener(class antlr.debug.TraceListener)
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  ldarg.1
    IL_004e:  callvirt   instance void antlr.debug.ParserEventSupport::addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_0053:  nop
    IL_0054:  ldarg.0
    IL_0055:  ldarg.1
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::addParserListener

  .method public hidebysig newslot virtual 
          instance void  addParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatch(object,
                                                                                    class antlr.debug.MatchEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_MatchedToken(class antlr.debug.MatchEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatchNot(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::add_MatchedNotToken(class antlr.debug.MatchEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  castclass  antlr.Parser
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatch(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0050:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0055:  callvirt   instance void antlr.Parser::add_MisMatchedToken(class antlr.debug.MatchEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0061:  castclass  antlr.Parser
    IL_0066:  ldarg.1
    IL_0067:  dup
    IL_0068:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatchNot(object,
                                                                                          class antlr.debug.MatchEventArgs)
    IL_006e:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0073:  callvirt   instance void antlr.Parser::add_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
    IL_0078:  nop
    IL_0079:  ldarg.0
    IL_007a:  ldarg.1
    IL_007b:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0080:  nop
    IL_0081:  ret
  } // end of method ParserEventSupport::addParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  addParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserConsume(object,
                                                                                      class antlr.debug.TokenEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_ConsumedToken(class antlr.debug.TokenEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserLA(object,
                                                                                 class antlr.debug.TokenEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::add_TokenLA(class antlr.debug.TokenEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::addParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SemanticPredicateListener::semanticPredicateEvaluated(object,
                                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SemanticPredicateEventHandler::.ctor(object,
                                                                                        native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ParserEventSupport::addSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateStarted(object,
                                                                                                         class antlr.debug.SyntacticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateFailed(object,
                                                                                                        class antlr.debug.SyntacticPredicateEventArgs)
    IL_0032:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0037:  callvirt   instance void antlr.Parser::add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  castclass  antlr.Parser
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateSucceeded(object,
                                                                                                           class antlr.debug.SyntacticPredicateEventArgs)
    IL_0050:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0055:  callvirt   instance void antlr.Parser::add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldarg.1
    IL_005d:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0062:  nop
    IL_0063:  ret
  } // end of method ParserEventSupport::addSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.TraceListener::enterRule(object,
                                                                            class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::add_EnterRule(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.TraceListener::exitRule(object,
                                                                           class antlr.debug.TraceEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::add_ExitRule(class antlr.debug.TraceEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::addTraceListener

  .method public hidebysig newslot virtual 
          instance void  fireConsume(int32 c) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.debug.TokenEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::LAEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TokenEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0051

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ParserEventSupport::tokenEvent
    IL_0030:  ldsfld     int32 antlr.debug.TokenEventArgs::CONSUME
    IL_0035:  ldc.i4.1
    IL_0036:  ldarg.1
    IL_0037:  callvirt   instance void antlr.debug.TokenEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32)
    IL_003c:  nop
    IL_003d:  ldloc.0
    IL_003e:  ldarg.0
    IL_003f:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0044:  ldarg.0
    IL_0045:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ParserEventSupport::tokenEvent
    IL_004a:  callvirt   instance void antlr.debug.TokenEventHandler::Invoke(object,
                                                                             class antlr.debug.TokenEventArgs)
    IL_004f:  nop
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0057:  nop
    IL_0058:  ret
  } // end of method ParserEventSupport::fireConsume

  .method public hidebysig newslot virtual 
          instance void  fireDoneParsing() cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::DoneEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TraceEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0052

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_0030:  ldsfld     int32 antlr.debug.TraceEventArgs::DONE_PARSING
    IL_0035:  ldc.i4.0
    IL_0036:  ldc.i4.0
    IL_0037:  ldc.i4.0
    IL_0038:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_003d:  nop
    IL_003e:  ldloc.0
    IL_003f:  ldarg.0
    IL_0040:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0045:  ldarg.0
    IL_0046:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_004b:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_0050:  nop
    IL_0051:  nop
    IL_0052:  ldarg.0
    IL_0053:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0058:  nop
    IL_0059:  ret
  } // end of method ParserEventSupport::fireDoneParsing

  .method public hidebysig newslot virtual 
          instance void  fireEnterRule(int32 ruleNum,
                                       int32 guessing,
                                       int32 data) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_000f:  ldarg.0
    IL_0010:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0015:  castclass  antlr.Parser
    IL_001a:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_001f:  ldsfld     object antlr.Parser::EnterRuleEventKey
    IL_0024:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_0029:  castclass  antlr.debug.TraceEventHandler
    IL_002e:  stloc.0
    IL_002f:  ldloc.0
    IL_0030:  ldnull
    IL_0031:  ceq
    IL_0033:  stloc.1
    IL_0034:  ldloc.1
    IL_0035:  brtrue.s   IL_0060

    IL_0037:  nop
    IL_0038:  ldarg.0
    IL_0039:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_003e:  ldsfld     int32 antlr.debug.TraceEventArgs::ENTER
    IL_0043:  ldarg.1
    IL_0044:  ldarg.2
    IL_0045:  ldarg.3
    IL_0046:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_004b:  nop
    IL_004c:  ldloc.0
    IL_004d:  ldarg.0
    IL_004e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0053:  ldarg.0
    IL_0054:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_0059:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_005e:  nop
    IL_005f:  nop
    IL_0060:  ldarg.0
    IL_0061:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0066:  nop
    IL_0067:  ret
  } // end of method ParserEventSupport::fireEnterRule

  .method public hidebysig newslot virtual 
          instance void  fireExitRule(int32 ruleNum,
                                      int32 guessing,
                                      int32 data) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ExitRuleEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TraceEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0052

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_0030:  ldsfld     int32 antlr.debug.TraceEventArgs::EXIT
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_003d:  nop
    IL_003e:  ldloc.0
    IL_003f:  ldarg.0
    IL_0040:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0045:  ldarg.0
    IL_0046:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ParserEventSupport::traceEvent
    IL_004b:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_0050:  nop
    IL_0051:  nop
    IL_0052:  ldarg.0
    IL_0053:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0058:  nop
    IL_0059:  ldarg.0
    IL_005a:  dup
    IL_005b:  ldfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_0060:  ldc.i4.1
    IL_0061:  sub
    IL_0062:  stfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_0067:  ldarg.0
    IL_0068:  ldfld      int32 antlr.debug.ParserEventSupport::ruleDepth
    IL_006d:  ldc.i4.0
    IL_006e:  ceq
    IL_0070:  ldc.i4.0
    IL_0071:  ceq
    IL_0073:  stloc.1
    IL_0074:  ldloc.1
    IL_0075:  brtrue.s   IL_007e

    IL_0077:  ldarg.0
    IL_0078:  callvirt   instance void antlr.debug.ParserEventSupport::fireDoneParsing()
    IL_007d:  nop
    IL_007e:  ret
  } // end of method ParserEventSupport::fireExitRule

  .method public hidebysig newslot virtual 
          instance void  fireLA(int32 k,
                                int32 la) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.debug.TokenEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::LAEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TokenEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0051

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ParserEventSupport::tokenEvent
    IL_0030:  ldsfld     int32 antlr.debug.TokenEventArgs::LA
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  callvirt   instance void antlr.debug.TokenEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32)
    IL_003c:  nop
    IL_003d:  ldloc.0
    IL_003e:  ldarg.0
    IL_003f:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0044:  ldarg.0
    IL_0045:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ParserEventSupport::tokenEvent
    IL_004a:  callvirt   instance void antlr.debug.TokenEventHandler::Invoke(object,
                                                                             class antlr.debug.TokenEventArgs)
    IL_004f:  nop
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0057:  nop
    IL_0058:  ret
  } // end of method ParserEventSupport::fireLA

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.1
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.2
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   class antlr.collections.impl.BitSet b,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   string target,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_RANGE
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(int32 c,
                                   class antlr.collections.impl.BitSet b,
                                   string text,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0056

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  ldarg.s    guessing
    IL_003a:  ldc.i4.0
    IL_003b:  ldc.i4.1
    IL_003c:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0041:  nop
    IL_0042:  ldloc.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0049:  ldarg.0
    IL_004a:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004f:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldarg.0
    IL_0057:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005c:  nop
    IL_005d:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(int32 n,
                                   string text,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.1
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.2
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(string s,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::STRING
    IL_0035:  ldc.i4.0
    IL_0036:  ldarg.1
    IL_0037:  ldnull
    IL_0038:  ldarg.2
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatchNot(char c,
                                      char n,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.1
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ParserEventSupport::fireMatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMatchNot(int32 c,
                                      int32 n,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.1
    IL_0040:  ldc.i4.1
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ParserEventSupport::fireMatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      char n,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.0
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      class antlr.collections.impl.BitSet b,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      string target,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_RANGE
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(int32 i,
                                      int32 n,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.0
    IL_0040:  ldc.i4.0
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(int32 i,
                                      class antlr.collections.impl.BitSet b,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0056

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  ldarg.s    guessing
    IL_003a:  ldc.i4.0
    IL_003b:  ldc.i4.1
    IL_003c:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0041:  nop
    IL_0042:  ldloc.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0049:  ldarg.0
    IL_004a:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004f:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldarg.0
    IL_0057:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005c:  nop
    IL_005d:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(string s,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::STRING
    IL_0035:  ldc.i4.0
    IL_0036:  ldarg.2
    IL_0037:  ldarg.1
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatchNot(char v,
                                         char c,
                                         int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.1
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ParserEventSupport::fireMismatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMismatchNot(int32 i,
                                         int32 n,
                                         string text,
                                         int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.1
    IL_0040:  ldc.i4.1
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ParserEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ParserEventSupport::fireMismatchNot

  .method public hidebysig newslot virtual 
          instance void  fireReportError(class [mscorlib]System.Exception e) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::ERROR
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_003b:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_004e:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ParserEventSupport::fireReportError

  .method public hidebysig newslot virtual 
          instance void  fireReportError(string s) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0050

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::ERROR
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_003b:  nop
    IL_003c:  ldloc.0
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0049:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_004e:  nop
    IL_004f:  nop
    IL_0050:  ldarg.0
    IL_0051:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0056:  nop
    IL_0057:  ret
  } // end of method ParserEventSupport::fireReportError

  .method public hidebysig newslot virtual 
          instance void  fireReportWarning(string s) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportWarningEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0050

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::WARNING
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_003b:  nop
    IL_003c:  ldloc.0
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ParserEventSupport::messageEvent
    IL_0049:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_004e:  nop
    IL_004f:  nop
    IL_0050:  ldarg.0
    IL_0051:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0056:  nop
    IL_0057:  ret
  } // end of method ParserEventSupport::fireReportWarning

  .method public hidebysig newslot virtual 
          instance bool  fireSemanticPredicateEvaluated(int32 'type',
                                                        int32 condition,
                                                        bool result,
                                                        int32 guessing) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.SemanticPredicateEventHandler V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SemPredEvaluatedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SemanticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.2
    IL_0026:  ldloc.2
    IL_0027:  brtrue.s   IL_004f

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ParserEventSupport::semPredEvent
    IL_0030:  ldarg.1
    IL_0031:  ldarg.2
    IL_0032:  ldarg.3
    IL_0033:  ldarg.s    guessing
    IL_0035:  callvirt   instance void antlr.debug.SemanticPredicateEventArgs::setValues(int32,
                                                                                         int32,
                                                                                         bool,
                                                                                         int32)
    IL_003a:  nop
    IL_003b:  ldloc.0
    IL_003c:  ldarg.0
    IL_003d:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0042:  ldarg.0
    IL_0043:  ldfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ParserEventSupport::semPredEvent
    IL_0048:  callvirt   instance void antlr.debug.SemanticPredicateEventHandler::Invoke(object,
                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_004d:  nop
    IL_004e:  nop
    IL_004f:  ldarg.0
    IL_0050:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0055:  nop
    IL_0056:  ldarg.3
    IL_0057:  stloc.1
    IL_0058:  br.s       IL_005a

    IL_005a:  ldloc.1
    IL_005b:  ret
  } // end of method ParserEventSupport::fireSemanticPredicateEvaluated

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateFailed(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredFailedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ParserEventSupport::fireSyntacticPredicateFailed

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateStarted(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredStartedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ParserEventSupport::fireSyntacticPredicateStarted

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateSucceeded(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.Parser::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredSucceededEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ParserEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ParserEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ParserEventSupport::fireSyntacticPredicateSucceeded

  .method public hidebysig newslot virtual 
          instance void  refreshListeners() cil managed
  {
    // 
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.Hashtable V_0,
             valuetype [mscorlib]System.Collections.DictionaryEntry V_1,
             object V_2,
             class [mscorlib]System.Collections.IDictionaryEnumerator V_3,
             bool V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ParserEventSupport::listeners
    IL_0007:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_SyncRoot()
    IL_000c:  dup
    IL_000d:  stloc.2
    IL_000e:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0013:  nop
    .try
    {
      IL_0014:  nop
      IL_0015:  ldarg.0
      IL_0016:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ParserEventSupport::listeners
      IL_001b:  callvirt   instance object [mscorlib]System.Collections.Hashtable::Clone()
      IL_0020:  castclass  [mscorlib]System.Collections.Hashtable
      IL_0025:  stloc.0
      IL_0026:  nop
      IL_0027:  leave.s    IL_0031

    }  // end .try
    finally
    {
      IL_0029:  ldloc.2
      IL_002a:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_002f:  nop
      IL_0030:  endfinally
    }  // end handler
    IL_0031:  nop
    IL_0032:  nop
    IL_0033:  ldloc.0
    IL_0034:  callvirt   instance class [mscorlib]System.Collections.IDictionaryEnumerator [mscorlib]System.Collections.Hashtable::GetEnumerator()
    IL_0039:  stloc.3
    .try
    {
      IL_003a:  br.s       IL_006e

      IL_003c:  ldloc.3
      IL_003d:  callvirt   instance object [mscorlib]System.Collections.IEnumerator::get_Current()
      IL_0042:  unbox.any  [mscorlib]System.Collections.DictionaryEntry
      IL_0047:  stloc.1
      IL_0048:  nop
      IL_0049:  ldloca.s   V_1
      IL_004b:  call       instance object [mscorlib]System.Collections.DictionaryEntry::get_Value()
      IL_0050:  ldnull
      IL_0051:  ceq
      IL_0053:  stloc.s    V_4
      IL_0055:  ldloc.s    V_4
      IL_0057:  brtrue.s   IL_006d

      IL_0059:  nop
      IL_005a:  ldloca.s   V_1
      IL_005c:  call       instance object [mscorlib]System.Collections.DictionaryEntry::get_Value()
      IL_0061:  castclass  antlr.debug.Listener
      IL_0066:  callvirt   instance void antlr.debug.Listener::refresh()
      IL_006b:  nop
      IL_006c:  nop
      IL_006d:  nop
      IL_006e:  ldloc.3
      IL_006f:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0074:  stloc.s    V_4
      IL_0076:  ldloc.s    V_4
      IL_0078:  brtrue.s   IL_003c

      IL_007a:  leave.s    IL_0098

    }  // end .try
    finally
    {
      IL_007c:  ldloc.3
      IL_007d:  isinst     [mscorlib]System.IDisposable
      IL_0082:  stloc.s    V_5
      IL_0084:  ldloc.s    V_5
      IL_0086:  ldnull
      IL_0087:  ceq
      IL_0089:  stloc.s    V_4
      IL_008b:  ldloc.s    V_4
      IL_008d:  brtrue.s   IL_0097

      IL_008f:  ldloc.s    V_5
      IL_0091:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0096:  nop
      IL_0097:  endfinally
    }  // end handler
    IL_0098:  nop
    IL_0099:  ret
  } // end of method ParserEventSupport::refreshListeners

  .method public hidebysig newslot virtual 
          instance void  removeDoneListener(class antlr.debug.Listener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.Listener::doneParsing(object,
                                                                         class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_Done(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ParserEventSupport::listeners
    IL_0025:  ldarg.1
    IL_0026:  callvirt   instance void [mscorlib]System.Collections.Hashtable::Remove(object)
    IL_002b:  nop
    IL_002c:  ret
  } // end of method ParserEventSupport::removeDoneListener

  .method public hidebysig newslot virtual 
          instance void  removeMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.MessageListener::reportError(object,
                                                                                class antlr.debug.MessageEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_ErrorReported(class antlr.debug.MessageEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.MessageListener::reportWarning(object,
                                                                                  class antlr.debug.MessageEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0037:  callvirt   instance void antlr.Parser::remove_WarningReported(class antlr.debug.MessageEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::removeMessageListener

  .method public hidebysig newslot virtual 
          instance void  removeParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.debug.ParserEventSupport::removeParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance void antlr.debug.ParserEventSupport::removeMessageListener(class antlr.debug.MessageListener)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  callvirt   instance void antlr.debug.ParserEventSupport::removeParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_0018:  nop
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  callvirt   instance void antlr.debug.ParserEventSupport::removeTraceListener(class antlr.debug.TraceListener)
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldarg.1
    IL_0023:  callvirt   instance void antlr.debug.ParserEventSupport::removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_0028:  nop
    IL_0029:  ldarg.0
    IL_002a:  ldarg.1
    IL_002b:  callvirt   instance void antlr.debug.ParserEventSupport::removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_0030:  nop
    IL_0031:  ret
  } // end of method ParserEventSupport::removeParserListener

  .method public hidebysig newslot virtual 
          instance void  removeParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatch(object,
                                                                                    class antlr.debug.MatchEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_MatchedToken(class antlr.debug.MatchEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatchNot(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::remove_MatchedNotToken(class antlr.debug.MatchEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  castclass  antlr.Parser
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatch(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0050:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0055:  callvirt   instance void antlr.Parser::remove_MisMatchedToken(class antlr.debug.MatchEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0061:  castclass  antlr.Parser
    IL_0066:  ldarg.1
    IL_0067:  dup
    IL_0068:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatchNot(object,
                                                                                          class antlr.debug.MatchEventArgs)
    IL_006e:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0073:  callvirt   instance void antlr.Parser::remove_MisMatchedNotToken(class antlr.debug.MatchEventHandler)
    IL_0078:  nop
    IL_0079:  ldarg.0
    IL_007a:  ldarg.1
    IL_007b:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0080:  nop
    IL_0081:  ret
  } // end of method ParserEventSupport::removeParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  removeParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserConsume(object,
                                                                                      class antlr.debug.TokenEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_ConsumedToken(class antlr.debug.TokenEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserLA(object,
                                                                                 class antlr.debug.TokenEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::remove_TokenLA(class antlr.debug.TokenEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::removeParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SemanticPredicateListener::semanticPredicateEvaluated(object,
                                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SemanticPredicateEventHandler::.ctor(object,
                                                                                        native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ParserEventSupport::removeSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateStarted(object,
                                                                                                         class antlr.debug.SyntacticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateFailed(object,
                                                                                                        class antlr.debug.SyntacticPredicateEventArgs)
    IL_0032:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0037:  callvirt   instance void antlr.Parser::remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0043:  castclass  antlr.Parser
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateSucceeded(object,
                                                                                                           class antlr.debug.SyntacticPredicateEventArgs)
    IL_0050:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0055:  callvirt   instance void antlr.Parser::remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldarg.1
    IL_005d:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0062:  nop
    IL_0063:  ret
  } // end of method ParserEventSupport::removeSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0007:  castclass  antlr.Parser
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.TraceListener::enterRule(object,
                                                                            class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.Parser::remove_EnterRule(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ParserEventSupport::source
    IL_0025:  castclass  antlr.Parser
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.TraceListener::exitRule(object,
                                                                           class antlr.debug.TraceEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.Parser::remove_ExitRule(class antlr.debug.TraceEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ParserEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ParserEventSupport::removeTraceListener

} // end of class antlr.debug.ParserEventSupport

.class public auto ansi beforefieldinit antlr.ASTFactory
       extends [mscorlib]System.Object
{
  .class auto ansi nested family beforefieldinit FactoryEntry
         extends [mscorlib]System.Object
  {
    .field public class [mscorlib]System.Type NodeTypeObject
    .field public class antlr.ASTNodeCreator Creator
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class [mscorlib]System.Type typeObj,
                                 class antlr.ASTNodeCreator creator) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  stfld      class [mscorlib]System.Type antlr.ASTFactory/FactoryEntry::NodeTypeObject
      IL_000f:  ldarg.0
      IL_0010:  ldarg.2
      IL_0011:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory/FactoryEntry::Creator
      IL_0016:  nop
      IL_0017:  ret
    } // end of method FactoryEntry::.ctor

    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class [mscorlib]System.Type typeObj) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  stfld      class [mscorlib]System.Type antlr.ASTFactory/FactoryEntry::NodeTypeObject
      IL_000f:  nop
      IL_0010:  ret
    } // end of method FactoryEntry::.ctor

    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(class antlr.ASTNodeCreator creator) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory/FactoryEntry::Creator
      IL_000f:  nop
      IL_0010:  ret
    } // end of method FactoryEntry::.ctor

  } // end of class FactoryEntry

  .field family class [mscorlib]System.Type defaultASTNodeTypeObject_
  .field family class antlr.ASTNodeCreator defaultCreator_
  .field family class antlr.ASTFactory/FactoryEntry[] heteroList_
  .field family class [mscorlib]System.Collections.Hashtable typename2creator_
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldtoken    antlr.CommonAST
    IL_0006:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
    IL_000b:  call       instance void antlr.ASTFactory::.ctor(class [mscorlib]System.Type)
    IL_0010:  nop
    IL_0011:  nop
    IL_0012:  nop
    IL_0013:  ret
  } // end of method ASTFactory::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string nodeTypeName) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       class [mscorlib]System.Type antlr.ASTFactory::loadNodeTypeObject(string)
    IL_0007:  call       instance void antlr.ASTFactory::.ctor(class [mscorlib]System.Type)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ret
  } // end of method ASTFactory::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.Type nodeType) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.5
    IL_000a:  newarr     antlr.ASTFactory/FactoryEntry
    IL_000f:  stfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0014:  ldarg.0
    IL_0015:  ldarg.1
    IL_0016:  stfld      class [mscorlib]System.Type antlr.ASTFactory::defaultASTNodeTypeObject_
    IL_001b:  ldarg.0
    IL_001c:  ldnull
    IL_001d:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0022:  ldarg.0
    IL_0023:  ldc.i4.s   32
    IL_0025:  ldc.r4     0.30000001
    IL_002a:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor(int32,
                                                                                     float32)
    IL_002f:  stfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_0034:  ldarg.0
    IL_0035:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_003a:  ldstr      "antlr.CommonAST"
    IL_003f:  ldsfld     class antlr.CommonAST/CommonASTCreator antlr.CommonAST::Creator
    IL_0044:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_0049:  nop
    IL_004a:  ldarg.0
    IL_004b:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_0050:  ldstr      "antlr.CommonASTWithHiddenTokens"
    IL_0055:  ldsfld     class antlr.CommonASTWithHiddenTokens/CommonASTWithHiddenTokensCreator antlr.CommonASTWithHiddenTokens::Creator
    IL_005a:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_005f:  nop
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ASTFactory::.ctor

  .method public hidebysig instance void 
          setTokenTypeASTNodeType(int32 tokenType,
                                  string NodeTypeName) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.4
    IL_0003:  clt
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  brtrue.s   IL_0027

    IL_000c:  ldstr      "Internal parser error: Cannot change AST Node Type"
    + " for Token ID '"
    IL_0011:  ldarg.1
    IL_0012:  box        [mscorlib]System.Int32
    IL_0017:  ldstr      "'"
    IL_001c:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_0021:  newobj     instance void antlr.ANTLRException::.ctor(string)
    IL_0026:  throw

    IL_0027:  ldarg.1
    IL_0028:  ldarg.0
    IL_0029:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_002e:  ldlen
    IL_002f:  conv.i4
    IL_0030:  ldc.i4.1
    IL_0031:  add
    IL_0032:  cgt
    IL_0034:  ldc.i4.0
    IL_0035:  ceq
    IL_0037:  stloc.0
    IL_0038:  ldloc.0
    IL_0039:  brtrue.s   IL_0043

    IL_003b:  ldarg.0
    IL_003c:  ldarg.1
    IL_003d:  call       instance void antlr.ASTFactory::setMaxNodeType(int32)
    IL_0042:  nop
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0049:  ldarg.1
    IL_004a:  ldelem.ref
    IL_004b:  ldnull
    IL_004c:  ceq
    IL_004e:  ldc.i4.0
    IL_004f:  ceq
    IL_0051:  stloc.0
    IL_0052:  ldloc.0
    IL_0053:  brtrue.s   IL_006a

    IL_0055:  ldarg.0
    IL_0056:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_005b:  ldarg.1
    IL_005c:  ldarg.2
    IL_005d:  call       class [mscorlib]System.Type antlr.ASTFactory::loadNodeTypeObject(string)
    IL_0062:  newobj     instance void antlr.ASTFactory/FactoryEntry::.ctor(class [mscorlib]System.Type)
    IL_0067:  stelem.ref
    IL_0068:  br.s       IL_007d

    IL_006a:  ldarg.0
    IL_006b:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0070:  ldarg.1
    IL_0071:  ldelem.ref
    IL_0072:  ldarg.2
    IL_0073:  call       class [mscorlib]System.Type antlr.ASTFactory::loadNodeTypeObject(string)
    IL_0078:  stfld      class [mscorlib]System.Type antlr.ASTFactory/FactoryEntry::NodeTypeObject
    IL_007d:  ret
  } // end of method ASTFactory::setTokenTypeASTNodeType

  .method public hidebysig instance void 
          registerFactory(int32 NodeType,
                          string NodeTypeName) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 46 52 65 70 6C 61 63 65 64 20 62 79 20 73   // ..FReplaced by s
                                                                              65 74 54 6F 6B 65 6E 54 79 70 65 41 53 54 4E 6F   // etTokenTypeASTNo
                                                                              64 65 54 79 70 65 28 69 6E 74 2C 20 73 74 72 69   // deType(int, stri
                                                                              6E 67 29 20 73 69 6E 63 65 20 76 65 72 73 69 6F   // ng) since versio
                                                                              6E 20 32 2E 37 2E 32 2E 36 01 00 00 )             // n 2.7.2.6...
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  call       instance void antlr.ASTFactory::setTokenTypeASTNodeType(int32,
                                                                                 string)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method ASTFactory::registerFactory

  .method public hidebysig instance void 
          setTokenTypeASTNodeCreator(int32 NodeType,
                                     class antlr.ASTNodeCreator creator) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.4
    IL_0003:  clt
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  brtrue.s   IL_0027

    IL_000c:  ldstr      "Internal parser error: Cannot change AST Node Type"
    + " for Token ID '"
    IL_0011:  ldarg.1
    IL_0012:  box        [mscorlib]System.Int32
    IL_0017:  ldstr      "'"
    IL_001c:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_0021:  newobj     instance void antlr.ANTLRException::.ctor(string)
    IL_0026:  throw

    IL_0027:  ldarg.1
    IL_0028:  ldarg.0
    IL_0029:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_002e:  ldlen
    IL_002f:  conv.i4
    IL_0030:  ldc.i4.1
    IL_0031:  add
    IL_0032:  cgt
    IL_0034:  ldc.i4.0
    IL_0035:  ceq
    IL_0037:  stloc.0
    IL_0038:  ldloc.0
    IL_0039:  brtrue.s   IL_0043

    IL_003b:  ldarg.0
    IL_003c:  ldarg.1
    IL_003d:  call       instance void antlr.ASTFactory::setMaxNodeType(int32)
    IL_0042:  nop
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0049:  ldarg.1
    IL_004a:  ldelem.ref
    IL_004b:  ldnull
    IL_004c:  ceq
    IL_004e:  ldc.i4.0
    IL_004f:  ceq
    IL_0051:  stloc.0
    IL_0052:  ldloc.0
    IL_0053:  brtrue.s   IL_0065

    IL_0055:  ldarg.0
    IL_0056:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_005b:  ldarg.1
    IL_005c:  ldarg.2
    IL_005d:  newobj     instance void antlr.ASTFactory/FactoryEntry::.ctor(class antlr.ASTNodeCreator)
    IL_0062:  stelem.ref
    IL_0063:  br.s       IL_0073

    IL_0065:  ldarg.0
    IL_0066:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_006b:  ldarg.1
    IL_006c:  ldelem.ref
    IL_006d:  ldarg.2
    IL_006e:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory/FactoryEntry::Creator
    IL_0073:  ldarg.0
    IL_0074:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_0079:  ldarg.2
    IL_007a:  callvirt   instance string antlr.ASTNodeCreator::get_ASTNodeTypeName()
    IL_007f:  ldarg.2
    IL_0080:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_0085:  nop
    IL_0086:  ret
  } // end of method ASTFactory::setTokenTypeASTNodeCreator

  .method public hidebysig instance void 
          setASTNodeCreator(class antlr.ASTNodeCreator creator) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0008:  ret
  } // end of method ASTFactory::setASTNodeCreator

  .method public hidebysig instance void 
          setMaxNodeType(int32 NodeType) cil managed
  {
    // 
    .maxstack  6
    .locals init (int32 V_0,
             class antlr.ASTFactory/FactoryEntry[] V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.2
    IL_000e:  ldloc.2
    IL_000f:  brtrue.s   IL_0023

    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  ldc.i4.1
    IL_0015:  add
    IL_0016:  newarr     antlr.ASTFactory/FactoryEntry
    IL_001b:  stfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0020:  nop
    IL_0021:  br.s       IL_0089

    IL_0023:  nop
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_002a:  ldlen
    IL_002b:  conv.i4
    IL_002c:  stloc.0
    IL_002d:  ldarg.1
    IL_002e:  ldloc.0
    IL_002f:  clt
    IL_0031:  stloc.2
    IL_0032:  ldloc.2
    IL_0033:  brtrue.s   IL_0059

    IL_0035:  nop
    IL_0036:  ldarg.1
    IL_0037:  ldc.i4.1
    IL_0038:  add
    IL_0039:  newarr     antlr.ASTFactory/FactoryEntry
    IL_003e:  stloc.1
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0045:  ldc.i4.0
    IL_0046:  ldloc.1
    IL_0047:  ldc.i4.0
    IL_0048:  ldloc.0
    IL_0049:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                           int32,
                                                           class [mscorlib]System.Array,
                                                           int32,
                                                           int32)
    IL_004e:  nop
    IL_004f:  ldarg.0
    IL_0050:  ldloc.1
    IL_0051:  stfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0056:  nop
    IL_0057:  br.s       IL_0088

    IL_0059:  ldarg.1
    IL_005a:  ldloc.0
    IL_005b:  clt
    IL_005d:  ldc.i4.0
    IL_005e:  ceq
    IL_0060:  stloc.2
    IL_0061:  ldloc.2
    IL_0062:  brtrue.s   IL_0088

    IL_0064:  nop
    IL_0065:  ldarg.1
    IL_0066:  ldc.i4.1
    IL_0067:  add
    IL_0068:  newarr     antlr.ASTFactory/FactoryEntry
    IL_006d:  stloc.1
    IL_006e:  ldarg.0
    IL_006f:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0074:  ldc.i4.0
    IL_0075:  ldloc.1
    IL_0076:  ldc.i4.0
    IL_0077:  ldarg.1
    IL_0078:  ldc.i4.1
    IL_0079:  add
    IL_007a:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                           int32,
                                                           class [mscorlib]System.Array,
                                                           int32,
                                                           int32)
    IL_007f:  nop
    IL_0080:  ldarg.0
    IL_0081:  ldloc.1
    IL_0082:  stfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0087:  nop
    IL_0088:  nop
    IL_0089:  ret
  } // end of method ASTFactory::setMaxNodeType

  .method public hidebysig newslot virtual 
          instance void  addASTChild(valuetype antlr.ASTPair& currentAST,
                                     class antlr.collections.AST child) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.2
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  brtrue.s   IL_0066

    IL_0009:  nop
    IL_000a:  ldarg.1
    IL_000b:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0010:  ldnull
    IL_0011:  ceq
    IL_0013:  ldc.i4.0
    IL_0014:  ceq
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  brtrue.s   IL_0025

    IL_001a:  nop
    IL_001b:  ldarg.1
    IL_001c:  ldarg.2
    IL_001d:  stfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0022:  nop
    IL_0023:  br.s       IL_0057

    IL_0025:  nop
    IL_0026:  ldarg.1
    IL_0027:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_002c:  ldnull
    IL_002d:  ceq
    IL_002f:  ldc.i4.0
    IL_0030:  ceq
    IL_0032:  stloc.0
    IL_0033:  ldloc.0
    IL_0034:  brtrue.s   IL_0047

    IL_0036:  nop
    IL_0037:  ldarg.1
    IL_0038:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_003d:  ldarg.2
    IL_003e:  callvirt   instance void antlr.collections.AST::setFirstChild(class antlr.collections.AST)
    IL_0043:  nop
    IL_0044:  nop
    IL_0045:  br.s       IL_0056

    IL_0047:  nop
    IL_0048:  ldarg.1
    IL_0049:  ldfld      class antlr.collections.AST antlr.ASTPair::child
    IL_004e:  ldarg.2
    IL_004f:  callvirt   instance void antlr.collections.AST::setNextSibling(class antlr.collections.AST)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  nop
    IL_0057:  ldarg.1
    IL_0058:  ldarg.2
    IL_0059:  stfld      class antlr.collections.AST antlr.ASTPair::child
    IL_005e:  ldarg.1
    IL_005f:  call       instance void antlr.ASTPair::advanceChildToEnd()
    IL_0064:  nop
    IL_0065:  nop
    IL_0066:  ret
  } // end of method ASTFactory::addASTChild

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.2
    IL_000e:  ldloc.2
    IL_000f:  brtrue.s   IL_0020

    IL_0011:  ldarg.0
    IL_0012:  ldarg.0
    IL_0013:  ldfld      class [mscorlib]System.Type antlr.ASTFactory::defaultASTNodeTypeObject_
    IL_0018:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeTypeObject(class [mscorlib]System.Type)
    IL_001d:  stloc.0
    IL_001e:  br.s       IL_002c

    IL_0020:  ldarg.0
    IL_0021:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0026:  callvirt   instance class antlr.collections.AST antlr.ASTNodeCreator::Create()
    IL_002b:  stloc.0
    IL_002c:  ldloc.0
    IL_002d:  stloc.1
    IL_002e:  br.s       IL_0030

    IL_0030:  ldloc.1
    IL_0031:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(int32 'type') cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeType(int32)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldarg.1
    IL_000b:  ldstr      ""
    IL_0010:  callvirt   instance void antlr.collections.AST::initialize(int32,
                                                                         string)
    IL_0015:  nop
    IL_0016:  ldloc.0
    IL_0017:  stloc.1
    IL_0018:  br.s       IL_001a

    IL_001a:  ldloc.1
    IL_001b:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(int32 'type',
                 string txt) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeType(int32)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldarg.1
    IL_000b:  ldarg.2
    IL_000c:  callvirt   instance void antlr.collections.AST::initialize(int32,
                                                                         string)
    IL_0011:  nop
    IL_0012:  ldloc.0
    IL_0013:  stloc.1
    IL_0014:  br.s       IL_0016

    IL_0016:  ldloc.1
    IL_0017:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(int32 'type',
                 string txt,
                 string ASTNodeTypeName) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.3
    IL_0003:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeName(string)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldarg.1
    IL_000b:  ldarg.2
    IL_000c:  callvirt   instance void antlr.collections.AST::initialize(int32,
                                                                         string)
    IL_0011:  nop
    IL_0012:  ldloc.0
    IL_0013:  stloc.1
    IL_0014:  br.s       IL_0016

    IL_0016:  ldloc.1
    IL_0017:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(class antlr.IToken tok,
                 string ASTNodeTypeName) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.2
    IL_0003:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeName(string)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance void antlr.collections.AST::initialize(class antlr.IToken)
    IL_0010:  nop
    IL_0011:  ldloc.0
    IL_0012:  stloc.1
    IL_0013:  br.s       IL_0015

    IL_0015:  ldloc.1
    IL_0016:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(class antlr.collections.AST aNode) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.2
    IL_0009:  ldloc.2
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldnull
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0022

    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromAST(class antlr.collections.AST)
    IL_0018:  stloc.0
    IL_0019:  ldloc.0
    IL_001a:  ldarg.1
    IL_001b:  callvirt   instance void antlr.collections.AST::initialize(class antlr.collections.AST)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldloc.0
    IL_0023:  stloc.1
    IL_0024:  br.s       IL_0026

    IL_0026:  ldloc.1
    IL_0027:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          create(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.2
    IL_0009:  ldloc.2
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldnull
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0027

    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  callvirt   instance int32 antlr.IToken::get_Type()
    IL_0018:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeType(int32)
    IL_001d:  stloc.0
    IL_001e:  ldloc.0
    IL_001f:  ldarg.1
    IL_0020:  callvirt   instance void antlr.collections.AST::initialize(class antlr.IToken)
    IL_0025:  nop
    IL_0026:  nop
    IL_0027:  ldloc.0
    IL_0028:  stloc.1
    IL_0029:  br.s       IL_002b

    IL_002b:  ldloc.1
    IL_002c:  ret
  } // end of method ASTFactory::create

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          'dup'(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.2
    IL_0009:  ldloc.2
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldnull
    IL_000d:  stloc.1
    IL_000e:  br.s       IL_0024

    IL_0010:  ldarg.0
    IL_0011:  ldarg.1
    IL_0012:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromAST(class antlr.collections.AST)
    IL_0017:  stloc.0
    IL_0018:  ldloc.0
    IL_0019:  ldarg.1
    IL_001a:  callvirt   instance void antlr.collections.AST::initialize(class antlr.collections.AST)
    IL_001f:  nop
    IL_0020:  ldloc.0
    IL_0021:  stloc.1
    IL_0022:  br.s       IL_0024

    IL_0024:  ldloc.1
    IL_0025:  ret
  } // end of method ASTFactory::'dup'

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          dupList(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             class antlr.collections.AST V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance class antlr.collections.AST antlr.ASTFactory::dupTree(class antlr.collections.AST)
    IL_0008:  stloc.0
    IL_0009:  ldloc.0
    IL_000a:  stloc.1
    IL_000b:  br.s       IL_002c

    IL_000d:  nop
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0014:  starg.s    t
    IL_0016:  ldloc.1
    IL_0017:  ldarg.0
    IL_0018:  ldarg.1
    IL_0019:  callvirt   instance class antlr.collections.AST antlr.ASTFactory::dupTree(class antlr.collections.AST)
    IL_001e:  callvirt   instance void antlr.collections.AST::setNextSibling(class antlr.collections.AST)
    IL_0023:  nop
    IL_0024:  ldloc.1
    IL_0025:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_002a:  stloc.1
    IL_002b:  nop
    IL_002c:  ldarg.1
    IL_002d:  ldnull
    IL_002e:  ceq
    IL_0030:  ldc.i4.0
    IL_0031:  ceq
    IL_0033:  stloc.3
    IL_0034:  ldloc.3
    IL_0035:  brtrue.s   IL_000d

    IL_0037:  ldloc.0
    IL_0038:  stloc.2
    IL_0039:  br.s       IL_003b

    IL_003b:  ldloc.2
    IL_003c:  ret
  } // end of method ASTFactory::dupList

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          dupTree(class antlr.collections.AST t) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance class antlr.collections.AST antlr.ASTFactory::'dup'(class antlr.collections.AST)
    IL_0008:  stloc.0
    IL_0009:  ldarg.1
    IL_000a:  ldnull
    IL_000b:  ceq
    IL_000d:  stloc.2
    IL_000e:  ldloc.2
    IL_000f:  brtrue.s   IL_0026

    IL_0011:  nop
    IL_0012:  ldloc.0
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_001a:  callvirt   instance class antlr.collections.AST antlr.ASTFactory::dupList(class antlr.collections.AST)
    IL_001f:  callvirt   instance void antlr.collections.AST::setFirstChild(class antlr.collections.AST)
    IL_0024:  nop
    IL_0025:  nop
    IL_0026:  ldloc.0
    IL_0027:  stloc.1
    IL_0028:  br.s       IL_002a

    IL_002a:  ldloc.1
    IL_002b:  ret
  } // end of method ASTFactory::dupTree

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          make(class antlr.collections.AST[] nodes) cil managed
  {
    .param [1]
    .custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 01 00 00 00 ) 
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.collections.AST V_1,
             int32 V_2,
             class antlr.collections.AST V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_000f

    IL_0004:  ldarg.1
    IL_0005:  ldlen
    IL_0006:  conv.i4
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  br.s       IL_0010

    IL_000f:  ldc.i4.0
    IL_0010:  stloc.s    V_4
    IL_0012:  ldloc.s    V_4
    IL_0014:  brtrue.s   IL_001d

    IL_0016:  ldnull
    IL_0017:  stloc.3
    IL_0018:  br         IL_00d1

    IL_001d:  ldarg.1
    IL_001e:  ldc.i4.0
    IL_001f:  ldelem.ref
    IL_0020:  stloc.0
    IL_0021:  ldnull
    IL_0022:  stloc.1
    IL_0023:  ldloc.0
    IL_0024:  ldnull
    IL_0025:  ceq
    IL_0027:  stloc.s    V_4
    IL_0029:  ldloc.s    V_4
    IL_002b:  brtrue.s   IL_0037

    IL_002d:  nop
    IL_002e:  ldloc.0
    IL_002f:  ldnull
    IL_0030:  callvirt   instance void antlr.collections.AST::setFirstChild(class antlr.collections.AST)
    IL_0035:  nop
    IL_0036:  nop
    IL_0037:  ldc.i4.1
    IL_0038:  stloc.2
    IL_0039:  br         IL_00be

    IL_003e:  nop
    IL_003f:  ldarg.1
    IL_0040:  ldloc.2
    IL_0041:  ldelem.ref
    IL_0042:  ldnull
    IL_0043:  ceq
    IL_0045:  ldc.i4.0
    IL_0046:  ceq
    IL_0048:  stloc.s    V_4
    IL_004a:  ldloc.s    V_4
    IL_004c:  brtrue.s   IL_0050

    IL_004e:  br.s       IL_00ba

    IL_0050:  ldloc.0
    IL_0051:  ldnull
    IL_0052:  ceq
    IL_0054:  ldc.i4.0
    IL_0055:  ceq
    IL_0057:  stloc.s    V_4
    IL_0059:  ldloc.s    V_4
    IL_005b:  brtrue.s   IL_0067

    IL_005d:  nop
    IL_005e:  ldarg.1
    IL_005f:  ldloc.2
    IL_0060:  ldelem.ref
    IL_0061:  dup
    IL_0062:  stloc.1
    IL_0063:  stloc.0
    IL_0064:  nop
    IL_0065:  br.s       IL_009c

    IL_0067:  ldloc.1
    IL_0068:  ldnull
    IL_0069:  ceq
    IL_006b:  ldc.i4.0
    IL_006c:  ceq
    IL_006e:  stloc.s    V_4
    IL_0070:  ldloc.s    V_4
    IL_0072:  brtrue.s   IL_0089

    IL_0074:  nop
    IL_0075:  ldloc.0
    IL_0076:  ldarg.1
    IL_0077:  ldloc.2
    IL_0078:  ldelem.ref
    IL_0079:  callvirt   instance void antlr.collections.AST::setFirstChild(class antlr.collections.AST)
    IL_007e:  nop
    IL_007f:  ldloc.0
    IL_0080:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_0085:  stloc.1
    IL_0086:  nop
    IL_0087:  br.s       IL_009c

    IL_0089:  nop
    IL_008a:  ldloc.1
    IL_008b:  ldarg.1
    IL_008c:  ldloc.2
    IL_008d:  ldelem.ref
    IL_008e:  callvirt   instance void antlr.collections.AST::setNextSibling(class antlr.collections.AST)
    IL_0093:  nop
    IL_0094:  ldloc.1
    IL_0095:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_009a:  stloc.1
    IL_009b:  nop
    IL_009c:  br.s       IL_00a7

    IL_009e:  nop
    IL_009f:  ldloc.1
    IL_00a0:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_00a5:  stloc.1
    IL_00a6:  nop
    IL_00a7:  ldloc.1
    IL_00a8:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_00ad:  ldnull
    IL_00ae:  ceq
    IL_00b0:  ldc.i4.0
    IL_00b1:  ceq
    IL_00b3:  stloc.s    V_4
    IL_00b5:  ldloc.s    V_4
    IL_00b7:  brtrue.s   IL_009e

    IL_00b9:  nop
    IL_00ba:  ldloc.2
    IL_00bb:  ldc.i4.1
    IL_00bc:  add
    IL_00bd:  stloc.2
    IL_00be:  ldloc.2
    IL_00bf:  ldarg.1
    IL_00c0:  ldlen
    IL_00c1:  conv.i4
    IL_00c2:  clt
    IL_00c4:  stloc.s    V_4
    IL_00c6:  ldloc.s    V_4
    IL_00c8:  brtrue     IL_003e

    IL_00cd:  ldloc.0
    IL_00ce:  stloc.3
    IL_00cf:  br.s       IL_00d1

    IL_00d1:  ldloc.3
    IL_00d2:  ret
  } // end of method ASTFactory::make

  .method public hidebysig newslot virtual 
          instance class antlr.collections.AST 
          make(class antlr.collections.impl.ASTArray nodes) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldfld      class antlr.collections.AST[] antlr.collections.impl.ASTArray::'array'
    IL_0008:  callvirt   instance class antlr.collections.AST antlr.ASTFactory::make(class antlr.collections.AST[])
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0010

    IL_0010:  ldloc.0
    IL_0011:  ret
  } // end of method ASTFactory::make

  .method public hidebysig newslot virtual 
          instance void  makeASTRoot(valuetype antlr.ASTPair& currentAST,
                                     class antlr.collections.AST root) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.2
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  stloc.0
    IL_0006:  ldloc.0
    IL_0007:  brtrue.s   IL_0032

    IL_0009:  nop
    IL_000a:  ldarg.2
    IL_000b:  ldarg.1
    IL_000c:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0011:  callvirt   instance void antlr.collections.AST::addChild(class antlr.collections.AST)
    IL_0016:  nop
    IL_0017:  ldarg.1
    IL_0018:  ldarg.1
    IL_0019:  ldfld      class antlr.collections.AST antlr.ASTPair::root
    IL_001e:  stfld      class antlr.collections.AST antlr.ASTPair::child
    IL_0023:  ldarg.1
    IL_0024:  call       instance void antlr.ASTPair::advanceChildToEnd()
    IL_0029:  nop
    IL_002a:  ldarg.1
    IL_002b:  ldarg.2
    IL_002c:  stfld      class antlr.collections.AST antlr.ASTPair::root
    IL_0031:  nop
    IL_0032:  ret
  } // end of method ASTFactory::makeASTRoot

  .method public hidebysig newslot virtual 
          instance void  setASTNodeType(string t) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0007:  ldnull
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0031

    IL_000e:  nop
    IL_000f:  ldarg.1
    IL_0010:  ldarg.0
    IL_0011:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_0016:  callvirt   instance string antlr.ASTNodeCreator::get_ASTNodeTypeName()
    IL_001b:  call       bool [mscorlib]System.String::op_Inequality(string,
                                                                     string)
    IL_0020:  ldc.i4.0
    IL_0021:  ceq
    IL_0023:  stloc.0
    IL_0024:  ldloc.0
    IL_0025:  brtrue.s   IL_0030

    IL_0027:  nop
    IL_0028:  ldarg.0
    IL_0029:  ldnull
    IL_002a:  stfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_002f:  nop
    IL_0030:  nop
    IL_0031:  ldarg.0
    IL_0032:  ldarg.1
    IL_0033:  call       class [mscorlib]System.Type antlr.ASTFactory::loadNodeTypeObject(string)
    IL_0038:  stfld      class [mscorlib]System.Type antlr.ASTFactory::defaultASTNodeTypeObject_
    IL_003d:  ret
  } // end of method ASTFactory::setASTNodeType

  .method public hidebysig newslot virtual 
          instance void  'error'(string e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Error()
    IL_0006:  ldarg.1
    IL_0007:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method ASTFactory::'error'

  .method private hidebysig static class [mscorlib]System.Type 
          loadNodeTypeObject(string nodeTypeName) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Type V_0,
             bool V_1,
             class [mscorlib]System.Reflection.Assembly V_2,
             class [mscorlib]System.Type V_3,
             bool V_4,
             class [mscorlib]System.Reflection.Assembly[] V_5,
             int32 V_6)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  ldc.i4.0
    IL_0004:  stloc.1
    IL_0005:  ldarg.0
    IL_0006:  ldnull
    IL_0007:  ceq
    IL_0009:  stloc.s    V_4
    IL_000b:  ldloc.s    V_4
    IL_000d:  brtrue.s   IL_0063

    IL_000f:  nop
    IL_0010:  nop
    IL_0011:  call       class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    IL_0016:  callvirt   instance class [mscorlib]System.Reflection.Assembly[] [mscorlib]System.AppDomain::GetAssemblies()
    IL_001b:  stloc.s    V_5
    IL_001d:  ldc.i4.0
    IL_001e:  stloc.s    V_6
    IL_0020:  br.s       IL_0053

    IL_0022:  ldloc.s    V_5
    IL_0024:  ldloc.s    V_6
    IL_0026:  ldelem.ref
    IL_0027:  stloc.2
    IL_0028:  nop
    .try
    {
      IL_0029:  nop
      IL_002a:  ldloc.2
      IL_002b:  ldarg.0
      IL_002c:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Reflection.Assembly::GetType(string)
      IL_0031:  stloc.0
      IL_0032:  ldloc.0
      IL_0033:  ldnull
      IL_0034:  ceq
      IL_0036:  stloc.s    V_4
      IL_0038:  ldloc.s    V_4
      IL_003a:  brtrue.s   IL_0041

      IL_003c:  nop
      IL_003d:  ldc.i4.1
      IL_003e:  stloc.1
      IL_003f:  leave.s    IL_0061

      IL_0041:  nop
      IL_0042:  leave.s    IL_004b

    }  // end .try
    catch [mscorlib]System.Object 
    {
      IL_0044:  pop
      IL_0045:  nop
      IL_0046:  ldc.i4.0
      IL_0047:  stloc.1
      IL_0048:  nop
      IL_0049:  leave.s    IL_004b

    }  // end handler
    IL_004b:  nop
    IL_004c:  nop
    IL_004d:  ldloc.s    V_6
    IL_004f:  ldc.i4.1
    IL_0050:  add
    IL_0051:  stloc.s    V_6
    IL_0053:  ldloc.s    V_6
    IL_0055:  ldloc.s    V_5
    IL_0057:  ldlen
    IL_0058:  conv.i4
    IL_0059:  clt
    IL_005b:  stloc.s    V_4
    IL_005d:  ldloc.s    V_4
    IL_005f:  brtrue.s   IL_0022

    IL_0061:  nop
    IL_0062:  nop
    IL_0063:  ldloc.1
    IL_0064:  stloc.s    V_4
    IL_0066:  ldloc.s    V_4
    IL_0068:  brtrue.s   IL_0081

    IL_006a:  nop
    IL_006b:  ldstr      "Unable to load AST Node Type: '"
    IL_0070:  ldarg.0
    IL_0071:  ldstr      "'"
    IL_0076:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_007b:  newobj     instance void [mscorlib]System.TypeLoadException::.ctor(string)
    IL_0080:  throw

    IL_0081:  ldloc.0
    IL_0082:  stloc.3
    IL_0083:  br.s       IL_0085

    IL_0085:  ldloc.3
    IL_0086:  ret
  } // end of method ASTFactory::loadNodeTypeObject

  .method private hidebysig instance class antlr.collections.AST 
          createFromAST(class antlr.collections.AST node) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class [mscorlib]System.Type V_1,
             class antlr.ASTNodeCreator V_2,
             class antlr.collections.AST V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  ldarg.1
    IL_0004:  callvirt   instance class [mscorlib]System.Type [mscorlib]System.Object::GetType()
    IL_0009:  stloc.1
    IL_000a:  ldarg.0
    IL_000b:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_0010:  ldloc.1
    IL_0011:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_0016:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_Item(object)
    IL_001b:  castclass  antlr.ASTNodeCreator
    IL_0020:  stloc.2
    IL_0021:  ldloc.2
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.s    V_4
    IL_0027:  ldloc.s    V_4
    IL_0029:  brtrue.s   IL_005f

    IL_002b:  nop
    IL_002c:  ldloc.2
    IL_002d:  callvirt   instance class antlr.collections.AST antlr.ASTNodeCreator::Create()
    IL_0032:  stloc.0
    IL_0033:  ldloc.0
    IL_0034:  ldnull
    IL_0035:  ceq
    IL_0037:  ldc.i4.0
    IL_0038:  ceq
    IL_003a:  stloc.s    V_4
    IL_003c:  ldloc.s    V_4
    IL_003e:  brtrue.s   IL_005c

    IL_0040:  nop
    IL_0041:  ldstr      "Unable to create AST Node Type: '"
    IL_0046:  ldloc.1
    IL_0047:  callvirt   instance string [mscorlib]System.Type::get_FullName()
    IL_004c:  ldstr      "'"
    IL_0051:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0056:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_005b:  throw

    IL_005c:  nop
    IL_005d:  br.s       IL_0069

    IL_005f:  nop
    IL_0060:  ldarg.0
    IL_0061:  ldloc.1
    IL_0062:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeTypeObject(class [mscorlib]System.Type)
    IL_0067:  stloc.0
    IL_0068:  nop
    IL_0069:  ldloc.0
    IL_006a:  stloc.3
    IL_006b:  br.s       IL_006d

    IL_006d:  ldloc.3
    IL_006e:  ret
  } // end of method ASTFactory::createFromAST

  .method private hidebysig instance class antlr.collections.AST 
          createFromNodeName(string nodeTypeName) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class antlr.ASTNodeCreator V_1,
             class antlr.collections.AST V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    IL_0003:  ldarg.0
    IL_0004:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.ASTFactory::typename2creator_
    IL_0009:  ldarg.1
    IL_000a:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_Item(object)
    IL_000f:  castclass  antlr.ASTNodeCreator
    IL_0014:  stloc.1
    IL_0015:  ldloc.1
    IL_0016:  ldnull
    IL_0017:  ceq
    IL_0019:  stloc.3
    IL_001a:  ldloc.3
    IL_001b:  brtrue.s   IL_004a

    IL_001d:  nop
    IL_001e:  ldloc.1
    IL_001f:  callvirt   instance class antlr.collections.AST antlr.ASTNodeCreator::Create()
    IL_0024:  stloc.0
    IL_0025:  ldloc.0
    IL_0026:  ldnull
    IL_0027:  ceq
    IL_0029:  ldc.i4.0
    IL_002a:  ceq
    IL_002c:  stloc.3
    IL_002d:  ldloc.3
    IL_002e:  brtrue.s   IL_0047

    IL_0030:  nop
    IL_0031:  ldstr      "Unable to create AST Node Type: '"
    IL_0036:  ldarg.1
    IL_0037:  ldstr      "'"
    IL_003c:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0041:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
    IL_0046:  throw

    IL_0047:  nop
    IL_0048:  br.s       IL_0059

    IL_004a:  nop
    IL_004b:  ldarg.0
    IL_004c:  ldarg.1
    IL_004d:  call       class [mscorlib]System.Type antlr.ASTFactory::loadNodeTypeObject(string)
    IL_0052:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeTypeObject(class [mscorlib]System.Type)
    IL_0057:  stloc.0
    IL_0058:  nop
    IL_0059:  ldloc.0
    IL_005a:  stloc.2
    IL_005b:  br.s       IL_005d

    IL_005d:  ldloc.2
    IL_005e:  ret
  } // end of method ASTFactory::createFromNodeName

  .method private hidebysig instance class antlr.collections.AST 
          createFromNodeType(int32 nodeTypeIndex) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.AST V_0,
             class antlr.ASTFactory/FactoryEntry V_1,
             class antlr.collections.AST V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  blt.s      IL_0015

    IL_0005:  ldarg.1
    IL_0006:  ldarg.0
    IL_0007:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_000c:  ldlen
    IL_000d:  conv.i4
    IL_000e:  cgt
    IL_0010:  ldc.i4.0
    IL_0011:  ceq
    IL_0013:  br.s       IL_0016

    IL_0015:  ldc.i4.0
    IL_0016:  ldstr      "Invalid AST node type!"
    IL_001b:  call       void [System]System.Diagnostics.Debug::Assert(bool,
                                                                       string)
    IL_0020:  nop
    IL_0021:  ldnull
    IL_0022:  stloc.0
    IL_0023:  ldarg.0
    IL_0024:  ldfld      class antlr.ASTFactory/FactoryEntry[] antlr.ASTFactory::heteroList_
    IL_0029:  ldarg.1
    IL_002a:  ldelem.ref
    IL_002b:  stloc.1
    IL_002c:  ldloc.1
    IL_002d:  brfalse.s  IL_003a

    IL_002f:  ldloc.1
    IL_0030:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory/FactoryEntry::Creator
    IL_0035:  ldnull
    IL_0036:  ceq
    IL_0038:  br.s       IL_003b

    IL_003a:  ldc.i4.1
    IL_003b:  stloc.3
    IL_003c:  ldloc.3
    IL_003d:  brtrue.s   IL_004f

    IL_003f:  nop
    IL_0040:  ldloc.1
    IL_0041:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory/FactoryEntry::Creator
    IL_0046:  callvirt   instance class antlr.collections.AST antlr.ASTNodeCreator::Create()
    IL_004b:  stloc.0
    IL_004c:  nop
    IL_004d:  br.s       IL_00a5

    IL_004f:  nop
    IL_0050:  ldloc.1
    IL_0051:  brfalse.s  IL_0061

    IL_0053:  ldloc.1
    IL_0054:  ldfld      class [mscorlib]System.Type antlr.ASTFactory/FactoryEntry::NodeTypeObject
    IL_0059:  ldnull
    IL_005a:  ceq
    IL_005c:  ldc.i4.0
    IL_005d:  ceq
    IL_005f:  br.s       IL_0062

    IL_0061:  ldc.i4.0
    IL_0062:  stloc.3
    IL_0063:  ldloc.3
    IL_0064:  brtrue.s   IL_0097

    IL_0066:  nop
    IL_0067:  ldarg.0
    IL_0068:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_006d:  ldnull
    IL_006e:  ceq
    IL_0070:  ldc.i4.0
    IL_0071:  ceq
    IL_0073:  stloc.3
    IL_0074:  ldloc.3
    IL_0075:  brtrue.s   IL_0088

    IL_0077:  nop
    IL_0078:  ldarg.0
    IL_0079:  ldarg.0
    IL_007a:  ldfld      class [mscorlib]System.Type antlr.ASTFactory::defaultASTNodeTypeObject_
    IL_007f:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeTypeObject(class [mscorlib]System.Type)
    IL_0084:  stloc.0
    IL_0085:  nop
    IL_0086:  br.s       IL_0094

    IL_0088:  ldarg.0
    IL_0089:  ldfld      class antlr.ASTNodeCreator antlr.ASTFactory::defaultCreator_
    IL_008e:  callvirt   instance class antlr.collections.AST antlr.ASTNodeCreator::Create()
    IL_0093:  stloc.0
    IL_0094:  nop
    IL_0095:  br.s       IL_00a4

    IL_0097:  ldarg.0
    IL_0098:  ldloc.1
    IL_0099:  ldfld      class [mscorlib]System.Type antlr.ASTFactory/FactoryEntry::NodeTypeObject
    IL_009e:  call       instance class antlr.collections.AST antlr.ASTFactory::createFromNodeTypeObject(class [mscorlib]System.Type)
    IL_00a3:  stloc.0
    IL_00a4:  nop
    IL_00a5:  ldloc.0
    IL_00a6:  stloc.2
    IL_00a7:  br.s       IL_00a9

    IL_00a9:  ldloc.2
    IL_00aa:  ret
  } // end of method ASTFactory::createFromNodeType

  .method private hidebysig instance class antlr.collections.AST 
          createFromNodeTypeObject(class [mscorlib]System.Type nodeTypeObject) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.AST V_0,
             class [mscorlib]System.Exception V_1,
             class antlr.collections.AST V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldnull
    IL_0002:  stloc.0
    .try
    {
      IL_0003:  nop
      IL_0004:  ldarg.1
      IL_0005:  call       object [mscorlib]System.Activator::CreateInstance(class [mscorlib]System.Type)
      IL_000a:  castclass  antlr.collections.AST
      IL_000f:  stloc.0
      IL_0010:  ldloc.0
      IL_0011:  ldnull
      IL_0012:  ceq
      IL_0014:  ldc.i4.0
      IL_0015:  ceq
      IL_0017:  stloc.3
      IL_0018:  ldloc.3
      IL_0019:  brtrue.s   IL_0037

      IL_001b:  nop
      IL_001c:  ldstr      "Unable to create AST Node Type: '"
      IL_0021:  ldarg.1
      IL_0022:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0027:  ldstr      "'"
      IL_002c:  call       string [mscorlib]System.String::Concat(string,
                                                                  string,
                                                                  string)
      IL_0031:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string)
      IL_0036:  throw

      IL_0037:  nop
      IL_0038:  leave.s    IL_0058

    }  // end .try
    catch [mscorlib]System.Exception 
    {
      IL_003a:  stloc.1
      IL_003b:  nop
      IL_003c:  ldstr      "Unable to create AST Node Type: '"
      IL_0041:  ldarg.1
      IL_0042:  callvirt   instance string [mscorlib]System.Type::get_FullName()
      IL_0047:  ldstr      "'"
      IL_004c:  call       string [mscorlib]System.String::Concat(string,
                                                                  string,
                                                                  string)
      IL_0051:  ldloc.1
      IL_0052:  newobj     instance void [mscorlib]System.ArgumentException::.ctor(string,
                                                                                   class [mscorlib]System.Exception)
      IL_0057:  throw

    }  // end handler
    IL_0058:  nop
    IL_0059:  ldloc.0
    IL_005a:  stloc.2
    IL_005b:  br.s       IL_005d

    IL_005d:  ldloc.2
    IL_005e:  ret
  } // end of method ASTFactory::createFromNodeTypeObject

} // end of class antlr.ASTFactory

.class public auto ansi beforefieldinit antlr.debug.TraceEventArgs
       extends antlr.debug.GuessingEventArgs
{
  .field private int32 ruleNum_
  .field private int32 data_
  .field public static int32 ENTER
  .field public static int32 EXIT
  .field public static int32 DONE_PARSING
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method TraceEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type',
                               int32 ruleNum,
                               int32 guessing,
                               int32 data) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldarg.2
    IL_000b:  ldarg.3
    IL_000c:  ldarg.s    data
    IL_000e:  call       instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_0013:  nop
    IL_0014:  nop
    IL_0015:  ret
  } // end of method TraceEventArgs::.ctor

  .method public hidebysig newslot specialname virtual 
          instance int32  get_Data() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.TraceEventArgs::data_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TraceEventArgs::get_Data

  .method public hidebysig newslot specialname virtual 
          instance void  set_Data(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.TraceEventArgs::data_
    IL_0008:  ret
  } // end of method TraceEventArgs::set_Data

  .method public hidebysig newslot specialname virtual 
          instance int32  get_RuleNum() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.debug.TraceEventArgs::ruleNum_
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method TraceEventArgs::get_RuleNum

  .method public hidebysig newslot specialname virtual 
          instance void  set_RuleNum(int32 'value') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  stfld      int32 antlr.debug.TraceEventArgs::ruleNum_
    IL_0008:  ret
  } // end of method TraceEventArgs::set_RuleNum

  .method assembly hidebysig instance void 
          setValues(int32 'type',
                    int32 ruleNum,
                    int32 guessing,
                    int32 data) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.3
    IL_0004:  call       instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0009:  nop
    IL_000a:  ldarg.0
    IL_000b:  ldarg.2
    IL_000c:  callvirt   instance void antlr.debug.TraceEventArgs::set_RuleNum(int32)
    IL_0011:  nop
    IL_0012:  ldarg.0
    IL_0013:  ldarg.s    data
    IL_0015:  callvirt   instance void antlr.debug.TraceEventArgs::set_Data(int32)
    IL_001a:  nop
    IL_001b:  ret
  } // end of method TraceEventArgs::setValues

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0,
             object[] V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.6
    IL_0002:  newarr     [mscorlib]System.Object
    IL_0007:  stloc.1
    IL_0008:  ldloc.1
    IL_0009:  ldc.i4.0
    IL_000a:  ldstr      "ParserTraceEvent ["
    IL_000f:  stelem.ref
    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.1
    IL_0012:  ldarg.0
    IL_0013:  callvirt   instance int32 antlr.debug.ANTLREventArgs::get_Type()
    IL_0018:  ldsfld     int32 antlr.debug.TraceEventArgs::ENTER
    IL_001d:  beq.s      IL_0026

    IL_001f:  ldstr      "exit,"
    IL_0024:  br.s       IL_002b

    IL_0026:  ldstr      "enter,"
    IL_002b:  stelem.ref
    IL_002c:  ldloc.1
    IL_002d:  ldc.i4.2
    IL_002e:  ldarg.0
    IL_002f:  callvirt   instance int32 antlr.debug.TraceEventArgs::get_RuleNum()
    IL_0034:  box        [mscorlib]System.Int32
    IL_0039:  stelem.ref
    IL_003a:  ldloc.1
    IL_003b:  ldc.i4.3
    IL_003c:  ldstr      ","
    IL_0041:  stelem.ref
    IL_0042:  ldloc.1
    IL_0043:  ldc.i4.4
    IL_0044:  ldarg.0
    IL_0045:  callvirt   instance int32 antlr.debug.GuessingEventArgs::get_Guessing()
    IL_004a:  box        [mscorlib]System.Int32
    IL_004f:  stelem.ref
    IL_0050:  ldloc.1
    IL_0051:  ldc.i4.5
    IL_0052:  ldstr      "]"
    IL_0057:  stelem.ref
    IL_0058:  ldloc.1
    IL_0059:  call       string [mscorlib]System.String::Concat(object[])
    IL_005e:  stloc.0
    IL_005f:  br.s       IL_0061

    IL_0061:  ldloc.0
    IL_0062:  ret
  } // end of method TraceEventArgs::ToString

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.0
    IL_0001:  stsfld     int32 antlr.debug.TraceEventArgs::ENTER
    IL_0006:  ldc.i4.1
    IL_0007:  stsfld     int32 antlr.debug.TraceEventArgs::EXIT
    IL_000c:  ldc.i4.2
    IL_000d:  stsfld     int32 antlr.debug.TraceEventArgs::DONE_PARSING
    IL_0012:  ret
  } // end of method TraceEventArgs::.cctor

  .property instance int32 Data()
  {
    .set instance void antlr.debug.TraceEventArgs::set_Data(int32)
    .get instance int32 antlr.debug.TraceEventArgs::get_Data()
  } // end of property TraceEventArgs::Data
  .property instance int32 RuleNum()
  {
    .get instance int32 antlr.debug.TraceEventArgs::get_RuleNum()
    .set instance void antlr.debug.TraceEventArgs::set_RuleNum(int32)
  } // end of property TraceEventArgs::RuleNum
} // end of class antlr.debug.TraceEventArgs

.class public abstract auto ansi beforefieldinit antlr.debug.ParserTokenListenerBase
       extends [mscorlib]System.Object
       implements antlr.debug.ParserTokenListener,
                  antlr.debug.Listener
{
  .method public hidebysig newslot virtual 
          instance void  doneParsing(object source,
                                     class antlr.debug.TraceEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserTokenListenerBase::doneParsing

  .method public hidebysig newslot virtual 
          instance void  refresh() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserTokenListenerBase::refresh

  .method public hidebysig newslot virtual 
          instance void  parserConsume(object source,
                                       class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserTokenListenerBase::parserConsume

  .method public hidebysig newslot virtual 
          instance void  parserLA(object source,
                                  class antlr.debug.TokenEventArgs e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ParserTokenListenerBase::parserLA

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ParserTokenListenerBase::.ctor

} // end of class antlr.debug.ParserTokenListenerBase

.class public auto ansi serializable beforefieldinit antlr.TokenStreamIOException
       extends antlr.TokenStreamException
{
  .field public class [mscorlib]System.IO.IOException io
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.IOException io) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  callvirt   instance string [mscorlib]System.Exception::get_Message()
    IL_0007:  call       instance void antlr.TokenStreamException::.ctor(string)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  stfld      class [mscorlib]System.IO.IOException antlr.TokenStreamIOException::io
    IL_0015:  nop
    IL_0016:  ret
  } // end of method TokenStreamIOException::.ctor

} // end of class antlr.TokenStreamIOException

.class public auto ansi beforefieldinit antlr.DumpASTVisitor
       extends [mscorlib]System.Object
       implements antlr.ASTVisitor
{
  .field family int32 level
  .method private hidebysig instance void 
          tabs() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  br.s       IL_001b

    IL_0005:  nop
    IL_0006:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_000b:  ldstr      "   "
    IL_0010:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0015:  nop
    IL_0016:  nop
    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.1
    IL_0019:  add
    IL_001a:  stloc.0
    IL_001b:  ldloc.0
    IL_001c:  ldarg.0
    IL_001d:  ldfld      int32 antlr.DumpASTVisitor::level
    IL_0022:  clt
    IL_0024:  stloc.1
    IL_0025:  ldloc.1
    IL_0026:  brtrue.s   IL_0005

    IL_0028:  ret
  } // end of method DumpASTVisitor::tabs

  .method public hidebysig newslot virtual final 
          instance void  visit(class antlr.collections.AST node) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0,
             class antlr.collections.AST V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  ldarg.1
    IL_0004:  stloc.1
    IL_0005:  br.s       IL_0022

    IL_0007:  nop
    IL_0008:  ldloc.1
    IL_0009:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_000e:  ldnull
    IL_000f:  ceq
    IL_0011:  stloc.2
    IL_0012:  ldloc.2
    IL_0013:  brtrue.s   IL_001a

    IL_0015:  nop
    IL_0016:  ldc.i4.0
    IL_0017:  stloc.0
    IL_0018:  br.s       IL_002d

    IL_001a:  nop
    IL_001b:  ldloc.1
    IL_001c:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0021:  stloc.1
    IL_0022:  ldloc.1
    IL_0023:  ldnull
    IL_0024:  ceq
    IL_0026:  ldc.i4.0
    IL_0027:  ceq
    IL_0029:  stloc.2
    IL_002a:  ldloc.2
    IL_002b:  brtrue.s   IL_0007

    IL_002d:  ldarg.1
    IL_002e:  stloc.1
    IL_002f:  br         IL_0119

    IL_0034:  nop
    IL_0035:  ldloc.0
    IL_0036:  brfalse.s  IL_0041

    IL_0038:  ldloc.1
    IL_0039:  ldarg.1
    IL_003a:  ceq
    IL_003c:  ldc.i4.0
    IL_003d:  ceq
    IL_003f:  br.s       IL_0042

    IL_0041:  ldc.i4.0
    IL_0042:  stloc.2
    IL_0043:  ldloc.2
    IL_0044:  brtrue.s   IL_004f

    IL_0046:  nop
    IL_0047:  ldarg.0
    IL_0048:  call       instance void antlr.DumpASTVisitor::tabs()
    IL_004d:  nop
    IL_004e:  nop
    IL_004f:  ldloc.1
    IL_0050:  callvirt   instance string antlr.collections.AST::getText()
    IL_0055:  ldnull
    IL_0056:  ceq
    IL_0058:  ldc.i4.0
    IL_0059:  ceq
    IL_005b:  stloc.2
    IL_005c:  ldloc.2
    IL_005d:  brtrue.s   IL_0073

    IL_005f:  nop
    IL_0060:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0065:  ldstr      "nil"
    IL_006a:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_006f:  nop
    IL_0070:  nop
    IL_0071:  br.s       IL_0086

    IL_0073:  nop
    IL_0074:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0079:  ldloc.1
    IL_007a:  callvirt   instance string antlr.collections.AST::getText()
    IL_007f:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_0084:  nop
    IL_0085:  nop
    IL_0086:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_008b:  ldstr      " ["
    IL_0090:  ldloc.1
    IL_0091:  callvirt   instance int32 antlr.collections.AST::get_Type()
    IL_0096:  box        [mscorlib]System.Int32
    IL_009b:  ldstr      "] "
    IL_00a0:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_00a5:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_00aa:  nop
    IL_00ab:  ldloc.0
    IL_00ac:  ldc.i4.0
    IL_00ad:  ceq
    IL_00af:  stloc.2
    IL_00b0:  ldloc.2
    IL_00b1:  brtrue.s   IL_00c7

    IL_00b3:  nop
    IL_00b4:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_00b9:  ldstr      " "
    IL_00be:  callvirt   instance void [mscorlib]System.IO.TextWriter::Write(string)
    IL_00c3:  nop
    IL_00c4:  nop
    IL_00c5:  br.s       IL_00d9

    IL_00c7:  nop
    IL_00c8:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_00cd:  ldstr      ""
    IL_00d2:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_00d7:  nop
    IL_00d8:  nop
    IL_00d9:  ldloc.1
    IL_00da:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_00df:  ldnull
    IL_00e0:  ceq
    IL_00e2:  stloc.2
    IL_00e3:  ldloc.2
    IL_00e4:  brtrue.s   IL_0111

    IL_00e6:  nop
    IL_00e7:  ldarg.0
    IL_00e8:  dup
    IL_00e9:  ldfld      int32 antlr.DumpASTVisitor::level
    IL_00ee:  ldc.i4.1
    IL_00ef:  add
    IL_00f0:  stfld      int32 antlr.DumpASTVisitor::level
    IL_00f5:  ldarg.0
    IL_00f6:  ldloc.1
    IL_00f7:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getFirstChild()
    IL_00fc:  call       instance void antlr.DumpASTVisitor::visit(class antlr.collections.AST)
    IL_0101:  nop
    IL_0102:  ldarg.0
    IL_0103:  dup
    IL_0104:  ldfld      int32 antlr.DumpASTVisitor::level
    IL_0109:  ldc.i4.1
    IL_010a:  sub
    IL_010b:  stfld      int32 antlr.DumpASTVisitor::level
    IL_0110:  nop
    IL_0111:  nop
    IL_0112:  ldloc.1
    IL_0113:  callvirt   instance class antlr.collections.AST antlr.collections.AST::getNextSibling()
    IL_0118:  stloc.1
    IL_0119:  ldloc.1
    IL_011a:  ldnull
    IL_011b:  ceq
    IL_011d:  ldc.i4.0
    IL_011e:  ceq
    IL_0120:  stloc.2
    IL_0121:  ldloc.2
    IL_0122:  brtrue     IL_0034

    IL_0127:  ldloc.0
    IL_0128:  ldc.i4.0
    IL_0129:  ceq
    IL_012b:  stloc.2
    IL_012c:  ldloc.2
    IL_012d:  brtrue.s   IL_0141

    IL_012f:  nop
    IL_0130:  call       class [mscorlib]System.IO.TextWriter [mscorlib]System.Console::get_Out()
    IL_0135:  ldstr      ""
    IL_013a:  callvirt   instance void [mscorlib]System.IO.TextWriter::WriteLine(string)
    IL_013f:  nop
    IL_0140:  nop
    IL_0141:  ret
  } // end of method DumpASTVisitor::visit

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.DumpASTVisitor::level
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DumpASTVisitor::.ctor

} // end of class antlr.DumpASTVisitor

.class public auto ansi beforefieldinit antlr.CharBuffer
       extends antlr.InputBuffer
{
  .field private static literal int32 BUF_SIZE = int32(0x00000010)
  .field assembly notserialized class [mscorlib]System.IO.TextReader input
  .field private char[] buf
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class [mscorlib]System.IO.TextReader input_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.s   16
    IL_0003:  newarr     [mscorlib]System.Char
    IL_0008:  stfld      char[] antlr.CharBuffer::buf
    IL_000d:  ldarg.0
    IL_000e:  call       instance void antlr.InputBuffer::.ctor()
    IL_0013:  nop
    IL_0014:  nop
    IL_0015:  ldarg.0
    IL_0016:  ldarg.1
    IL_0017:  stfld      class [mscorlib]System.IO.TextReader antlr.CharBuffer::input
    IL_001c:  nop
    IL_001d:  ret
  } // end of method CharBuffer::.ctor

  .method public hidebysig virtual instance void 
          fill(int32 amount) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1,
             int32 V_2,
             class [mscorlib]System.IO.IOException V_3,
             bool V_4)
    IL_0000:  nop
    .try
    {
      IL_0001:  nop
      IL_0002:  ldarg.0
      IL_0003:  callvirt   instance void antlr.InputBuffer::syncConsume()
      IL_0008:  nop
      IL_0009:  ldarg.1
      IL_000a:  ldarg.0
      IL_000b:  ldfld      int32 antlr.InputBuffer::markerOffset
      IL_0010:  add
      IL_0011:  ldarg.0
      IL_0012:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
      IL_0017:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
      IL_001c:  sub
      IL_001d:  stloc.0
      IL_001e:  br         IL_00b6

      IL_0023:  nop
      IL_0024:  ldarg.0
      IL_0025:  ldfld      class [mscorlib]System.IO.TextReader antlr.CharBuffer::input
      IL_002a:  ldarg.0
      IL_002b:  ldfld      char[] antlr.CharBuffer::buf
      IL_0030:  ldc.i4.0
      IL_0031:  ldc.i4.s   16
      IL_0033:  callvirt   instance int32 [mscorlib]System.IO.TextReader::Read(char[],
                                                                               int32,
                                                                               int32)
      IL_0038:  stloc.1
      IL_0039:  ldc.i4.0
      IL_003a:  stloc.2
      IL_003b:  br.s       IL_005c

      IL_003d:  nop
      IL_003e:  ldarg.0
      IL_003f:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
      IL_0044:  ldarg.0
      IL_0045:  ldfld      char[] antlr.CharBuffer::buf
      IL_004a:  ldloc.2
      IL_004b:  ldelem.u2
      IL_004c:  box        [mscorlib]System.Char
      IL_0051:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
      IL_0056:  pop
      IL_0057:  nop
      IL_0058:  ldloc.2
      IL_0059:  ldc.i4.1
      IL_005a:  add
      IL_005b:  stloc.2
      IL_005c:  ldloc.2
      IL_005d:  ldloc.1
      IL_005e:  clt
      IL_0060:  stloc.s    V_4
      IL_0062:  ldloc.s    V_4
      IL_0064:  brtrue.s   IL_003d

      IL_0066:  ldloc.1
      IL_0067:  ldc.i4.s   16
      IL_0069:  clt
      IL_006b:  ldc.i4.0
      IL_006c:  ceq
      IL_006e:  stloc.s    V_4
      IL_0070:  ldloc.s    V_4
      IL_0072:  brtrue.s   IL_00b1

      IL_0074:  nop
      IL_0075:  br.s       IL_008f

      IL_0077:  nop
      IL_0078:  ldarg.0
      IL_0079:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
      IL_007e:  ldsfld     char antlr.CharScanner::EOF_CHAR
      IL_0083:  box        [mscorlib]System.Char
      IL_0088:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
      IL_008d:  pop
      IL_008e:  nop
      IL_008f:  ldloc.0
      IL_0090:  dup
      IL_0091:  ldc.i4.1
      IL_0092:  sub
      IL_0093:  stloc.0
      IL_0094:  ldc.i4.0
      IL_0095:  ble.s      IL_00a8

      IL_0097:  ldarg.0
      IL_0098:  ldfld      class [mscorlib]System.Collections.ArrayList antlr.InputBuffer::queue
      IL_009d:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
      IL_00a2:  ldc.i4.s   16
      IL_00a4:  clt
      IL_00a6:  br.s       IL_00a9

      IL_00a8:  ldc.i4.0
      IL_00a9:  stloc.s    V_4
      IL_00ab:  ldloc.s    V_4
      IL_00ad:  brtrue.s   IL_0077

      IL_00af:  br.s       IL_00c3

      IL_00b1:  ldloc.0
      IL_00b2:  ldloc.1
      IL_00b3:  sub
      IL_00b4:  stloc.0
      IL_00b5:  nop
      IL_00b6:  ldloc.0
      IL_00b7:  ldc.i4.0
      IL_00b8:  cgt
      IL_00ba:  stloc.s    V_4
      IL_00bc:  ldloc.s    V_4
      IL_00be:  brtrue     IL_0023

      IL_00c3:  nop
      IL_00c4:  leave.s    IL_00cf

    }  // end .try
    catch [mscorlib]System.IO.IOException 
    {
      IL_00c6:  stloc.3
      IL_00c7:  nop
      IL_00c8:  ldloc.3
      IL_00c9:  newobj     instance void antlr.CharStreamIOException::.ctor(class [mscorlib]System.IO.IOException)
      IL_00ce:  throw

    }  // end handler
    IL_00cf:  nop
    IL_00d0:  ret
  } // end of method CharBuffer::fill

} // end of class antlr.CharBuffer

.class public abstract auto ansi beforefieldinit antlr.debug.DebuggingCharScanner
       extends antlr.CharScanner
       implements antlr.debug.DebuggingParser
{
  .field private class antlr.debug.ScannerEventSupport eventSupport
  .field private bool _notDebugMode
  .field famorassem string[] ruleNames
  .field famorassem string[] semPredNames
  .method private hidebysig instance void 
          InitBlock() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  newobj     instance void antlr.debug.ScannerEventSupport::.ctor(object)
    IL_0008:  stfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_000d:  ret
  } // end of method DebuggingCharScanner::InitBlock

  .method public hidebysig newslot virtual 
          instance void  setDebugMode(bool mode) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldc.i4.0
    IL_0004:  ceq
    IL_0006:  stfld      bool antlr.debug.DebuggingCharScanner::_notDebugMode
    IL_000b:  ret
  } // end of method DebuggingCharScanner::setDebugMode

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.InputBuffer cb) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.DebuggingCharScanner::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.CharScanner::.ctor(class antlr.InputBuffer)
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  call       instance void antlr.debug.DebuggingCharScanner::InitBlock()
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method DebuggingCharScanner::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.LexerSharedInputState state) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      bool antlr.debug.DebuggingCharScanner::_notDebugMode
    IL_0007:  ldarg.0
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.CharScanner::.ctor(class antlr.LexerSharedInputState)
    IL_000e:  nop
    IL_000f:  nop
    IL_0010:  ldarg.0
    IL_0011:  call       instance void antlr.debug.DebuggingCharScanner::InitBlock()
    IL_0016:  nop
    IL_0017:  nop
    IL_0018:  ret
  } // end of method DebuggingCharScanner::.ctor

  .method public hidebysig newslot virtual 
          instance void  addMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addMessageListener(class antlr.debug.MessageListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addMessageListener

  .method public hidebysig newslot virtual 
          instance void  addNewLineListener(class antlr.debug.NewLineListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addNewLineListener(class antlr.debug.NewLineListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addNewLineListener

  .method public hidebysig newslot virtual 
          instance void  addParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addParserListener(class antlr.debug.ParserListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addParserListener

  .method public hidebysig newslot virtual 
          instance void  addParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  addParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::addTraceListener(class antlr.debug.TraceListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::addTraceListener

  .method public hidebysig virtual instance void 
          consume() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   -99
    IL_0003:  stloc.0
    .try
    {
      IL_0004:  nop
      IL_0005:  ldarg.0
      IL_0006:  ldc.i4.1
      IL_0007:  callvirt   instance char antlr.CharScanner::LA(int32)
      IL_000c:  stloc.0
      IL_000d:  nop
      IL_000e:  leave.s    IL_0015

    }  // end .try
    catch antlr.CharStreamException 
    {
      IL_0010:  pop
      IL_0011:  nop
      IL_0012:  nop
      IL_0013:  leave.s    IL_0015

    }  // end handler
    IL_0015:  nop
    IL_0016:  ldarg.0
    IL_0017:  call       instance void antlr.CharScanner::consume()
    IL_001c:  nop
    IL_001d:  ldarg.0
    IL_001e:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0023:  ldloc.0
    IL_0024:  callvirt   instance void antlr.debug.ScannerEventSupport::fireConsume(int32)
    IL_0029:  nop
    IL_002a:  ret
  } // end of method DebuggingCharScanner::consume

  .method famorassem hidebysig newslot virtual 
          instance void  fireEnterRule(int32 num,
                                       int32 data) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0027

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001b:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_0020:  ldarg.2
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::fireEnterRule(int32,
                                                                                      int32,
                                                                                      int32)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method DebuggingCharScanner::fireEnterRule

  .method famorassem hidebysig newslot virtual 
          instance void  fireExitRule(int32 num,
                                      int32 ttype) cil managed
  {
    // 
    .maxstack  4
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0027

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.0
    IL_0016:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001b:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_0020:  ldarg.2
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::fireExitRule(int32,
                                                                                     int32,
                                                                                     int32)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method DebuggingCharScanner::fireExitRule

  .method famorassem hidebysig newslot virtual 
          instance bool  fireSemanticPredicateEvaluated(int32 'type',
                                                        int32 num,
                                                        bool condition) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  brtrue.s   IL_002a

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.1
    IL_0015:  ldarg.2
    IL_0016:  ldarg.3
    IL_0017:  ldarg.0
    IL_0018:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001d:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_0022:  callvirt   instance bool antlr.debug.ScannerEventSupport::fireSemanticPredicateEvaluated(int32,
                                                                                                       int32,
                                                                                                       bool,
                                                                                                       int32)
    IL_0027:  stloc.0
    IL_0028:  br.s       IL_002e

    IL_002a:  ldarg.3
    IL_002b:  stloc.0
    IL_002c:  br.s       IL_002e

    IL_002e:  ldloc.0
    IL_002f:  ret
  } // end of method DebuggingCharScanner::fireSemanticPredicateEvaluated

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateFailed() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001a:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ScannerEventSupport::fireSyntacticPredicateFailed(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method DebuggingCharScanner::fireSyntacticPredicateFailed

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateStarted() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001a:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ScannerEventSupport::fireSyntacticPredicateStarted(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method DebuggingCharScanner::fireSyntacticPredicateStarted

  .method famorassem hidebysig newslot virtual 
          instance void  fireSyntacticPredicateSucceeded() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance bool antlr.debug.DebuggingCharScanner::isDebugMode()
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  ldloc.0
    IL_000c:  brtrue.s   IL_0025

    IL_000e:  ldarg.0
    IL_000f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0014:  ldarg.0
    IL_0015:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
    IL_001a:  ldfld      int32 antlr.LexerSharedInputState::guessing
    IL_001f:  callvirt   instance void antlr.debug.ScannerEventSupport::fireSyntacticPredicateSucceeded(int32)
    IL_0024:  nop
    IL_0025:  ret
  } // end of method DebuggingCharScanner::fireSyntacticPredicateSucceeded

  .method public hidebysig newslot virtual 
          instance string  getRuleName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.debug.DebuggingCharScanner::ruleNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method DebuggingCharScanner::getRuleName

  .method public hidebysig newslot virtual 
          instance string  getSemPredName(int32 num) cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      string[] antlr.debug.DebuggingCharScanner::semPredNames
    IL_0007:  ldarg.1
    IL_0008:  ldelem.ref
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method DebuggingCharScanner::getSemPredName

  .method public hidebysig newslot virtual 
          instance void  goToSleep() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.debug.DebuggingCharScanner V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  stloc.0
    IL_0004:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0009:  nop
    .try
    {
      IL_000a:  nop
      .try
      {
        IL_000b:  nop
        IL_000c:  ldarg.0
        IL_000d:  call       bool [mscorlib]System.Threading.Monitor::Wait(object)
        IL_0012:  pop
        IL_0013:  nop
        IL_0014:  leave.s    IL_001b

      }  // end .try
      catch [mscorlib]System.Threading.ThreadInterruptedException 
      {
        IL_0016:  pop
        IL_0017:  nop
        IL_0018:  nop
        IL_0019:  leave.s    IL_001b

      }  // end handler
      IL_001b:  nop
      IL_001c:  nop
      IL_001d:  leave.s    IL_0027

    }  // end .try
    finally
    {
      IL_001f:  ldloc.0
      IL_0020:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_0025:  nop
      IL_0026:  endfinally
    }  // end handler
    IL_0027:  nop
    IL_0028:  ret
  } // end of method DebuggingCharScanner::goToSleep

  .method public hidebysig newslot virtual 
          instance bool  isDebugMode() cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      bool antlr.debug.DebuggingCharScanner::_notDebugMode
    IL_0007:  ldc.i4.0
    IL_0008:  ceq
    IL_000a:  stloc.0
    IL_000b:  br.s       IL_000d

    IL_000d:  ldloc.0
    IL_000e:  ret
  } // end of method DebuggingCharScanner::isDebugMode

  .method public hidebysig virtual instance char 
          LA(int32 i) cil managed
  {
    // 
    .maxstack  3
    .locals init (char V_0,
             char V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance char antlr.CharScanner::LA(int32)
    IL_0008:  stloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_000f:  ldarg.1
    IL_0010:  ldloc.0
    IL_0011:  callvirt   instance void antlr.debug.ScannerEventSupport::fireLA(int32,
                                                                               int32)
    IL_0016:  nop
    IL_0017:  ldloc.0
    IL_0018:  stloc.1
    IL_0019:  br.s       IL_001b

    IL_001b:  ldloc.1
    IL_001c:  ret
  } // end of method DebuggingCharScanner::LA

  .method famorassem hidebysig virtual instance class antlr.IToken 
          makeToken(int32 t) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance class antlr.IToken antlr.CharScanner::makeToken(int32)
    IL_0008:  stloc.0
    IL_0009:  br.s       IL_000b

    IL_000b:  ldloc.0
    IL_000c:  ret
  } // end of method DebuggingCharScanner::makeToken

  .method public hidebysig virtual instance void 
          match(int32 c) cil managed
  {
    // 
    .maxstack  4
    .locals init (char V_0,
             class antlr.MismatchedCharException V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  nop
      IL_000a:  ldarg.0
      IL_000b:  ldarg.1
      IL_000c:  call       instance void antlr.CharScanner::match(int32)
      IL_0011:  nop
      IL_0012:  ldarg.0
      IL_0013:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0018:  ldarg.1
      IL_0019:  call       char [mscorlib]System.Convert::ToChar(int32)
      IL_001e:  ldarg.0
      IL_001f:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0024:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0029:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMatch(char,
                                                                                    int32)
      IL_002e:  nop
      IL_002f:  nop
      IL_0030:  leave.s    IL_0069

    }  // end .try
    catch antlr.MismatchedCharException 
    {
      IL_0032:  stloc.1
      IL_0033:  nop
      IL_0034:  ldarg.0
      IL_0035:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_003a:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_003f:  ldc.i4.0
      IL_0040:  ceq
      IL_0042:  ldc.i4.0
      IL_0043:  ceq
      IL_0045:  stloc.2
      IL_0046:  ldloc.2
      IL_0047:  brtrue.s   IL_0067

      IL_0049:  ldarg.0
      IL_004a:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_004f:  ldloc.0
      IL_0050:  ldarg.1
      IL_0051:  call       char [mscorlib]System.Convert::ToChar(int32)
      IL_0056:  ldarg.0
      IL_0057:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_005c:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0061:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMismatch(char,
                                                                                       char,
                                                                                       int32)
      IL_0066:  nop
      IL_0067:  ldloc.1
      IL_0068:  throw

    }  // end handler
    IL_0069:  nop
    IL_006a:  ret
  } // end of method DebuggingCharScanner::match

  .method public hidebysig virtual instance void 
          match(class antlr.collections.impl.BitSet b) cil managed
  {
    // 
    .maxstack  5
    .locals init (string V_0,
             char V_1,
             class antlr.MismatchedCharException V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Text.StringBuilder antlr.CharScanner::text
    IL_0007:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_000c:  stloc.0
    IL_000d:  ldarg.0
    IL_000e:  ldc.i4.1
    IL_000f:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_0014:  stloc.1
    .try
    {
      IL_0015:  nop
      IL_0016:  ldarg.0
      IL_0017:  ldarg.1
      IL_0018:  call       instance void antlr.CharScanner::match(class antlr.collections.impl.BitSet)
      IL_001d:  nop
      IL_001e:  ldarg.0
      IL_001f:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0024:  ldloc.1
      IL_0025:  ldarg.1
      IL_0026:  ldloc.0
      IL_0027:  ldarg.0
      IL_0028:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_002d:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0032:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMatch(int32,
                                                                                    class antlr.collections.impl.BitSet,
                                                                                    string,
                                                                                    int32)
      IL_0037:  nop
      IL_0038:  nop
      IL_0039:  leave.s    IL_006e

    }  // end .try
    catch antlr.MismatchedCharException 
    {
      IL_003b:  stloc.2
      IL_003c:  nop
      IL_003d:  ldarg.0
      IL_003e:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0043:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0048:  ldc.i4.0
      IL_0049:  ceq
      IL_004b:  ldc.i4.0
      IL_004c:  ceq
      IL_004e:  stloc.3
      IL_004f:  ldloc.3
      IL_0050:  brtrue.s   IL_006c

      IL_0052:  ldarg.0
      IL_0053:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0058:  ldloc.1
      IL_0059:  ldarg.1
      IL_005a:  ldloc.0
      IL_005b:  ldarg.0
      IL_005c:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0061:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0066:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMismatch(int32,
                                                                                       class antlr.collections.impl.BitSet,
                                                                                       string,
                                                                                       int32)
      IL_006b:  nop
      IL_006c:  ldloc.2
      IL_006d:  throw

    }  // end handler
    IL_006e:  nop
    IL_006f:  ret
  } // end of method DebuggingCharScanner::match

  .method public hidebysig virtual instance void 
          match(string s) cil managed
  {
    // 
    .maxstack  4
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32 V_1,
             int32 V_2,
             class antlr.MismatchedCharException V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor(string)
    IL_000b:  stloc.0
    IL_000c:  ldarg.1
    IL_000d:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0012:  stloc.1
    .try
    {
      IL_0013:  nop
      IL_0014:  ldc.i4.1
      IL_0015:  stloc.2
      IL_0016:  br.s       IL_002c

      IL_0018:  nop
      IL_0019:  ldloc.0
      IL_001a:  ldarg.0
      IL_001b:  ldloc.2
      IL_001c:  call       instance char antlr.CharScanner::LA(int32)
      IL_0021:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(char)
      IL_0026:  pop
      IL_0027:  nop
      IL_0028:  ldloc.2
      IL_0029:  ldc.i4.1
      IL_002a:  add
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  ldloc.1
      IL_002e:  cgt
      IL_0030:  ldc.i4.0
      IL_0031:  ceq
      IL_0033:  stloc.s    V_4
      IL_0035:  ldloc.s    V_4
      IL_0037:  brtrue.s   IL_0018

      IL_0039:  nop
      IL_003a:  leave.s    IL_0041

    }  // end .try
    catch [mscorlib]System.Exception 
    {
      IL_003c:  pop
      IL_003d:  nop
      IL_003e:  nop
      IL_003f:  leave.s    IL_0041

    }  // end handler
    IL_0041:  nop
    .try
    {
      IL_0042:  nop
      IL_0043:  ldarg.0
      IL_0044:  ldarg.1
      IL_0045:  call       instance void antlr.CharScanner::match(string)
      IL_004a:  nop
      IL_004b:  ldarg.0
      IL_004c:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0058:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_005d:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMatch(string,
                                                                                    int32)
      IL_0062:  nop
      IL_0063:  nop
      IL_0064:  leave.s    IL_009f

    }  // end .try
    catch antlr.MismatchedCharException 
    {
      IL_0066:  stloc.3
      IL_0067:  nop
      IL_0068:  ldarg.0
      IL_0069:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_006e:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0073:  ldc.i4.0
      IL_0074:  ceq
      IL_0076:  ldc.i4.0
      IL_0077:  ceq
      IL_0079:  stloc.s    V_4
      IL_007b:  ldloc.s    V_4
      IL_007d:  brtrue.s   IL_009d

      IL_007f:  ldarg.0
      IL_0080:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0085:  ldloc.0
      IL_0086:  callvirt   instance string [mscorlib]System.Object::ToString()
      IL_008b:  ldarg.1
      IL_008c:  ldarg.0
      IL_008d:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0092:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0097:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMismatch(string,
                                                                                       string,
                                                                                       int32)
      IL_009c:  nop
      IL_009d:  ldloc.3
      IL_009e:  throw

    }  // end handler
    IL_009f:  nop
    IL_00a0:  ret
  } // end of method DebuggingCharScanner::match

  .method public hidebysig virtual instance void 
          matchNot(int32 c) cil managed
  {
    // 
    .maxstack  4
    .locals init (char V_0,
             class antlr.MismatchedCharException V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  nop
      IL_000a:  ldarg.0
      IL_000b:  ldarg.1
      IL_000c:  call       instance void antlr.CharScanner::matchNot(int32)
      IL_0011:  nop
      IL_0012:  ldarg.0
      IL_0013:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0018:  ldloc.0
      IL_0019:  ldarg.1
      IL_001a:  call       char [mscorlib]System.Convert::ToChar(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0025:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_002a:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMatchNot(char,
                                                                                       char,
                                                                                       int32)
      IL_002f:  nop
      IL_0030:  nop
      IL_0031:  leave.s    IL_006a

    }  // end .try
    catch antlr.MismatchedCharException 
    {
      IL_0033:  stloc.1
      IL_0034:  nop
      IL_0035:  ldarg.0
      IL_0036:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_003b:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0040:  ldc.i4.0
      IL_0041:  ceq
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  stloc.2
      IL_0047:  ldloc.2
      IL_0048:  brtrue.s   IL_0068

      IL_004a:  ldarg.0
      IL_004b:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0050:  ldloc.0
      IL_0051:  ldarg.1
      IL_0052:  call       char [mscorlib]System.Convert::ToChar(int32)
      IL_0057:  ldarg.0
      IL_0058:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_005d:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0062:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMismatchNot(char,
                                                                                          char,
                                                                                          int32)
      IL_0067:  nop
      IL_0068:  ldloc.1
      IL_0069:  throw

    }  // end handler
    IL_006a:  nop
    IL_006b:  ret
  } // end of method DebuggingCharScanner::matchNot

  .method public hidebysig virtual instance void 
          matchRange(int32 c1,
                     int32 c2) cil managed
  {
    // 
    .maxstack  5
    .locals init (char V_0,
             class antlr.MismatchedCharException V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  callvirt   instance char antlr.CharScanner::LA(int32)
    IL_0008:  stloc.0
    .try
    {
      IL_0009:  nop
      IL_000a:  ldarg.0
      IL_000b:  ldarg.1
      IL_000c:  ldarg.2
      IL_000d:  call       instance void antlr.CharScanner::matchRange(int32,
                                                                       int32)
      IL_0012:  nop
      IL_0013:  ldarg.0
      IL_0014:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0019:  ldloc.0
      IL_001a:  ldstr      ""
      IL_001f:  ldarg.1
      IL_0020:  box        [mscorlib]System.Int32
      IL_0025:  ldarg.2
      IL_0026:  box        [mscorlib]System.Int32
      IL_002b:  call       string [mscorlib]System.String::Concat(object,
                                                                  object,
                                                                  object)
      IL_0030:  ldarg.0
      IL_0031:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_0036:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_003b:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMatch(char,
                                                                                    string,
                                                                                    int32)
      IL_0040:  nop
      IL_0041:  nop
      IL_0042:  leave.s    IL_008b

    }  // end .try
    catch antlr.MismatchedCharException 
    {
      IL_0044:  stloc.1
      IL_0045:  nop
      IL_0046:  ldarg.0
      IL_0047:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_004c:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  ldc.i4.0
      IL_0055:  ceq
      IL_0057:  stloc.2
      IL_0058:  ldloc.2
      IL_0059:  brtrue.s   IL_0089

      IL_005b:  ldarg.0
      IL_005c:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
      IL_0061:  ldloc.0
      IL_0062:  ldstr      ""
      IL_0067:  ldarg.1
      IL_0068:  box        [mscorlib]System.Int32
      IL_006d:  ldarg.2
      IL_006e:  box        [mscorlib]System.Int32
      IL_0073:  call       string [mscorlib]System.String::Concat(object,
                                                                  object,
                                                                  object)
      IL_0078:  ldarg.0
      IL_0079:  ldfld      class antlr.LexerSharedInputState antlr.CharScanner::inputState
      IL_007e:  ldfld      int32 antlr.LexerSharedInputState::guessing
      IL_0083:  callvirt   instance void antlr.debug.ScannerEventSupport::fireMismatch(char,
                                                                                       string,
                                                                                       int32)
      IL_0088:  nop
      IL_0089:  ldloc.1
      IL_008a:  throw

    }  // end handler
    IL_008b:  nop
    IL_008c:  ret
  } // end of method DebuggingCharScanner::matchRange

  .method public hidebysig virtual instance void 
          newline() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  call       instance void antlr.CharScanner::newline()
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_000e:  ldarg.0
    IL_000f:  callvirt   instance int32 antlr.CharScanner::getLine()
    IL_0014:  callvirt   instance void antlr.debug.ScannerEventSupport::fireNewLine(int32)
    IL_0019:  nop
    IL_001a:  ret
  } // end of method DebuggingCharScanner::newline

  .method public hidebysig newslot virtual 
          instance void  removeMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeMessageListener(class antlr.debug.MessageListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeMessageListener

  .method public hidebysig newslot virtual 
          instance void  removeNewLineListener(class antlr.debug.NewLineListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeNewLineListener(class antlr.debug.NewLineListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeNewLineListener

  .method public hidebysig newslot virtual 
          instance void  removeParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeParserListener(class antlr.debug.ParserListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeParserListener

  .method public hidebysig newslot virtual 
          instance void  removeParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  removeParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::removeTraceListener(class antlr.debug.TraceListener)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method DebuggingCharScanner::removeTraceListener

  .method public hidebysig newslot virtual 
          instance void  reportError(class antlr.MismatchedCharException e) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::fireReportError(class [mscorlib]System.Exception)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.CharScanner::reportError(class antlr.RecognitionException)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method DebuggingCharScanner::reportError

  .method public hidebysig virtual instance void 
          reportError(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::fireReportError(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.CharScanner::reportError(string)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method DebuggingCharScanner::reportError

  .method public hidebysig virtual instance void 
          reportWarning(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.debug.ScannerEventSupport antlr.debug.DebuggingCharScanner::eventSupport
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.debug.ScannerEventSupport::fireReportWarning(string)
    IL_000d:  nop
    IL_000e:  ldarg.0
    IL_000f:  ldarg.1
    IL_0010:  call       instance void antlr.CharScanner::reportWarning(string)
    IL_0015:  nop
    IL_0016:  ret
  } // end of method DebuggingCharScanner::reportWarning

  .method public hidebysig newslot virtual 
          instance void  setupDebugging() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method DebuggingCharScanner::setupDebugging

  .method public hidebysig newslot virtual 
          instance void  wakeUp() cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.debug.DebuggingCharScanner V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  stloc.0
    IL_0004:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0009:  nop
    .try
    {
      IL_000a:  nop
      IL_000b:  ldarg.0
      IL_000c:  call       void [mscorlib]System.Threading.Monitor::Pulse(object)
      IL_0011:  nop
      IL_0012:  nop
      IL_0013:  leave.s    IL_001d

    }  // end .try
    finally
    {
      IL_0015:  ldloc.0
      IL_0016:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_001b:  nop
      IL_001c:  endfinally
    }  // end handler
    IL_001d:  nop
    IL_001e:  ret
  } // end of method DebuggingCharScanner::wakeUp

} // end of class antlr.debug.DebuggingCharScanner

.class public auto ansi beforefieldinit antlr.collections.impl.BitSet
       extends [mscorlib]System.Object
       implements [mscorlib]System.ICloneable
{
  .field static famorassem literal int32 BITS = int32(0x00000040)
  .field static famorassem literal int32 NIBBLE = int32(0x00000004)
  .field static famorassem literal int32 LOG_BITS = int32(0x00000006)
  .field static famorassem initonly int32 MOD_MASK
  .field famorassem int64[] dataBits
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.s   64
    IL_0003:  call       instance void antlr.collections.impl.BitSet::.ctor(int32)
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  nop
    IL_000b:  ret
  } // end of method BitSet::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int64[] bits_) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  stfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  nop
    IL_0010:  ret
  } // end of method BitSet::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 nbits) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.0
    IL_0009:  ldarg.1
    IL_000a:  ldc.i4.1
    IL_000b:  sub
    IL_000c:  ldc.i4.6
    IL_000d:  shr
    IL_000e:  ldc.i4.1
    IL_000f:  add
    IL_0010:  newarr     [mscorlib]System.Int64
    IL_0015:  stfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_001a:  nop
    IL_001b:  ret
  } // end of method BitSet::.ctor

  .method public hidebysig newslot virtual 
          instance void  'add'(int32 el) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  call       int32 antlr.collections.impl.BitSet::wordNumber(int32)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  clt
    IL_0013:  stloc.1
    IL_0014:  ldloc.1
    IL_0015:  brtrue.s   IL_0021

    IL_0017:  nop
    IL_0018:  ldarg.0
    IL_0019:  ldarg.1
    IL_001a:  callvirt   instance void antlr.collections.impl.BitSet::growToInclude(int32)
    IL_001f:  nop
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0027:  ldloc.0
    IL_0028:  ldelema    [mscorlib]System.Int64
    IL_002d:  dup
    IL_002e:  ldobj      [mscorlib]System.Int64
    IL_0033:  ldarg.1
    IL_0034:  call       int64 antlr.collections.impl.BitSet::bitMask(int32)
    IL_0039:  or
    IL_003a:  stobj      [mscorlib]System.Int64
    IL_003f:  ret
  } // end of method BitSet::'add'

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.BitSet 
          'and'(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.impl.BitSet V_0,
             class antlr.collections.impl.BitSet V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance object antlr.collections.impl.BitSet::Clone()
    IL_0007:  castclass  antlr.collections.impl.BitSet
    IL_000c:  stloc.0
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance void antlr.collections.impl.BitSet::andInPlace(class antlr.collections.impl.BitSet)
    IL_0014:  nop
    IL_0015:  ldloc.0
    IL_0016:  stloc.1
    IL_0017:  br.s       IL_0019

    IL_0019:  ldloc.1
    IL_001a:  ret
  } // end of method BitSet::'and'

  .method public hidebysig newslot virtual 
          instance void  andInPlace(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldarg.1
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_0016:  stloc.0
    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.1
    IL_0019:  sub
    IL_001a:  stloc.1
    IL_001b:  br.s       IL_0043

    IL_001d:  nop
    IL_001e:  ldarg.0
    IL_001f:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0024:  ldloc.1
    IL_0025:  ldelema    [mscorlib]System.Int64
    IL_002a:  dup
    IL_002b:  ldobj      [mscorlib]System.Int64
    IL_0030:  ldarg.1
    IL_0031:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0036:  ldloc.1
    IL_0037:  ldelem.i8
    IL_0038:  and
    IL_0039:  stobj      [mscorlib]System.Int64
    IL_003e:  nop
    IL_003f:  ldloc.1
    IL_0040:  ldc.i4.1
    IL_0041:  sub
    IL_0042:  stloc.1
    IL_0043:  ldloc.1
    IL_0044:  ldc.i4.0
    IL_0045:  clt
    IL_0047:  ldc.i4.0
    IL_0048:  ceq
    IL_004a:  stloc.2
    IL_004b:  ldloc.2
    IL_004c:  brtrue.s   IL_001d

    IL_004e:  ldloc.0
    IL_004f:  stloc.1
    IL_0050:  br.s       IL_0062

    IL_0052:  nop
    IL_0053:  ldarg.0
    IL_0054:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0059:  ldloc.1
    IL_005a:  ldc.i4.0
    IL_005b:  conv.i8
    IL_005c:  stelem.i8
    IL_005d:  nop
    IL_005e:  ldloc.1
    IL_005f:  ldc.i4.1
    IL_0060:  add
    IL_0061:  stloc.1
    IL_0062:  ldloc.1
    IL_0063:  ldarg.0
    IL_0064:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0069:  ldlen
    IL_006a:  conv.i4
    IL_006b:  clt
    IL_006d:  stloc.2
    IL_006e:  ldloc.2
    IL_006f:  brtrue.s   IL_0052

    IL_0071:  ret
  } // end of method BitSet::andInPlace

  .method private hidebysig static int64 
          bitMask(int32 bitNumber) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             int64 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldsfld     int32 antlr.collections.impl.BitSet::MOD_MASK
    IL_0007:  and
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.1
    IL_000a:  conv.i8
    IL_000b:  ldloc.0
    IL_000c:  ldc.i4.s   63
    IL_000e:  and
    IL_000f:  shl
    IL_0010:  stloc.1
    IL_0011:  br.s       IL_0013

    IL_0013:  ldloc.1
    IL_0014:  ret
  } // end of method BitSet::bitMask

  .method public hidebysig newslot virtual 
          instance void  clear() cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.1
    IL_000a:  sub
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_001e

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0015:  ldloc.0
    IL_0016:  ldc.i4.0
    IL_0017:  conv.i8
    IL_0018:  stelem.i8
    IL_0019:  nop
    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.1
    IL_001c:  sub
    IL_001d:  stloc.0
    IL_001e:  ldloc.0
    IL_001f:  ldc.i4.0
    IL_0020:  clt
    IL_0022:  ldc.i4.0
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_000e

    IL_0029:  ret
  } // end of method BitSet::clear

  .method public hidebysig newslot virtual 
          instance void  clear(int32 el) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  call       int32 antlr.collections.impl.BitSet::wordNumber(int32)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  clt
    IL_0013:  stloc.1
    IL_0014:  ldloc.1
    IL_0015:  brtrue.s   IL_0021

    IL_0017:  nop
    IL_0018:  ldarg.0
    IL_0019:  ldarg.1
    IL_001a:  callvirt   instance void antlr.collections.impl.BitSet::growToInclude(int32)
    IL_001f:  nop
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0027:  ldloc.0
    IL_0028:  ldelema    [mscorlib]System.Int64
    IL_002d:  dup
    IL_002e:  ldobj      [mscorlib]System.Int64
    IL_0033:  ldarg.1
    IL_0034:  call       int64 antlr.collections.impl.BitSet::bitMask(int32)
    IL_0039:  not
    IL_003a:  and
    IL_003b:  stobj      [mscorlib]System.Int64
    IL_0040:  ret
  } // end of method BitSet::clear

  .method public hidebysig newslot virtual 
          instance object  Clone() cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.collections.impl.BitSet V_0,
             object V_1)
    IL_0000:  nop
    .try
    {
      IL_0001:  nop
      IL_0002:  newobj     instance void antlr.collections.impl.BitSet::.ctor()
      IL_0007:  stloc.0
      IL_0008:  ldloc.0
      IL_0009:  ldarg.0
      IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
      IL_000f:  ldlen
      IL_0010:  conv.i4
      IL_0011:  newarr     [mscorlib]System.Int64
      IL_0016:  stfld      int64[] antlr.collections.impl.BitSet::dataBits
      IL_001b:  ldarg.0
      IL_001c:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
      IL_0021:  ldc.i4.0
      IL_0022:  ldloc.0
      IL_0023:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
      IL_0028:  ldc.i4.0
      IL_0029:  ldarg.0
      IL_002a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
      IL_002f:  ldlen
      IL_0030:  conv.i4
      IL_0031:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                             int32,
                                                             class [mscorlib]System.Array,
                                                             int32,
                                                             int32)
      IL_0036:  nop
      IL_0037:  nop
      IL_0038:  leave.s    IL_0042

    }  // end .try
    catch [mscorlib]System.Object 
    {
      IL_003a:  pop
      IL_003b:  nop
      IL_003c:  newobj     instance void [mscorlib]System.ApplicationException::.ctor()
      IL_0041:  throw

    }  // end handler
    IL_0042:  nop
    IL_0043:  ldloc.0
    IL_0044:  stloc.1
    IL_0045:  br.s       IL_0047

    IL_0047:  ldloc.1
    IL_0048:  ret
  } // end of method BitSet::Clone

  .method public hidebysig newslot virtual 
          instance int32  degree() cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1,
             int64 V_2,
             int32 V_3,
             int32 V_4,
             bool V_5)
    IL_0000:  nop
    IL_0001:  ldc.i4.0
    IL_0002:  stloc.0
    IL_0003:  ldarg.0
    IL_0004:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0009:  ldlen
    IL_000a:  conv.i4
    IL_000b:  ldc.i4.1
    IL_000c:  sub
    IL_000d:  stloc.1
    IL_000e:  br.s       IL_005d

    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0017:  ldloc.1
    IL_0018:  ldelem.i8
    IL_0019:  stloc.2
    IL_001a:  ldloc.2
    IL_001b:  ldc.i4.0
    IL_001c:  conv.i8
    IL_001d:  ceq
    IL_001f:  stloc.s    V_5
    IL_0021:  ldloc.s    V_5
    IL_0023:  brtrue.s   IL_0058

    IL_0025:  nop
    IL_0026:  ldc.i4.s   63
    IL_0028:  stloc.3
    IL_0029:  br.s       IL_004a

    IL_002b:  nop
    IL_002c:  ldloc.2
    IL_002d:  ldc.i4.1
    IL_002e:  conv.i8
    IL_002f:  ldloc.3
    IL_0030:  ldc.i4.s   63
    IL_0032:  and
    IL_0033:  shl
    IL_0034:  and
    IL_0035:  ldc.i4.0
    IL_0036:  conv.i8
    IL_0037:  ceq
    IL_0039:  stloc.s    V_5
    IL_003b:  ldloc.s    V_5
    IL_003d:  brtrue.s   IL_0045

    IL_003f:  nop
    IL_0040:  ldloc.0
    IL_0041:  ldc.i4.1
    IL_0042:  add
    IL_0043:  stloc.0
    IL_0044:  nop
    IL_0045:  nop
    IL_0046:  ldloc.3
    IL_0047:  ldc.i4.1
    IL_0048:  sub
    IL_0049:  stloc.3
    IL_004a:  ldloc.3
    IL_004b:  ldc.i4.0
    IL_004c:  clt
    IL_004e:  ldc.i4.0
    IL_004f:  ceq
    IL_0051:  stloc.s    V_5
    IL_0053:  ldloc.s    V_5
    IL_0055:  brtrue.s   IL_002b

    IL_0057:  nop
    IL_0058:  nop
    IL_0059:  ldloc.1
    IL_005a:  ldc.i4.1
    IL_005b:  sub
    IL_005c:  stloc.1
    IL_005d:  ldloc.1
    IL_005e:  ldc.i4.0
    IL_005f:  clt
    IL_0061:  ldc.i4.0
    IL_0062:  ceq
    IL_0064:  stloc.s    V_5
    IL_0066:  ldloc.s    V_5
    IL_0068:  brtrue.s   IL_0010

    IL_006a:  ldloc.0
    IL_006b:  stloc.s    V_4
    IL_006d:  br.s       IL_006f

    IL_006f:  ldloc.s    V_4
    IL_0071:  ret
  } // end of method BitSet::degree

  .method public hidebysig virtual instance int32 
          GetHashCode() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  callvirt   instance int32 [mscorlib]System.Object::GetHashCode()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method BitSet::GetHashCode

  .method public hidebysig virtual instance bool 
          Equals(object obj) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.collections.impl.BitSet V_0,
             int32 V_1,
             int32 V_2,
             bool V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  brfalse.s  IL_0012

    IL_0004:  ldarg.1
    IL_0005:  isinst     antlr.collections.impl.BitSet
    IL_000a:  ldnull
    IL_000b:  cgt.un
    IL_000d:  ldc.i4.0
    IL_000e:  ceq
    IL_0010:  br.s       IL_0013

    IL_0012:  ldc.i4.1
    IL_0013:  stloc.s    V_4
    IL_0015:  ldloc.s    V_4
    IL_0017:  brtrue     IL_0104

    IL_001c:  nop
    IL_001d:  ldarg.1
    IL_001e:  castclass  antlr.collections.impl.BitSet
    IL_0023:  stloc.0
    IL_0024:  ldarg.0
    IL_0025:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_002a:  ldlen
    IL_002b:  conv.i4
    IL_002c:  ldloc.0
    IL_002d:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0032:  ldlen
    IL_0033:  conv.i4
    IL_0034:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_0039:  stloc.1
    IL_003a:  ldloc.1
    IL_003b:  stloc.2
    IL_003c:  br.s       IL_0060

    IL_003e:  nop
    IL_003f:  ldarg.0
    IL_0040:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0045:  ldloc.2
    IL_0046:  ldelem.i8
    IL_0047:  ldloc.0
    IL_0048:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_004d:  ldloc.2
    IL_004e:  ldelem.i8
    IL_004f:  ceq
    IL_0051:  stloc.s    V_4
    IL_0053:  ldloc.s    V_4
    IL_0055:  brtrue.s   IL_005f

    IL_0057:  nop
    IL_0058:  ldc.i4.0
    IL_0059:  stloc.3
    IL_005a:  br         IL_0108

    IL_005f:  nop
    IL_0060:  ldloc.2
    IL_0061:  dup
    IL_0062:  ldc.i4.1
    IL_0063:  sub
    IL_0064:  stloc.2
    IL_0065:  ldc.i4.0
    IL_0066:  cgt
    IL_0068:  stloc.s    V_4
    IL_006a:  ldloc.s    V_4
    IL_006c:  brtrue.s   IL_003e

    IL_006e:  ldarg.0
    IL_006f:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0074:  ldlen
    IL_0075:  conv.i4
    IL_0076:  ldloc.1
    IL_0077:  cgt
    IL_0079:  ldc.i4.0
    IL_007a:  ceq
    IL_007c:  stloc.s    V_4
    IL_007e:  ldloc.s    V_4
    IL_0080:  brtrue.s   IL_00b8

    IL_0082:  nop
    IL_0083:  ldarg.0
    IL_0084:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0089:  ldlen
    IL_008a:  conv.i4
    IL_008b:  stloc.2
    IL_008c:  br.s       IL_00a7

    IL_008e:  nop
    IL_008f:  ldarg.0
    IL_0090:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0095:  ldloc.2
    IL_0096:  ldelem.i8
    IL_0097:  ldc.i4.0
    IL_0098:  conv.i8
    IL_0099:  ceq
    IL_009b:  stloc.s    V_4
    IL_009d:  ldloc.s    V_4
    IL_009f:  brtrue.s   IL_00a6

    IL_00a1:  nop
    IL_00a2:  ldc.i4.0
    IL_00a3:  stloc.3
    IL_00a4:  br.s       IL_0108

    IL_00a6:  nop
    IL_00a7:  ldloc.2
    IL_00a8:  dup
    IL_00a9:  ldc.i4.1
    IL_00aa:  sub
    IL_00ab:  stloc.2
    IL_00ac:  ldloc.1
    IL_00ad:  cgt
    IL_00af:  stloc.s    V_4
    IL_00b1:  ldloc.s    V_4
    IL_00b3:  brtrue.s   IL_008e

    IL_00b5:  nop
    IL_00b6:  br.s       IL_0100

    IL_00b8:  ldloc.0
    IL_00b9:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_00be:  ldlen
    IL_00bf:  conv.i4
    IL_00c0:  ldloc.1
    IL_00c1:  cgt
    IL_00c3:  ldc.i4.0
    IL_00c4:  ceq
    IL_00c6:  stloc.s    V_4
    IL_00c8:  ldloc.s    V_4
    IL_00ca:  brtrue.s   IL_0100

    IL_00cc:  nop
    IL_00cd:  ldloc.0
    IL_00ce:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_00d3:  ldlen
    IL_00d4:  conv.i4
    IL_00d5:  stloc.2
    IL_00d6:  br.s       IL_00f1

    IL_00d8:  nop
    IL_00d9:  ldloc.0
    IL_00da:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_00df:  ldloc.2
    IL_00e0:  ldelem.i8
    IL_00e1:  ldc.i4.0
    IL_00e2:  conv.i8
    IL_00e3:  ceq
    IL_00e5:  stloc.s    V_4
    IL_00e7:  ldloc.s    V_4
    IL_00e9:  brtrue.s   IL_00f0

    IL_00eb:  nop
    IL_00ec:  ldc.i4.0
    IL_00ed:  stloc.3
    IL_00ee:  br.s       IL_0108

    IL_00f0:  nop
    IL_00f1:  ldloc.2
    IL_00f2:  dup
    IL_00f3:  ldc.i4.1
    IL_00f4:  sub
    IL_00f5:  stloc.2
    IL_00f6:  ldloc.1
    IL_00f7:  cgt
    IL_00f9:  stloc.s    V_4
    IL_00fb:  ldloc.s    V_4
    IL_00fd:  brtrue.s   IL_00d8

    IL_00ff:  nop
    IL_0100:  ldc.i4.1
    IL_0101:  stloc.3
    IL_0102:  br.s       IL_0108

    IL_0104:  ldc.i4.0
    IL_0105:  stloc.3
    IL_0106:  br.s       IL_0108

    IL_0108:  ldloc.3
    IL_0109:  ret
  } // end of method BitSet::Equals

  .method public hidebysig newslot virtual 
          instance void  growToInclude(int32 bit) cil managed
  {
    // 
    .maxstack  5
    .locals init (int32 V_0,
             int64[] V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.1
    IL_000a:  shl
    IL_000b:  ldarg.0
    IL_000c:  ldarg.1
    IL_000d:  call       instance int32 antlr.collections.impl.BitSet::numWordsToHold(int32)
    IL_0012:  call       int32 [mscorlib]System.Math::Max(int32,
                                                          int32)
    IL_0017:  stloc.0
    IL_0018:  ldloc.0
    IL_0019:  newarr     [mscorlib]System.Int64
    IL_001e:  stloc.1
    IL_001f:  ldarg.0
    IL_0020:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0025:  ldc.i4.0
    IL_0026:  ldloc.1
    IL_0027:  ldc.i4.0
    IL_0028:  ldarg.0
    IL_0029:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_002e:  ldlen
    IL_002f:  conv.i4
    IL_0030:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                           int32,
                                                           class [mscorlib]System.Array,
                                                           int32,
                                                           int32)
    IL_0035:  nop
    IL_0036:  ldarg.0
    IL_0037:  ldloc.1
    IL_0038:  stfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_003d:  ret
  } // end of method BitSet::growToInclude

  .method public hidebysig newslot virtual 
          instance bool  member(int32 el) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  call       int32 antlr.collections.impl.BitSet::wordNumber(int32)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  clt
    IL_0013:  stloc.2
    IL_0014:  ldloc.2
    IL_0015:  brtrue.s   IL_001b

    IL_0017:  ldc.i4.0
    IL_0018:  stloc.1
    IL_0019:  br.s       IL_0034

    IL_001b:  ldarg.0
    IL_001c:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0021:  ldloc.0
    IL_0022:  ldelem.i8
    IL_0023:  ldarg.1
    IL_0024:  call       int64 antlr.collections.impl.BitSet::bitMask(int32)
    IL_0029:  and
    IL_002a:  ldc.i4.0
    IL_002b:  conv.i8
    IL_002c:  ceq
    IL_002e:  ldc.i4.0
    IL_002f:  ceq
    IL_0031:  stloc.1
    IL_0032:  br.s       IL_0034

    IL_0034:  ldloc.1
    IL_0035:  ret
  } // end of method BitSet::member

  .method public hidebysig newslot virtual 
          instance bool  nil() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.1
    IL_000a:  sub
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_0028

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0015:  ldloc.0
    IL_0016:  ldelem.i8
    IL_0017:  ldc.i4.0
    IL_0018:  conv.i8
    IL_0019:  ceq
    IL_001b:  stloc.2
    IL_001c:  ldloc.2
    IL_001d:  brtrue.s   IL_0023

    IL_001f:  ldc.i4.0
    IL_0020:  stloc.1
    IL_0021:  br.s       IL_0037

    IL_0023:  nop
    IL_0024:  ldloc.0
    IL_0025:  ldc.i4.1
    IL_0026:  sub
    IL_0027:  stloc.0
    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.0
    IL_002a:  clt
    IL_002c:  ldc.i4.0
    IL_002d:  ceq
    IL_002f:  stloc.2
    IL_0030:  ldloc.2
    IL_0031:  brtrue.s   IL_000e

    IL_0033:  ldc.i4.1
    IL_0034:  stloc.1
    IL_0035:  br.s       IL_0037

    IL_0037:  ldloc.1
    IL_0038:  ret
  } // end of method BitSet::nil

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.BitSet 
          'not'() cil managed
  {
    // 
    .maxstack  1
    .locals init (class antlr.collections.impl.BitSet V_0,
             class antlr.collections.impl.BitSet V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance object antlr.collections.impl.BitSet::Clone()
    IL_0007:  castclass  antlr.collections.impl.BitSet
    IL_000c:  stloc.0
    IL_000d:  ldloc.0
    IL_000e:  callvirt   instance void antlr.collections.impl.BitSet::notInPlace()
    IL_0013:  nop
    IL_0014:  ldloc.0
    IL_0015:  stloc.1
    IL_0016:  br.s       IL_0018

    IL_0018:  ldloc.1
    IL_0019:  ret
  } // end of method BitSet::'not'

  .method public hidebysig newslot virtual 
          instance void  notInPlace() cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.1
    IL_000a:  sub
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_0025

    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0015:  ldloc.0
    IL_0016:  ldarg.0
    IL_0017:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_001c:  ldloc.0
    IL_001d:  ldelem.i8
    IL_001e:  not
    IL_001f:  stelem.i8
    IL_0020:  nop
    IL_0021:  ldloc.0
    IL_0022:  ldc.i4.1
    IL_0023:  sub
    IL_0024:  stloc.0
    IL_0025:  ldloc.0
    IL_0026:  ldc.i4.0
    IL_0027:  clt
    IL_0029:  ldc.i4.0
    IL_002a:  ceq
    IL_002c:  stloc.1
    IL_002d:  ldloc.1
    IL_002e:  brtrue.s   IL_000e

    IL_0030:  ret
  } // end of method BitSet::notInPlace

  .method public hidebysig newslot virtual 
          instance void  notInPlace(int32 maxBit) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  ldarg.1
    IL_0004:  callvirt   instance void antlr.collections.impl.BitSet::notInPlace(int32,
                                                                                 int32)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method BitSet::notInPlace

  .method public hidebysig newslot virtual 
          instance void  notInPlace(int32 minBit,
                                    int32 maxBit) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.2
    IL_0003:  callvirt   instance void antlr.collections.impl.BitSet::growToInclude(int32)
    IL_0008:  nop
    IL_0009:  ldarg.1
    IL_000a:  stloc.0
    IL_000b:  br.s       IL_0038

    IL_000d:  nop
    IL_000e:  ldloc.0
    IL_000f:  call       int32 antlr.collections.impl.BitSet::wordNumber(int32)
    IL_0014:  stloc.1
    IL_0015:  ldarg.0
    IL_0016:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_001b:  ldloc.1
    IL_001c:  ldelema    [mscorlib]System.Int64
    IL_0021:  dup
    IL_0022:  ldobj      [mscorlib]System.Int64
    IL_0027:  ldloc.0
    IL_0028:  call       int64 antlr.collections.impl.BitSet::bitMask(int32)
    IL_002d:  xor
    IL_002e:  stobj      [mscorlib]System.Int64
    IL_0033:  nop
    IL_0034:  ldloc.0
    IL_0035:  ldc.i4.1
    IL_0036:  add
    IL_0037:  stloc.0
    IL_0038:  ldloc.0
    IL_0039:  ldarg.2
    IL_003a:  cgt
    IL_003c:  ldc.i4.0
    IL_003d:  ceq
    IL_003f:  stloc.2
    IL_0040:  ldloc.2
    IL_0041:  brtrue.s   IL_000d

    IL_0043:  ret
  } // end of method BitSet::notInPlace

  .method private hidebysig instance int32 
          numWordsToHold(int32 el) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.6
    IL_0003:  shr
    IL_0004:  ldc.i4.1
    IL_0005:  add
    IL_0006:  stloc.0
    IL_0007:  br.s       IL_0009

    IL_0009:  ldloc.0
    IL_000a:  ret
  } // end of method BitSet::numWordsToHold

  .method public hidebysig static class antlr.collections.impl.BitSet 
          of(int32 el) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.impl.BitSet V_0,
             class antlr.collections.impl.BitSet V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.1
    IL_0003:  add
    IL_0004:  newobj     instance void antlr.collections.impl.BitSet::.ctor(int32)
    IL_0009:  stloc.0
    IL_000a:  ldloc.0
    IL_000b:  ldarg.0
    IL_000c:  callvirt   instance void antlr.collections.impl.BitSet::'add'(int32)
    IL_0011:  nop
    IL_0012:  ldloc.0
    IL_0013:  stloc.1
    IL_0014:  br.s       IL_0016

    IL_0016:  ldloc.1
    IL_0017:  ret
  } // end of method BitSet::of

  .method public hidebysig newslot virtual 
          instance class antlr.collections.impl.BitSet 
          'or'(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.collections.impl.BitSet V_0,
             class antlr.collections.impl.BitSet V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance object antlr.collections.impl.BitSet::Clone()
    IL_0007:  castclass  antlr.collections.impl.BitSet
    IL_000c:  stloc.0
    IL_000d:  ldloc.0
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance void antlr.collections.impl.BitSet::orInPlace(class antlr.collections.impl.BitSet)
    IL_0014:  nop
    IL_0015:  ldloc.0
    IL_0016:  stloc.1
    IL_0017:  br.s       IL_0019

    IL_0019:  ldloc.1
    IL_001a:  ret
  } // end of method BitSet::'or'

  .method public hidebysig newslot virtual 
          instance void  orInPlace(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  cgt
    IL_0013:  ldc.i4.0
    IL_0014:  ceq
    IL_0016:  stloc.2
    IL_0017:  ldloc.2
    IL_0018:  brtrue.s   IL_002b

    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0022:  ldlen
    IL_0023:  conv.i4
    IL_0024:  call       instance void antlr.collections.impl.BitSet::setSize(int32)
    IL_0029:  nop
    IL_002a:  nop
    IL_002b:  ldarg.0
    IL_002c:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0031:  ldlen
    IL_0032:  conv.i4
    IL_0033:  ldarg.1
    IL_0034:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0039:  ldlen
    IL_003a:  conv.i4
    IL_003b:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_0040:  stloc.0
    IL_0041:  ldloc.0
    IL_0042:  ldc.i4.1
    IL_0043:  sub
    IL_0044:  stloc.1
    IL_0045:  br.s       IL_006d

    IL_0047:  nop
    IL_0048:  ldarg.0
    IL_0049:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_004e:  ldloc.1
    IL_004f:  ldelema    [mscorlib]System.Int64
    IL_0054:  dup
    IL_0055:  ldobj      [mscorlib]System.Int64
    IL_005a:  ldarg.1
    IL_005b:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0060:  ldloc.1
    IL_0061:  ldelem.i8
    IL_0062:  or
    IL_0063:  stobj      [mscorlib]System.Int64
    IL_0068:  nop
    IL_0069:  ldloc.1
    IL_006a:  ldc.i4.1
    IL_006b:  sub
    IL_006c:  stloc.1
    IL_006d:  ldloc.1
    IL_006e:  ldc.i4.0
    IL_006f:  clt
    IL_0071:  ldc.i4.0
    IL_0072:  ceq
    IL_0074:  stloc.2
    IL_0075:  ldloc.2
    IL_0076:  brtrue.s   IL_0047

    IL_0078:  ret
  } // end of method BitSet::orInPlace

  .method public hidebysig newslot virtual 
          instance void  remove(int32 el) cil managed
  {
    // 
    .maxstack  3
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  call       int32 antlr.collections.impl.BitSet::wordNumber(int32)
    IL_0007:  stloc.0
    IL_0008:  ldloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  clt
    IL_0013:  stloc.1
    IL_0014:  ldloc.1
    IL_0015:  brtrue.s   IL_0021

    IL_0017:  nop
    IL_0018:  ldarg.0
    IL_0019:  ldarg.1
    IL_001a:  callvirt   instance void antlr.collections.impl.BitSet::growToInclude(int32)
    IL_001f:  nop
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0027:  ldloc.0
    IL_0028:  ldelema    [mscorlib]System.Int64
    IL_002d:  dup
    IL_002e:  ldobj      [mscorlib]System.Int64
    IL_0033:  ldarg.1
    IL_0034:  call       int64 antlr.collections.impl.BitSet::bitMask(int32)
    IL_0039:  not
    IL_003a:  and
    IL_003b:  stobj      [mscorlib]System.Int64
    IL_0040:  ret
  } // end of method BitSet::remove

  .method private hidebysig instance void 
          setSize(int32 nwords) cil managed
  {
    // 
    .maxstack  5
    .locals init (int64[] V_0,
             int32 V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  newarr     [mscorlib]System.Int64
    IL_0007:  stloc.0
    IL_0008:  ldarg.1
    IL_0009:  ldarg.0
    IL_000a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_000f:  ldlen
    IL_0010:  conv.i4
    IL_0011:  call       int32 [mscorlib]System.Math::Min(int32,
                                                          int32)
    IL_0016:  stloc.1
    IL_0017:  ldarg.0
    IL_0018:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_001d:  ldc.i4.0
    IL_001e:  ldloc.0
    IL_001f:  ldc.i4.0
    IL_0020:  ldloc.1
    IL_0021:  call       void [mscorlib]System.Array::Copy(class [mscorlib]System.Array,
                                                           int32,
                                                           class [mscorlib]System.Array,
                                                           int32,
                                                           int32)
    IL_0026:  nop
    IL_0027:  ldarg.0
    IL_0028:  ldloc.0
    IL_0029:  stfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_002e:  ret
  } // end of method BitSet::setSize

  .method public hidebysig newslot virtual 
          instance int32  size() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.6
    IL_000a:  shl
    IL_000b:  stloc.0
    IL_000c:  br.s       IL_000e

    IL_000e:  ldloc.0
    IL_000f:  ret
  } // end of method BitSet::size

  .method public hidebysig newslot virtual 
          instance int32  lengthInLongWords() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  stloc.0
    IL_000a:  br.s       IL_000c

    IL_000c:  ldloc.0
    IL_000d:  ret
  } // end of method BitSet::lengthInLongWords

  .method public hidebysig newslot virtual 
          instance bool  subset(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0010

    IL_000c:  ldc.i4.0
    IL_000d:  stloc.0
    IL_000e:  br.s       IL_0020

    IL_0010:  ldarg.0
    IL_0011:  ldarg.1
    IL_0012:  callvirt   instance class antlr.collections.impl.BitSet antlr.collections.impl.BitSet::'and'(class antlr.collections.impl.BitSet)
    IL_0017:  ldarg.0
    IL_0018:  callvirt   instance bool [mscorlib]System.Object::Equals(object)
    IL_001d:  stloc.0
    IL_001e:  br.s       IL_0020

    IL_0020:  ldloc.0
    IL_0021:  ret
  } // end of method BitSet::subset

  .method public hidebysig newslot virtual 
          instance void  subtractInPlace(class antlr.collections.impl.BitSet a) cil managed
  {
    // 
    .maxstack  4
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_000e

    IL_000c:  br.s       IL_0056

    IL_000e:  ldc.i4.0
    IL_000f:  stloc.0
    IL_0010:  br.s       IL_0039

    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0019:  ldloc.0
    IL_001a:  ldelema    [mscorlib]System.Int64
    IL_001f:  dup
    IL_0020:  ldobj      [mscorlib]System.Int64
    IL_0025:  ldarg.1
    IL_0026:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_002b:  ldloc.0
    IL_002c:  ldelem.i8
    IL_002d:  not
    IL_002e:  and
    IL_002f:  stobj      [mscorlib]System.Int64
    IL_0034:  nop
    IL_0035:  ldloc.0
    IL_0036:  ldc.i4.1
    IL_0037:  add
    IL_0038:  stloc.0
    IL_0039:  ldloc.0
    IL_003a:  ldarg.0
    IL_003b:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0040:  ldlen
    IL_0041:  conv.i4
    IL_0042:  bge.s      IL_0051

    IL_0044:  ldloc.0
    IL_0045:  ldarg.1
    IL_0046:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_004b:  ldlen
    IL_004c:  conv.i4
    IL_004d:  clt
    IL_004f:  br.s       IL_0052

    IL_0051:  ldc.i4.0
    IL_0052:  stloc.1
    IL_0053:  ldloc.1
    IL_0054:  brtrue.s   IL_0012

    IL_0056:  ret
  } // end of method BitSet::subtractInPlace

  .method public hidebysig newslot virtual 
          instance int32[]  toArray() cil managed
  {
    // 
    .maxstack  4
    .locals init (int32[] V_0,
             int32 V_1,
             int32 V_2,
             int32[] V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  callvirt   instance int32 antlr.collections.impl.BitSet::degree()
    IL_0007:  newarr     [mscorlib]System.Int32
    IL_000c:  stloc.0
    IL_000d:  ldc.i4.0
    IL_000e:  stloc.1
    IL_000f:  ldc.i4.0
    IL_0010:  stloc.2
    IL_0011:  br.s       IL_0033

    IL_0013:  nop
    IL_0014:  ldarg.0
    IL_0015:  ldloc.2
    IL_0016:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_001b:  ldc.i4.0
    IL_001c:  ceq
    IL_001e:  stloc.s    V_4
    IL_0020:  ldloc.s    V_4
    IL_0022:  brtrue.s   IL_002e

    IL_0024:  nop
    IL_0025:  ldloc.0
    IL_0026:  ldloc.1
    IL_0027:  dup
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  ldloc.2
    IL_002c:  stelem.i4
    IL_002d:  nop
    IL_002e:  nop
    IL_002f:  ldloc.2
    IL_0030:  ldc.i4.1
    IL_0031:  add
    IL_0032:  stloc.2
    IL_0033:  ldloc.2
    IL_0034:  ldarg.0
    IL_0035:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_003a:  ldlen
    IL_003b:  conv.i4
    IL_003c:  ldc.i4.6
    IL_003d:  shl
    IL_003e:  clt
    IL_0040:  stloc.s    V_4
    IL_0042:  ldloc.s    V_4
    IL_0044:  brtrue.s   IL_0013

    IL_0046:  ldloc.0
    IL_0047:  stloc.3
    IL_0048:  br.s       IL_004a

    IL_004a:  ldloc.3
    IL_004b:  ret
  } // end of method BitSet::toArray

  .method public hidebysig newslot virtual 
          instance int64[]  toPackedArray() cil managed
  {
    // 
    .maxstack  1
    .locals init (int64[] V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0007:  stloc.0
    IL_0008:  br.s       IL_000a

    IL_000a:  ldloc.0
    IL_000b:  ret
  } // end of method BitSet::toPackedArray

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  2
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      ","
    IL_0007:  callvirt   instance string antlr.collections.impl.BitSet::ToString(string)
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method BitSet::ToString

  .method public hidebysig newslot virtual 
          instance string  ToString(string separator) cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  stloc.0
    IL_0007:  ldc.i4.0
    IL_0008:  stloc.1
    IL_0009:  br.s       IL_0048

    IL_000b:  nop
    IL_000c:  ldarg.0
    IL_000d:  ldloc.1
    IL_000e:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0013:  ldc.i4.0
    IL_0014:  ceq
    IL_0016:  stloc.3
    IL_0017:  ldloc.3
    IL_0018:  brtrue.s   IL_0043

    IL_001a:  nop
    IL_001b:  ldloc.0
    IL_001c:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0021:  ldc.i4.0
    IL_0022:  cgt
    IL_0024:  ldc.i4.0
    IL_0025:  ceq
    IL_0027:  stloc.3
    IL_0028:  ldloc.3
    IL_0029:  brtrue.s   IL_0035

    IL_002b:  nop
    IL_002c:  ldloc.0
    IL_002d:  ldarg.1
    IL_002e:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0033:  stloc.0
    IL_0034:  nop
    IL_0035:  ldloc.0
    IL_0036:  ldloc.1
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  call       string [mscorlib]System.String::Concat(object,
                                                                object)
    IL_0041:  stloc.0
    IL_0042:  nop
    IL_0043:  nop
    IL_0044:  ldloc.1
    IL_0045:  ldc.i4.1
    IL_0046:  add
    IL_0047:  stloc.1
    IL_0048:  ldloc.1
    IL_0049:  ldarg.0
    IL_004a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_004f:  ldlen
    IL_0050:  conv.i4
    IL_0051:  ldc.i4.6
    IL_0052:  shl
    IL_0053:  clt
    IL_0055:  stloc.3
    IL_0056:  ldloc.3
    IL_0057:  brtrue.s   IL_000b

    IL_0059:  ldloc.0
    IL_005a:  stloc.2
    IL_005b:  br.s       IL_005d

    IL_005d:  ldloc.2
    IL_005e:  ret
  } // end of method BitSet::ToString

  .method public hidebysig newslot virtual 
          instance string  ToString(string separator,
                                    class [mscorlib]System.Collections.ArrayList vocabulary) cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             int32 V_1,
             string V_2,
             bool V_3,
             object V_4,
             object[] V_5)
    IL_0000:  nop
    IL_0001:  ldarg.2
    IL_0002:  ldnull
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.3
    IL_0009:  ldloc.3
    IL_000a:  brtrue.s   IL_001a

    IL_000c:  nop
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  callvirt   instance string antlr.collections.impl.BitSet::ToString(string)
    IL_0014:  stloc.2
    IL_0015:  br         IL_0117

    IL_001a:  ldstr      ""
    IL_001f:  stloc.0
    IL_0020:  ldc.i4.0
    IL_0021:  stloc.1
    IL_0022:  br         IL_00ff

    IL_0027:  nop
    IL_0028:  ldarg.0
    IL_0029:  ldloc.1
    IL_002a:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_002f:  ldc.i4.0
    IL_0030:  ceq
    IL_0032:  stloc.3
    IL_0033:  ldloc.3
    IL_0034:  brtrue     IL_00fa

    IL_0039:  nop
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance int32 [mscorlib]System.String::get_Length()
    IL_0040:  ldc.i4.0
    IL_0041:  cgt
    IL_0043:  ldc.i4.0
    IL_0044:  ceq
    IL_0046:  stloc.3
    IL_0047:  ldloc.3
    IL_0048:  brtrue.s   IL_0054

    IL_004a:  nop
    IL_004b:  ldloc.0
    IL_004c:  ldarg.1
    IL_004d:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0052:  stloc.0
    IL_0053:  nop
    IL_0054:  ldloc.1
    IL_0055:  ldarg.2
    IL_0056:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::get_Count()
    IL_005b:  clt
    IL_005d:  stloc.3
    IL_005e:  ldloc.3
    IL_005f:  brtrue.s   IL_009a

    IL_0061:  nop
    IL_0062:  ldloc.0
    IL_0063:  stloc.s    V_4
    IL_0065:  ldc.i4.4
    IL_0066:  newarr     [mscorlib]System.Object
    IL_006b:  stloc.s    V_5
    IL_006d:  ldloc.s    V_5
    IL_006f:  ldc.i4.0
    IL_0070:  ldloc.s    V_4
    IL_0072:  stelem.ref
    IL_0073:  ldloc.s    V_5
    IL_0075:  ldc.i4.1
    IL_0076:  ldstr      "<bad element "
    IL_007b:  stelem.ref
    IL_007c:  ldloc.s    V_5
    IL_007e:  ldc.i4.2
    IL_007f:  ldloc.1
    IL_0080:  box        [mscorlib]System.Int32
    IL_0085:  stelem.ref
    IL_0086:  ldloc.s    V_5
    IL_0088:  ldc.i4.3
    IL_0089:  ldstr      ">"
    IL_008e:  stelem.ref
    IL_008f:  ldloc.s    V_5
    IL_0091:  call       string [mscorlib]System.String::Concat(object[])
    IL_0096:  stloc.0
    IL_0097:  nop
    IL_0098:  br.s       IL_00f9

    IL_009a:  ldarg.2
    IL_009b:  ldloc.1
    IL_009c:  callvirt   instance object [mscorlib]System.Collections.ArrayList::get_Item(int32)
    IL_00a1:  ldnull
    IL_00a2:  ceq
    IL_00a4:  ldc.i4.0
    IL_00a5:  ceq
    IL_00a7:  stloc.3
    IL_00a8:  ldloc.3
    IL_00a9:  brtrue.s   IL_00e4

    IL_00ab:  nop
    IL_00ac:  ldloc.0
    IL_00ad:  stloc.s    V_4
    IL_00af:  ldc.i4.4
    IL_00b0:  newarr     [mscorlib]System.Object
    IL_00b5:  stloc.s    V_5
    IL_00b7:  ldloc.s    V_5
    IL_00b9:  ldc.i4.0
    IL_00ba:  ldloc.s    V_4
    IL_00bc:  stelem.ref
    IL_00bd:  ldloc.s    V_5
    IL_00bf:  ldc.i4.1
    IL_00c0:  ldstr      "<"
    IL_00c5:  stelem.ref
    IL_00c6:  ldloc.s    V_5
    IL_00c8:  ldc.i4.2
    IL_00c9:  ldloc.1
    IL_00ca:  box        [mscorlib]System.Int32
    IL_00cf:  stelem.ref
    IL_00d0:  ldloc.s    V_5
    IL_00d2:  ldc.i4.3
    IL_00d3:  ldstr      ">"
    IL_00d8:  stelem.ref
    IL_00d9:  ldloc.s    V_5
    IL_00db:  call       string [mscorlib]System.String::Concat(object[])
    IL_00e0:  stloc.0
    IL_00e1:  nop
    IL_00e2:  br.s       IL_00f9

    IL_00e4:  nop
    IL_00e5:  ldloc.0
    IL_00e6:  ldarg.2
    IL_00e7:  ldloc.1
    IL_00e8:  callvirt   instance object [mscorlib]System.Collections.ArrayList::get_Item(int32)
    IL_00ed:  castclass  [mscorlib]System.String
    IL_00f2:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_00f7:  stloc.0
    IL_00f8:  nop
    IL_00f9:  nop
    IL_00fa:  nop
    IL_00fb:  ldloc.1
    IL_00fc:  ldc.i4.1
    IL_00fd:  add
    IL_00fe:  stloc.1
    IL_00ff:  ldloc.1
    IL_0100:  ldarg.0
    IL_0101:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0106:  ldlen
    IL_0107:  conv.i4
    IL_0108:  ldc.i4.6
    IL_0109:  shl
    IL_010a:  clt
    IL_010c:  stloc.3
    IL_010d:  ldloc.3
    IL_010e:  brtrue     IL_0027

    IL_0113:  ldloc.0
    IL_0114:  stloc.2
    IL_0115:  br.s       IL_0117

    IL_0117:  ldloc.2
    IL_0118:  ret
  } // end of method BitSet::ToString

  .method public hidebysig newslot virtual 
          instance string  toStringOfHalfWords() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             int32 V_1,
             int64 V_2,
             string V_3,
             bool V_4)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  callvirt   instance char[] [mscorlib]System.String::ToCharArray()
    IL_000b:  newobj     instance void [mscorlib]System.String::.ctor(char[])
    IL_0010:  stloc.0
    IL_0011:  ldc.i4.0
    IL_0012:  stloc.1
    IL_0013:  br.s       IL_0084

    IL_0015:  nop
    IL_0016:  ldloc.1
    IL_0017:  ldc.i4.0
    IL_0018:  ceq
    IL_001a:  stloc.s    V_4
    IL_001c:  ldloc.s    V_4
    IL_001e:  brtrue.s   IL_002c

    IL_0020:  ldloc.0
    IL_0021:  ldstr      ", "
    IL_0026:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_002b:  stloc.0
    IL_002c:  ldarg.0
    IL_002d:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0032:  ldloc.1
    IL_0033:  ldelem.i8
    IL_0034:  stloc.2
    IL_0035:  ldloc.2
    IL_0036:  ldc.i4.m1
    IL_0037:  conv.u8
    IL_0038:  and
    IL_0039:  stloc.2
    IL_003a:  ldloc.0
    IL_003b:  ldloc.2
    IL_003c:  box        [mscorlib]System.Int64
    IL_0041:  ldstr      "UL"
    IL_0046:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_004b:  stloc.0
    IL_004c:  ldloc.0
    IL_004d:  ldstr      ", "
    IL_0052:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0057:  stloc.0
    IL_0058:  ldarg.0
    IL_0059:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_005e:  ldloc.1
    IL_005f:  ldelem.i8
    IL_0060:  ldc.i4.s   32
    IL_0062:  call       int64 SupportClass::URShift(int64,
                                                     int32)
    IL_0067:  stloc.2
    IL_0068:  ldloc.2
    IL_0069:  ldc.i4.m1
    IL_006a:  conv.u8
    IL_006b:  and
    IL_006c:  stloc.2
    IL_006d:  ldloc.0
    IL_006e:  ldloc.2
    IL_006f:  box        [mscorlib]System.Int64
    IL_0074:  ldstr      "UL"
    IL_0079:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_007e:  stloc.0
    IL_007f:  nop
    IL_0080:  ldloc.1
    IL_0081:  ldc.i4.1
    IL_0082:  add
    IL_0083:  stloc.1
    IL_0084:  ldloc.1
    IL_0085:  ldarg.0
    IL_0086:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_008b:  ldlen
    IL_008c:  conv.i4
    IL_008d:  clt
    IL_008f:  stloc.s    V_4
    IL_0091:  ldloc.s    V_4
    IL_0093:  brtrue.s   IL_0015

    IL_0095:  ldloc.0
    IL_0096:  stloc.3
    IL_0097:  br.s       IL_0099

    IL_0099:  ldloc.3
    IL_009a:  ret
  } // end of method BitSet::toStringOfHalfWords

  .method public hidebysig newslot virtual 
          instance string  toStringOfWords() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  ldstr      ""
    IL_0006:  callvirt   instance char[] [mscorlib]System.String::ToCharArray()
    IL_000b:  newobj     instance void [mscorlib]System.String::.ctor(char[])
    IL_0010:  stloc.0
    IL_0011:  ldc.i4.0
    IL_0012:  stloc.1
    IL_0013:  br.s       IL_0048

    IL_0015:  nop
    IL_0016:  ldloc.1
    IL_0017:  ldc.i4.0
    IL_0018:  ceq
    IL_001a:  stloc.3
    IL_001b:  ldloc.3
    IL_001c:  brtrue.s   IL_002a

    IL_001e:  ldloc.0
    IL_001f:  ldstr      ", "
    IL_0024:  call       string [mscorlib]System.String::Concat(string,
                                                                string)
    IL_0029:  stloc.0
    IL_002a:  ldloc.0
    IL_002b:  ldarg.0
    IL_002c:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_0031:  ldloc.1
    IL_0032:  ldelem.i8
    IL_0033:  box        [mscorlib]System.Int64
    IL_0038:  ldstr      "L"
    IL_003d:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_0042:  stloc.0
    IL_0043:  nop
    IL_0044:  ldloc.1
    IL_0045:  ldc.i4.1
    IL_0046:  add
    IL_0047:  stloc.1
    IL_0048:  ldloc.1
    IL_0049:  ldarg.0
    IL_004a:  ldfld      int64[] antlr.collections.impl.BitSet::dataBits
    IL_004f:  ldlen
    IL_0050:  conv.i4
    IL_0051:  clt
    IL_0053:  stloc.3
    IL_0054:  ldloc.3
    IL_0055:  brtrue.s   IL_0015

    IL_0057:  ldloc.0
    IL_0058:  stloc.2
    IL_0059:  br.s       IL_005b

    IL_005b:  ldloc.2
    IL_005c:  ret
  } // end of method BitSet::toStringOfWords

  .method private hidebysig static int32 
          wordNumber(int32 bit) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.6
    IL_0003:  shr
    IL_0004:  stloc.0
    IL_0005:  br.s       IL_0007

    IL_0007:  ldloc.0
    IL_0008:  ret
  } // end of method BitSet::wordNumber

  .method private hidebysig specialname rtspecialname static 
          void  .cctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldc.i4.s   63
    IL_0002:  stsfld     int32 antlr.collections.impl.BitSet::MOD_MASK
    IL_0007:  ret
  } // end of method BitSet::.cctor

} // end of class antlr.collections.impl.BitSet

.class public auto ansi beforefieldinit antlr.TokenStreamRewriteEngine
       extends [mscorlib]System.Object
       implements antlr.TokenStream
{
  .class auto ansi nested family beforefieldinit RewriteOperation
         extends [mscorlib]System.Object
  {
    .field famorassem int32 index
    .field famorassem string text
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor(int32 index,
                                 string text) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  nop
      IL_0007:  nop
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  stfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_000f:  ldarg.0
      IL_0010:  ldarg.2
      IL_0011:  stfld      string antlr.TokenStreamRewriteEngine/RewriteOperation::text
      IL_0016:  nop
      IL_0017:  ret
    } // end of method RewriteOperation::.ctor

    .method public hidebysig newslot virtual 
            instance int32  execute(class [mscorlib]System.Text.StringBuilder buf) cil managed
    {
      // 
      .maxstack  1
      .locals init (int32 V_0)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_0007:  stloc.0
      IL_0008:  br.s       IL_000a

      IL_000a:  ldloc.0
      IL_000b:  ret
    } // end of method RewriteOperation::execute

  } // end of class RewriteOperation

  .class auto ansi nested family beforefieldinit InsertBeforeOp
         extends antlr.TokenStreamRewriteEngine/RewriteOperation
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 index,
                                 string text) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void antlr.TokenStreamRewriteEngine/RewriteOperation::.ctor(int32,
                                                                                                string)
      IL_0008:  nop
      IL_0009:  nop
      IL_000a:  nop
      IL_000b:  ret
    } // end of method InsertBeforeOp::.ctor

    .method public hidebysig virtual instance int32 
            execute(class [mscorlib]System.Text.StringBuilder buf) cil managed
    {
      // 
      .maxstack  2
      .locals init (int32 V_0)
      IL_0000:  nop
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldfld      string antlr.TokenStreamRewriteEngine/RewriteOperation::text
      IL_0008:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
      IL_000d:  pop
      IL_000e:  ldarg.0
      IL_000f:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_0014:  stloc.0
      IL_0015:  br.s       IL_0017

      IL_0017:  ldloc.0
      IL_0018:  ret
    } // end of method InsertBeforeOp::execute

  } // end of class InsertBeforeOp

  .class auto ansi nested family beforefieldinit ReplaceOp
         extends antlr.TokenStreamRewriteEngine/RewriteOperation
  {
    .field family int32 lastIndex
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 from,
                                 int32 'to',
                                 string text) cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.3
      IL_0003:  call       instance void antlr.TokenStreamRewriteEngine/RewriteOperation::.ctor(int32,
                                                                                                string)
      IL_0008:  nop
      IL_0009:  nop
      IL_000a:  ldarg.0
      IL_000b:  ldarg.2
      IL_000c:  stfld      int32 antlr.TokenStreamRewriteEngine/ReplaceOp::lastIndex
      IL_0011:  nop
      IL_0012:  ret
    } // end of method ReplaceOp::.ctor

    .method public hidebysig virtual instance int32 
            execute(class [mscorlib]System.Text.StringBuilder buf) cil managed
    {
      // 
      .maxstack  2
      .locals init (int32 V_0,
               bool V_1)
      IL_0000:  nop
      IL_0001:  ldarg.0
      IL_0002:  ldfld      string antlr.TokenStreamRewriteEngine/RewriteOperation::text
      IL_0007:  ldnull
      IL_0008:  ceq
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  brtrue.s   IL_001d

      IL_000e:  nop
      IL_000f:  ldarg.1
      IL_0010:  ldarg.0
      IL_0011:  ldfld      string antlr.TokenStreamRewriteEngine/RewriteOperation::text
      IL_0016:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
      IL_001b:  pop
      IL_001c:  nop
      IL_001d:  ldarg.0
      IL_001e:  ldfld      int32 antlr.TokenStreamRewriteEngine/ReplaceOp::lastIndex
      IL_0023:  ldc.i4.1
      IL_0024:  add
      IL_0025:  stloc.0
      IL_0026:  br.s       IL_0028

      IL_0028:  ldloc.0
      IL_0029:  ret
    } // end of method ReplaceOp::execute

  } // end of class ReplaceOp

  .class auto ansi nested family beforefieldinit DeleteOp
         extends antlr.TokenStreamRewriteEngine/ReplaceOp
  {
    .method public hidebysig specialname rtspecialname 
            instance void  .ctor(int32 from,
                                 int32 'to') cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldnull
      IL_0004:  call       instance void antlr.TokenStreamRewriteEngine/ReplaceOp::.ctor(int32,
                                                                                         int32,
                                                                                         string)
      IL_0009:  nop
      IL_000a:  nop
      IL_000b:  nop
      IL_000c:  ret
    } // end of method DeleteOp::.ctor

  } // end of class DeleteOp

  .class auto ansi nested public beforefieldinit RewriteOperationComparer
         extends [mscorlib]System.Object
         implements [mscorlib]System.Collections.IComparer
  {
    .field public static initonly class antlr.TokenStreamRewriteEngine/RewriteOperationComparer Default
    .method public hidebysig newslot virtual 
            instance int32  Compare(object o1,
                                    object o2) cil managed
    {
      // 
      .maxstack  2
      .locals init (class antlr.TokenStreamRewriteEngine/RewriteOperation V_0,
               class antlr.TokenStreamRewriteEngine/RewriteOperation V_1,
               int32 V_2,
               bool V_3)
      IL_0000:  nop
      IL_0001:  ldarg.1
      IL_0002:  castclass  antlr.TokenStreamRewriteEngine/RewriteOperation
      IL_0007:  stloc.0
      IL_0008:  ldarg.2
      IL_0009:  castclass  antlr.TokenStreamRewriteEngine/RewriteOperation
      IL_000e:  stloc.1
      IL_000f:  ldloc.0
      IL_0010:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_0015:  ldloc.1
      IL_0016:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_001b:  clt
      IL_001d:  ldc.i4.0
      IL_001e:  ceq
      IL_0020:  stloc.3
      IL_0021:  ldloc.3
      IL_0022:  brtrue.s   IL_0028

      IL_0024:  ldc.i4.m1
      IL_0025:  stloc.2
      IL_0026:  br.s       IL_0045

      IL_0028:  ldloc.0
      IL_0029:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_002e:  ldloc.1
      IL_002f:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
      IL_0034:  cgt
      IL_0036:  ldc.i4.0
      IL_0037:  ceq
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue.s   IL_0041

      IL_003d:  ldc.i4.1
      IL_003e:  stloc.2
      IL_003f:  br.s       IL_0045

      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  br.s       IL_0045

      IL_0045:  ldloc.2
      IL_0046:  ret
    } // end of method RewriteOperationComparer::Compare

    .method public hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method RewriteOperationComparer::.ctor

    .method private hidebysig specialname rtspecialname static 
            void  .cctor() cil managed
    {
      // 
      .maxstack  8
      IL_0000:  newobj     instance void antlr.TokenStreamRewriteEngine/RewriteOperationComparer::.ctor()
      IL_0005:  stsfld     class antlr.TokenStreamRewriteEngine/RewriteOperationComparer antlr.TokenStreamRewriteEngine/RewriteOperationComparer::Default
      IL_000a:  ret
    } // end of method RewriteOperationComparer::.cctor

  } // end of class RewriteOperationComparer

  .field public static literal int32 MIN_TOKEN_INDEX = int32(0x00000000)
  .field public static literal string DEFAULT_PROGRAM_NAME = "default"
  .field public static literal int32 PROGRAM_INIT_SIZE = int32(0x00000064)
  .field family class [mscorlib]System.Collections.IList tokens
  .field family class [mscorlib]System.Collections.IDictionary programs
  .field family class [mscorlib]System.Collections.IDictionary lastRewriteTokenIndexes
  .field family int32 index
  .field family class antlr.TokenStream 'stream'
  .field family class antlr.collections.impl.BitSet discardMask
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream upstream) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4     0x3e8
    IL_0007:  call       instance void antlr.TokenStreamRewriteEngine::.ctor(class antlr.TokenStream,
                                                                             int32)
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(class antlr.TokenStream upstream,
                               int32 initialSize) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0007:  ldarg.0
    IL_0008:  ldnull
    IL_0009:  stfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::lastRewriteTokenIndexes
    IL_000e:  ldarg.0
    IL_000f:  ldc.i4.0
    IL_0010:  stfld      int32 antlr.TokenStreamRewriteEngine::index
    IL_0015:  ldarg.0
    IL_0016:  newobj     instance void antlr.collections.impl.BitSet::.ctor()
    IL_001b:  stfld      class antlr.collections.impl.BitSet antlr.TokenStreamRewriteEngine::discardMask
    IL_0020:  ldarg.0
    IL_0021:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0026:  nop
    IL_0027:  nop
    IL_0028:  ldarg.0
    IL_0029:  ldarg.1
    IL_002a:  stfld      class antlr.TokenStream antlr.TokenStreamRewriteEngine::'stream'
    IL_002f:  ldarg.0
    IL_0030:  ldarg.2
    IL_0031:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor(int32)
    IL_0036:  stfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_003b:  ldarg.0
    IL_003c:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor()
    IL_0041:  stfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0046:  ldarg.0
    IL_0047:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_004c:  ldstr      "default"
    IL_0051:  ldc.i4.s   100
    IL_0053:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor(int32)
    IL_0058:  callvirt   instance void [mscorlib]System.Collections.IDictionary::set_Item(object,
                                                                                          object)
    IL_005d:  nop
    IL_005e:  ldarg.0
    IL_005f:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor()
    IL_0064:  stfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::lastRewriteTokenIndexes
    IL_0069:  nop
    IL_006a:  ret
  } // end of method TokenStreamRewriteEngine::.ctor

  .method public hidebysig newslot virtual final 
          instance class antlr.IToken  nextToken() cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.TokenWithIndex V_0,
             class antlr.IToken V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  nop
    IL_0002:  ldarg.0
    IL_0003:  ldfld      class antlr.TokenStream antlr.TokenStreamRewriteEngine::'stream'
    IL_0008:  callvirt   instance class antlr.IToken antlr.TokenStream::nextToken()
    IL_000d:  castclass  antlr.TokenWithIndex
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  ceq
    IL_0017:  stloc.2
    IL_0018:  ldloc.2
    IL_0019:  brtrue.s   IL_0054

    IL_001b:  nop
    IL_001c:  ldloc.0
    IL_001d:  ldarg.0
    IL_001e:  ldfld      int32 antlr.TokenStreamRewriteEngine::index
    IL_0023:  callvirt   instance void antlr.TokenWithIndex::setIndex(int32)
    IL_0028:  nop
    IL_0029:  ldloc.0
    IL_002a:  callvirt   instance int32 antlr.Token::get_Type()
    IL_002f:  ldc.i4.1
    IL_0030:  ceq
    IL_0032:  stloc.2
    IL_0033:  ldloc.2
    IL_0034:  brtrue.s   IL_0045

    IL_0036:  nop
    IL_0037:  ldarg.0
    IL_0038:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_003d:  ldloc.0
    IL_003e:  callvirt   instance int32 [mscorlib]System.Collections.IList::Add(object)
    IL_0043:  pop
    IL_0044:  nop
    IL_0045:  ldarg.0
    IL_0046:  dup
    IL_0047:  ldfld      int32 antlr.TokenStreamRewriteEngine::index
    IL_004c:  ldc.i4.1
    IL_004d:  add
    IL_004e:  stfld      int32 antlr.TokenStreamRewriteEngine::index
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldloc.0
    IL_0056:  brfalse.s  IL_006b

    IL_0058:  ldarg.0
    IL_0059:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamRewriteEngine::discardMask
    IL_005e:  ldloc.0
    IL_005f:  callvirt   instance int32 antlr.Token::get_Type()
    IL_0064:  callvirt   instance bool antlr.collections.impl.BitSet::member(int32)
    IL_0069:  br.s       IL_006c

    IL_006b:  ldc.i4.0
    IL_006c:  stloc.2
    IL_006d:  ldloc.2
    IL_006e:  brtrue.s   IL_0001

    IL_0070:  ldloc.0
    IL_0071:  stloc.1
    IL_0072:  br.s       IL_0074

    IL_0074:  ldloc.1
    IL_0075:  ret
  } // end of method TokenStreamRewriteEngine::nextToken

  .method public hidebysig instance void 
          rollback(int32 instructionIndex) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  call       instance void antlr.TokenStreamRewriteEngine::rollback(string,
                                                                                int32)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TokenStreamRewriteEngine::rollback

  .method public hidebysig instance void 
          rollback(string programName,
                   int32 instructionIndex) cil managed
  {
    // 
    .maxstack  5
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.IDictionary::get_Item(object)
    IL_000d:  castclass  [mscorlib]System.Collections.ArrayList
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  ceq
    IL_0017:  stloc.1
    IL_0018:  ldloc.1
    IL_0019:  brtrue.s   IL_0032

    IL_001b:  nop
    IL_001c:  ldarg.0
    IL_001d:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0022:  ldarg.1
    IL_0023:  ldloc.0
    IL_0024:  ldc.i4.0
    IL_0025:  ldarg.2
    IL_0026:  callvirt   instance class [mscorlib]System.Collections.ArrayList [mscorlib]System.Collections.ArrayList::GetRange(int32,
                                                                                                                                int32)
    IL_002b:  callvirt   instance void [mscorlib]System.Collections.IDictionary::set_Item(object,
                                                                                          object)
    IL_0030:  nop
    IL_0031:  nop
    IL_0032:  ret
  } // end of method TokenStreamRewriteEngine::rollback

  .method public hidebysig instance void 
          deleteProgram() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  call       instance void antlr.TokenStreamRewriteEngine::deleteProgram(string)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method TokenStreamRewriteEngine::deleteProgram

  .method public hidebysig instance void 
          deleteProgram(string programName) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldc.i4.0
    IL_0004:  call       instance void antlr.TokenStreamRewriteEngine::rollback(string,
                                                                                int32)
    IL_0009:  nop
    IL_000a:  ret
  } // end of method TokenStreamRewriteEngine::deleteProgram

  .method family hidebysig instance void 
          addToSortedRewriteList(class antlr.TokenStreamRewriteEngine/RewriteOperation op) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  call       instance void antlr.TokenStreamRewriteEngine::addToSortedRewriteList(string,
                                                                                              class antlr.TokenStreamRewriteEngine/RewriteOperation)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TokenStreamRewriteEngine::addToSortedRewriteList

  .method family hidebysig instance void 
          addToSortedRewriteList(string programName,
                                 class antlr.TokenStreamRewriteEngine/RewriteOperation op) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.ArrayList V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  call       instance class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::getProgram(string)
    IL_0008:  castclass  [mscorlib]System.Collections.ArrayList
    IL_000d:  stloc.0
    IL_000e:  ldarg.2
    IL_000f:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
    IL_0014:  ldarg.0
    IL_0015:  ldarg.1
    IL_0016:  call       instance int32 antlr.TokenStreamRewriteEngine::getLastRewriteTokenIndex(string)
    IL_001b:  clt
    IL_001d:  stloc.2
    IL_001e:  ldloc.2
    IL_001f:  brtrue.s   IL_003a

    IL_0021:  nop
    IL_0022:  ldloc.0
    IL_0023:  ldarg.2
    IL_0024:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    IL_0029:  pop
    IL_002a:  ldarg.0
    IL_002b:  ldarg.1
    IL_002c:  ldarg.2
    IL_002d:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
    IL_0032:  call       instance void antlr.TokenStreamRewriteEngine::setLastRewriteTokenIndex(string,
                                                                                                int32)
    IL_0037:  nop
    IL_0038:  br.s       IL_0060

    IL_003a:  ldloc.0
    IL_003b:  ldarg.2
    IL_003c:  ldsfld     class antlr.TokenStreamRewriteEngine/RewriteOperationComparer antlr.TokenStreamRewriteEngine/RewriteOperationComparer::Default
    IL_0041:  callvirt   instance int32 [mscorlib]System.Collections.ArrayList::BinarySearch(object,
                                                                                             class [mscorlib]System.Collections.IComparer)
    IL_0046:  stloc.1
    IL_0047:  ldloc.1
    IL_0048:  ldc.i4.0
    IL_0049:  clt
    IL_004b:  ldc.i4.0
    IL_004c:  ceq
    IL_004e:  stloc.2
    IL_004f:  ldloc.2
    IL_0050:  brtrue.s   IL_0060

    IL_0052:  nop
    IL_0053:  ldloc.0
    IL_0054:  ldloc.1
    IL_0055:  neg
    IL_0056:  ldc.i4.1
    IL_0057:  sub
    IL_0058:  ldarg.2
    IL_0059:  callvirt   instance void [mscorlib]System.Collections.ArrayList::Insert(int32,
                                                                                      object)
    IL_005e:  nop
    IL_005f:  nop
    IL_0060:  ret
  } // end of method TokenStreamRewriteEngine::addToSortedRewriteList

  .method public hidebysig instance void 
          insertAfter(class antlr.IToken t,
                      string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::insertAfter(string,
                                                                                   class antlr.IToken,
                                                                                   string)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::insertAfter

  .method public hidebysig instance void 
          insertAfter(int32 index,
                      string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::insertAfter(string,
                                                                                   int32,
                                                                                   string)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::insertAfter

  .method public hidebysig instance void 
          insertAfter(string programName,
                      class antlr.IToken t,
                      string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  castclass  antlr.TokenWithIndex
    IL_0009:  callvirt   instance int32 antlr.TokenWithIndex::getIndex()
    IL_000e:  ldarg.3
    IL_000f:  call       instance void antlr.TokenStreamRewriteEngine::insertAfter(string,
                                                                                   int32,
                                                                                   string)
    IL_0014:  nop
    IL_0015:  ret
  } // end of method TokenStreamRewriteEngine::insertAfter

  .method public hidebysig instance void 
          insertAfter(string programName,
                      int32 index,
                      string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldc.i4.1
    IL_0005:  add
    IL_0006:  ldarg.3
    IL_0007:  call       instance void antlr.TokenStreamRewriteEngine::insertBefore(string,
                                                                                    int32,
                                                                                    string)
    IL_000c:  nop
    IL_000d:  ret
  } // end of method TokenStreamRewriteEngine::insertAfter

  .method public hidebysig instance void 
          insertBefore(class antlr.IToken t,
                       string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::insertBefore(string,
                                                                                    class antlr.IToken,
                                                                                    string)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::insertBefore

  .method public hidebysig instance void 
          insertBefore(int32 index,
                       string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::insertBefore(string,
                                                                                    int32,
                                                                                    string)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::insertBefore

  .method public hidebysig instance void 
          insertBefore(string programName,
                       class antlr.IToken t,
                       string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  castclass  antlr.TokenWithIndex
    IL_0009:  callvirt   instance int32 antlr.TokenWithIndex::getIndex()
    IL_000e:  ldarg.3
    IL_000f:  call       instance void antlr.TokenStreamRewriteEngine::insertBefore(string,
                                                                                    int32,
                                                                                    string)
    IL_0014:  nop
    IL_0015:  ret
  } // end of method TokenStreamRewriteEngine::insertBefore

  .method public hidebysig instance void 
          insertBefore(string programName,
                       int32 index,
                       string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  newobj     instance void antlr.TokenStreamRewriteEngine/InsertBeforeOp::.ctor(int32,
                                                                                            string)
    IL_000a:  call       instance void antlr.TokenStreamRewriteEngine::addToSortedRewriteList(string,
                                                                                              class antlr.TokenStreamRewriteEngine/RewriteOperation)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::insertBefore

  .method public hidebysig instance void 
          replace(int32 index,
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               int32,
                                                                               int32,
                                                                               string)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          replace(int32 from,
                  int32 'to',
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  ldarg.3
    IL_000a:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               int32,
                                                                               int32,
                                                                               string)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          replace(class antlr.IToken indexT,
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.1
    IL_0009:  ldarg.2
    IL_000a:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               class antlr.IToken,
                                                                               class antlr.IToken,
                                                                               string)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          replace(class antlr.IToken from,
                  class antlr.IToken 'to',
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  ldarg.3
    IL_000a:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               class antlr.IToken,
                                                                               class antlr.IToken,
                                                                               string)
    IL_000f:  nop
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          replace(string programName,
                  int32 from,
                  int32 'to',
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldarg.s    text
    IL_0006:  newobj     instance void antlr.TokenStreamRewriteEngine/ReplaceOp::.ctor(int32,
                                                                                       int32,
                                                                                       string)
    IL_000b:  call       instance void antlr.TokenStreamRewriteEngine::addToSortedRewriteList(class antlr.TokenStreamRewriteEngine/RewriteOperation)
    IL_0010:  nop
    IL_0011:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          replace(string programName,
                  class antlr.IToken from,
                  class antlr.IToken 'to',
                  string text) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  castclass  antlr.TokenWithIndex
    IL_0009:  callvirt   instance int32 antlr.TokenWithIndex::getIndex()
    IL_000e:  ldarg.3
    IL_000f:  castclass  antlr.TokenWithIndex
    IL_0014:  callvirt   instance int32 antlr.TokenWithIndex::getIndex()
    IL_0019:  ldarg.s    text
    IL_001b:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               int32,
                                                                               int32,
                                                                               string)
    IL_0020:  nop
    IL_0021:  ret
  } // end of method TokenStreamRewriteEngine::replace

  .method public hidebysig instance void 
          delete(int32 index) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::delete(string,
                                                                              int32,
                                                                              int32)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          delete(int32 from,
                 int32 'to') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::delete(string,
                                                                              int32,
                                                                              int32)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          delete(class antlr.IToken indexT) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.1
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::delete(string,
                                                                              class antlr.IToken,
                                                                              class antlr.IToken)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          delete(class antlr.IToken from,
                 class antlr.IToken 'to') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance void antlr.TokenStreamRewriteEngine::delete(string,
                                                                              class antlr.IToken,
                                                                              class antlr.IToken)
    IL_000e:  nop
    IL_000f:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          delete(string programName,
                 int32 from,
                 int32 'to') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  ldnull
    IL_0006:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               int32,
                                                                               int32,
                                                                               string)
    IL_000b:  nop
    IL_000c:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          delete(string programName,
                 class antlr.IToken from,
                 class antlr.IToken 'to') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldarg.2
    IL_0004:  ldarg.3
    IL_0005:  ldnull
    IL_0006:  call       instance void antlr.TokenStreamRewriteEngine::replace(string,
                                                                               class antlr.IToken,
                                                                               class antlr.IToken,
                                                                               string)
    IL_000b:  nop
    IL_000c:  ret
  } // end of method TokenStreamRewriteEngine::delete

  .method public hidebysig instance void 
          discard(int32 ttype) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.collections.impl.BitSet antlr.TokenStreamRewriteEngine::discardMask
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance void antlr.collections.impl.BitSet::'add'(int32)
    IL_000d:  nop
    IL_000e:  ret
  } // end of method TokenStreamRewriteEngine::discard

  .method public hidebysig instance class antlr.TokenWithIndex 
          getToken(int32 i) cil managed
  {
    // 
    .maxstack  2
    .locals init (class antlr.TokenWithIndex V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.IList::get_Item(int32)
    IL_000d:  castclass  antlr.TokenWithIndex
    IL_0012:  stloc.0
    IL_0013:  br.s       IL_0015

    IL_0015:  ldloc.0
    IL_0016:  ret
  } // end of method TokenStreamRewriteEngine::getToken

  .method public hidebysig instance int32 
          getTokenStreamSize() cil managed
  {
    // 
    .maxstack  1
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_0007:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::getTokenStreamSize

  .method public hidebysig instance string 
          ToOriginalString() cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  ldarg.0
    IL_0004:  call       instance int32 antlr.TokenStreamRewriteEngine::getTokenStreamSize()
    IL_0009:  ldc.i4.1
    IL_000a:  sub
    IL_000b:  call       instance string antlr.TokenStreamRewriteEngine::ToOriginalString(int32,
                                                                                          int32)
    IL_0010:  stloc.0
    IL_0011:  br.s       IL_0013

    IL_0013:  ldloc.0
    IL_0014:  ret
  } // end of method TokenStreamRewriteEngine::ToOriginalString

  .method public hidebysig instance string 
          ToOriginalString(int32 start,
                           int32 end) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  stloc.1
    IL_0009:  br.s       IL_0024

    IL_000b:  nop
    IL_000c:  ldloc.0
    IL_000d:  ldarg.0
    IL_000e:  ldloc.1
    IL_000f:  call       instance class antlr.TokenWithIndex antlr.TokenStreamRewriteEngine::getToken(int32)
    IL_0014:  callvirt   instance string antlr.Token::getText()
    IL_0019:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_001e:  pop
    IL_001f:  nop
    IL_0020:  ldloc.1
    IL_0021:  ldc.i4.1
    IL_0022:  add
    IL_0023:  stloc.1
    IL_0024:  ldloc.1
    IL_0025:  ldc.i4.0
    IL_0026:  blt.s      IL_003c

    IL_0028:  ldloc.1
    IL_0029:  ldarg.2
    IL_002a:  bgt.s      IL_003c

    IL_002c:  ldloc.1
    IL_002d:  ldarg.0
    IL_002e:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_0033:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_0038:  clt
    IL_003a:  br.s       IL_003d

    IL_003c:  ldc.i4.0
    IL_003d:  stloc.3
    IL_003e:  ldloc.3
    IL_003f:  brtrue.s   IL_000b

    IL_0041:  ldloc.0
    IL_0042:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0047:  stloc.2
    IL_0048:  br.s       IL_004a

    IL_004a:  ldloc.2
    IL_004b:  ret
  } // end of method TokenStreamRewriteEngine::ToOriginalString

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  ldarg.0
    IL_0004:  call       instance int32 antlr.TokenStreamRewriteEngine::getTokenStreamSize()
    IL_0009:  call       instance string antlr.TokenStreamRewriteEngine::ToString(int32,
                                                                                  int32)
    IL_000e:  stloc.0
    IL_000f:  br.s       IL_0011

    IL_0011:  ldloc.0
    IL_0012:  ret
  } // end of method TokenStreamRewriteEngine::ToString

  .method public hidebysig instance string 
          ToString(string programName) cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  ldc.i4.0
    IL_0004:  ldarg.0
    IL_0005:  call       instance int32 antlr.TokenStreamRewriteEngine::getTokenStreamSize()
    IL_000a:  call       instance string antlr.TokenStreamRewriteEngine::ToString(string,
                                                                                  int32,
                                                                                  int32)
    IL_000f:  stloc.0
    IL_0010:  br.s       IL_0012

    IL_0012:  ldloc.0
    IL_0013:  ret
  } // end of method TokenStreamRewriteEngine::ToString

  .method public hidebysig instance string 
          ToString(int32 start,
                   int32 end) cil managed
  {
    // 
    .maxstack  4
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  call       instance string antlr.TokenStreamRewriteEngine::ToString(string,
                                                                                  int32,
                                                                                  int32)
    IL_000e:  stloc.0
    IL_000f:  br.s       IL_0011

    IL_0011:  ldloc.0
    IL_0012:  ret
  } // end of method TokenStreamRewriteEngine::ToString

  .method public hidebysig instance string 
          ToString(string programName,
                   int32 start,
                   int32 end) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.IList V_0,
             class [mscorlib]System.Text.StringBuilder V_1,
             int32 V_2,
             int32 V_3,
             class antlr.TokenStreamRewriteEngine/RewriteOperation V_4,
             int32 V_5,
             string V_6,
             bool V_7)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.IDictionary::get_Item(object)
    IL_000d:  castclass  [mscorlib]System.Collections.IList
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  ceq
    IL_0017:  ldc.i4.0
    IL_0018:  ceq
    IL_001a:  stloc.s    V_7
    IL_001c:  ldloc.s    V_7
    IL_001e:  brtrue.s   IL_0029

    IL_0020:  nop
    IL_0021:  ldnull
    IL_0022:  stloc.s    V_6
    IL_0024:  br         IL_0132

    IL_0029:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_002e:  stloc.1
    IL_002f:  ldc.i4.0
    IL_0030:  stloc.2
    IL_0031:  ldarg.2
    IL_0032:  stloc.3
    IL_0033:  br         IL_00d1

    IL_0038:  nop
    IL_0039:  ldloc.2
    IL_003a:  ldloc.0
    IL_003b:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_0040:  clt
    IL_0042:  ldc.i4.0
    IL_0043:  ceq
    IL_0045:  stloc.s    V_7
    IL_0047:  ldloc.s    V_7
    IL_0049:  brtrue.s   IL_00aa

    IL_004b:  nop
    IL_004c:  ldloc.0
    IL_004d:  ldloc.2
    IL_004e:  callvirt   instance object [mscorlib]System.Collections.IList::get_Item(int32)
    IL_0053:  castclass  antlr.TokenStreamRewriteEngine/RewriteOperation
    IL_0058:  stloc.s    V_4
    IL_005a:  br.s       IL_008d

    IL_005c:  nop
    IL_005d:  ldloc.s    V_4
    IL_005f:  ldloc.1
    IL_0060:  callvirt   instance int32 antlr.TokenStreamRewriteEngine/RewriteOperation::execute(class [mscorlib]System.Text.StringBuilder)
    IL_0065:  stloc.3
    IL_0066:  ldloc.2
    IL_0067:  ldc.i4.1
    IL_0068:  add
    IL_0069:  stloc.2
    IL_006a:  ldloc.2
    IL_006b:  ldloc.0
    IL_006c:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_0071:  clt
    IL_0073:  ldc.i4.0
    IL_0074:  ceq
    IL_0076:  stloc.s    V_7
    IL_0078:  ldloc.s    V_7
    IL_007a:  brtrue.s   IL_008c

    IL_007c:  nop
    IL_007d:  ldloc.0
    IL_007e:  ldloc.2
    IL_007f:  callvirt   instance object [mscorlib]System.Collections.IList::get_Item(int32)
    IL_0084:  castclass  antlr.TokenStreamRewriteEngine/RewriteOperation
    IL_0089:  stloc.s    V_4
    IL_008b:  nop
    IL_008c:  nop
    IL_008d:  ldloc.3
    IL_008e:  ldloc.s    V_4
    IL_0090:  ldfld      int32 antlr.TokenStreamRewriteEngine/RewriteOperation::index
    IL_0095:  bne.un.s   IL_00a2

    IL_0097:  ldloc.2
    IL_0098:  ldloc.0
    IL_0099:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_009e:  clt
    IL_00a0:  br.s       IL_00a3

    IL_00a2:  ldc.i4.0
    IL_00a3:  stloc.s    V_7
    IL_00a5:  ldloc.s    V_7
    IL_00a7:  brtrue.s   IL_005c

    IL_00a9:  nop
    IL_00aa:  ldloc.3
    IL_00ab:  ldarg.3
    IL_00ac:  clt
    IL_00ae:  ldc.i4.0
    IL_00af:  ceq
    IL_00b1:  stloc.s    V_7
    IL_00b3:  ldloc.s    V_7
    IL_00b5:  brtrue.s   IL_00d0

    IL_00b7:  nop
    IL_00b8:  ldloc.1
    IL_00b9:  ldarg.0
    IL_00ba:  ldloc.3
    IL_00bb:  call       instance class antlr.TokenWithIndex antlr.TokenStreamRewriteEngine::getToken(int32)
    IL_00c0:  callvirt   instance string antlr.Token::getText()
    IL_00c5:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00ca:  pop
    IL_00cb:  ldloc.3
    IL_00cc:  ldc.i4.1
    IL_00cd:  add
    IL_00ce:  stloc.3
    IL_00cf:  nop
    IL_00d0:  nop
    IL_00d1:  ldloc.3
    IL_00d2:  ldc.i4.0
    IL_00d3:  blt.s      IL_00e9

    IL_00d5:  ldloc.3
    IL_00d6:  ldarg.3
    IL_00d7:  bgt.s      IL_00e9

    IL_00d9:  ldloc.3
    IL_00da:  ldarg.0
    IL_00db:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_00e0:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_00e5:  clt
    IL_00e7:  br.s       IL_00ea

    IL_00e9:  ldc.i4.0
    IL_00ea:  stloc.s    V_7
    IL_00ec:  ldloc.s    V_7
    IL_00ee:  brtrue     IL_0038

    IL_00f3:  ldloc.2
    IL_00f4:  stloc.s    V_5
    IL_00f6:  br.s       IL_0118

    IL_00f8:  nop
    IL_00f9:  ldloc.0
    IL_00fa:  ldloc.s    V_5
    IL_00fc:  callvirt   instance object [mscorlib]System.Collections.IList::get_Item(int32)
    IL_0101:  castclass  antlr.TokenStreamRewriteEngine/RewriteOperation
    IL_0106:  stloc.s    V_4
    IL_0108:  ldloc.s    V_4
    IL_010a:  ldloc.1
    IL_010b:  callvirt   instance int32 antlr.TokenStreamRewriteEngine/RewriteOperation::execute(class [mscorlib]System.Text.StringBuilder)
    IL_0110:  pop
    IL_0111:  nop
    IL_0112:  ldloc.s    V_5
    IL_0114:  ldc.i4.1
    IL_0115:  add
    IL_0116:  stloc.s    V_5
    IL_0118:  ldloc.s    V_5
    IL_011a:  ldloc.0
    IL_011b:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_0120:  clt
    IL_0122:  stloc.s    V_7
    IL_0124:  ldloc.s    V_7
    IL_0126:  brtrue.s   IL_00f8

    IL_0128:  ldloc.1
    IL_0129:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_012e:  stloc.s    V_6
    IL_0130:  br.s       IL_0132

    IL_0132:  ldloc.s    V_6
    IL_0134:  ret
  } // end of method TokenStreamRewriteEngine::ToString

  .method public hidebysig instance string 
          ToDebugString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  ldarg.0
    IL_0004:  call       instance int32 antlr.TokenStreamRewriteEngine::getTokenStreamSize()
    IL_0009:  call       instance string antlr.TokenStreamRewriteEngine::ToDebugString(int32,
                                                                                       int32)
    IL_000e:  stloc.0
    IL_000f:  br.s       IL_0011

    IL_0011:  ldloc.0
    IL_0012:  ret
  } // end of method TokenStreamRewriteEngine::ToDebugString

  .method public hidebysig instance string 
          ToDebugString(int32 start,
                        int32 end) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32 V_1,
             string V_2,
             bool V_3)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  stloc.1
    IL_0009:  br.s       IL_001f

    IL_000b:  nop
    IL_000c:  ldloc.0
    IL_000d:  ldarg.0
    IL_000e:  ldloc.1
    IL_000f:  call       instance class antlr.TokenWithIndex antlr.TokenStreamRewriteEngine::getToken(int32)
    IL_0014:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(object)
    IL_0019:  pop
    IL_001a:  nop
    IL_001b:  ldloc.1
    IL_001c:  ldc.i4.1
    IL_001d:  add
    IL_001e:  stloc.1
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.0
    IL_0021:  blt.s      IL_0037

    IL_0023:  ldloc.1
    IL_0024:  ldarg.2
    IL_0025:  bgt.s      IL_0037

    IL_0027:  ldloc.1
    IL_0028:  ldarg.0
    IL_0029:  ldfld      class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::tokens
    IL_002e:  callvirt   instance int32 [mscorlib]System.Collections.ICollection::get_Count()
    IL_0033:  clt
    IL_0035:  br.s       IL_0038

    IL_0037:  ldc.i4.0
    IL_0038:  stloc.3
    IL_0039:  ldloc.3
    IL_003a:  brtrue.s   IL_000b

    IL_003c:  ldloc.0
    IL_003d:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_0042:  stloc.2
    IL_0043:  br.s       IL_0045

    IL_0045:  ldloc.2
    IL_0046:  ret
  } // end of method TokenStreamRewriteEngine::ToDebugString

  .method public hidebysig instance int32 
          getLastRewriteTokenIndex() cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldstr      "default"
    IL_0007:  call       instance int32 antlr.TokenStreamRewriteEngine::getLastRewriteTokenIndex(string)
    IL_000c:  stloc.0
    IL_000d:  br.s       IL_000f

    IL_000f:  ldloc.0
    IL_0010:  ret
  } // end of method TokenStreamRewriteEngine::getLastRewriteTokenIndex

  .method family hidebysig instance int32 
          getLastRewriteTokenIndex(string programName) cil managed
  {
    // 
    .maxstack  2
    .locals init (object V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::lastRewriteTokenIndexes
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.IDictionary::get_Item(object)
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  ldnull
    IL_0010:  ceq
    IL_0012:  ldc.i4.0
    IL_0013:  ceq
    IL_0015:  stloc.2
    IL_0016:  ldloc.2
    IL_0017:  brtrue.s   IL_001e

    IL_0019:  nop
    IL_001a:  ldc.i4.m1
    IL_001b:  stloc.1
    IL_001c:  br.s       IL_0027

    IL_001e:  ldloc.0
    IL_001f:  unbox.any  [mscorlib]System.Int32
    IL_0024:  stloc.1
    IL_0025:  br.s       IL_0027

    IL_0027:  ldloc.1
    IL_0028:  ret
  } // end of method TokenStreamRewriteEngine::getLastRewriteTokenIndex

  .method family hidebysig instance void 
          setLastRewriteTokenIndex(string programName,
                                   int32 i) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::lastRewriteTokenIndexes
    IL_0007:  ldarg.1
    IL_0008:  ldarg.2
    IL_0009:  box        [mscorlib]System.Int32
    IL_000e:  callvirt   instance void [mscorlib]System.Collections.IDictionary::set_Item(object,
                                                                                          object)
    IL_0013:  nop
    IL_0014:  ret
  } // end of method TokenStreamRewriteEngine::setLastRewriteTokenIndex

  .method family hidebysig instance class [mscorlib]System.Collections.IList 
          getProgram(string name) cil managed
  {
    // 
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.IList V_0,
             class [mscorlib]System.Collections.IList V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_0007:  ldarg.1
    IL_0008:  callvirt   instance object [mscorlib]System.Collections.IDictionary::get_Item(object)
    IL_000d:  castclass  [mscorlib]System.Collections.IList
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  ceq
    IL_0017:  ldc.i4.0
    IL_0018:  ceq
    IL_001a:  stloc.2
    IL_001b:  ldloc.2
    IL_001c:  brtrue.s   IL_0028

    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  call       instance class [mscorlib]System.Collections.IList antlr.TokenStreamRewriteEngine::initializeProgram(string)
    IL_0026:  stloc.0
    IL_0027:  nop
    IL_0028:  ldloc.0
    IL_0029:  stloc.1
    IL_002a:  br.s       IL_002c

    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method TokenStreamRewriteEngine::getProgram

  .method private hidebysig instance class [mscorlib]System.Collections.IList 
          initializeProgram(string name) cil managed
  {
    // 
    .maxstack  3
    .locals init (class [mscorlib]System.Collections.IList V_0,
             class [mscorlib]System.Collections.IList V_1)
    IL_0000:  nop
    IL_0001:  ldc.i4.s   100
    IL_0003:  newobj     instance void [mscorlib]System.Collections.ArrayList::.ctor(int32)
    IL_0008:  stloc.0
    IL_0009:  ldarg.0
    IL_000a:  ldfld      class [mscorlib]System.Collections.IDictionary antlr.TokenStreamRewriteEngine::programs
    IL_000f:  ldarg.1
    IL_0010:  ldloc.0
    IL_0011:  callvirt   instance void [mscorlib]System.Collections.IDictionary::set_Item(object,
                                                                                          object)
    IL_0016:  nop
    IL_0017:  ldloc.0
    IL_0018:  stloc.1
    IL_0019:  br.s       IL_001b

    IL_001b:  ldloc.1
    IL_001c:  ret
  } // end of method TokenStreamRewriteEngine::initializeProgram

} // end of class antlr.TokenStreamRewriteEngine

.class private auto ansi beforefieldinit antlr.TokenQueue
       extends [mscorlib]System.Object
{
  .field private class antlr.IToken[] buffer
  .field private int32 sizeLessOne
  .field private int32 offset
  .field famorassem int32 nbrEntries
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 minSize) cil managed
  {
    // 
    .maxstack  2
    .locals init (int32 V_0,
             bool V_1)
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  ldarg.1
    IL_0009:  ldc.i4.0
    IL_000a:  clt
    IL_000c:  ldc.i4.0
    IL_000d:  ceq
    IL_000f:  stloc.1
    IL_0010:  ldloc.1
    IL_0011:  brtrue.s   IL_001f

    IL_0013:  nop
    IL_0014:  ldarg.0
    IL_0015:  ldc.i4.s   16
    IL_0017:  call       instance void antlr.TokenQueue::'init'(int32)
    IL_001c:  nop
    IL_001d:  br.s       IL_0055

    IL_001f:  ldarg.1
    IL_0020:  ldc.i4     0x3fffffff
    IL_0025:  clt
    IL_0027:  stloc.1
    IL_0028:  ldloc.1
    IL_0029:  brtrue.s   IL_003a

    IL_002b:  nop
    IL_002c:  ldarg.0
    IL_002d:  ldc.i4     0x7fffffff
    IL_0032:  call       instance void antlr.TokenQueue::'init'(int32)
    IL_0037:  nop
    IL_0038:  br.s       IL_0055

    IL_003a:  ldc.i4.2
    IL_003b:  stloc.0
    IL_003c:  br.s       IL_0044

    IL_003e:  nop
    IL_003f:  nop
    IL_0040:  ldloc.0
    IL_0041:  ldc.i4.2
    IL_0042:  mul
    IL_0043:  stloc.0
    IL_0044:  ldloc.0
    IL_0045:  ldarg.1
    IL_0046:  clt
    IL_0048:  stloc.1
    IL_0049:  ldloc.1
    IL_004a:  brtrue.s   IL_003e

    IL_004c:  ldarg.0
    IL_004d:  ldloc.0
    IL_004e:  call       instance void antlr.TokenQueue::'init'(int32)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ret
  } // end of method TokenQueue::.ctor

  .method public hidebysig instance void 
          append(class antlr.IToken tok) cil managed
  {
    // 
    .maxstack  3
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      int32 antlr.TokenQueue::nbrEntries
    IL_0007:  ldarg.0
    IL_0008:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_000d:  ldlen
    IL_000e:  conv.i4
    IL_000f:  ceq
    IL_0011:  ldc.i4.0
    IL_0012:  ceq
    IL_0014:  stloc.0
    IL_0015:  ldloc.0
    IL_0016:  brtrue.s   IL_0021

    IL_0018:  nop
    IL_0019:  ldarg.0
    IL_001a:  call       instance void antlr.TokenQueue::expand()
    IL_001f:  nop
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_0027:  ldarg.0
    IL_0028:  ldfld      int32 antlr.TokenQueue::offset
    IL_002d:  ldarg.0
    IL_002e:  ldfld      int32 antlr.TokenQueue::nbrEntries
    IL_0033:  add
    IL_0034:  ldarg.0
    IL_0035:  ldfld      int32 antlr.TokenQueue::sizeLessOne
    IL_003a:  and
    IL_003b:  ldarg.1
    IL_003c:  stelem.ref
    IL_003d:  ldarg.0
    IL_003e:  dup
    IL_003f:  ldfld      int32 antlr.TokenQueue::nbrEntries
    IL_0044:  ldc.i4.1
    IL_0045:  add
    IL_0046:  stfld      int32 antlr.TokenQueue::nbrEntries
    IL_004b:  ret
  } // end of method TokenQueue::append

  .method public hidebysig instance class antlr.IToken 
          elementAt(int32 idx) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.IToken V_0)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_0007:  ldarg.0
    IL_0008:  ldfld      int32 antlr.TokenQueue::offset
    IL_000d:  ldarg.1
    IL_000e:  add
    IL_000f:  ldarg.0
    IL_0010:  ldfld      int32 antlr.TokenQueue::sizeLessOne
    IL_0015:  and
    IL_0016:  ldelem.ref
    IL_0017:  stloc.0
    IL_0018:  br.s       IL_001a

    IL_001a:  ldloc.0
    IL_001b:  ret
  } // end of method TokenQueue::elementAt

  .method private hidebysig instance void 
          expand() cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.IToken[] V_0,
             int32 V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_0007:  ldlen
    IL_0008:  conv.i4
    IL_0009:  ldc.i4.2
    IL_000a:  mul
    IL_000b:  newarr     antlr.IToken
    IL_0010:  stloc.0
    IL_0011:  ldc.i4.0
    IL_0012:  stloc.1
    IL_0013:  br.s       IL_0025

    IL_0015:  nop
    IL_0016:  ldloc.0
    IL_0017:  ldloc.1
    IL_0018:  ldarg.0
    IL_0019:  ldloc.1
    IL_001a:  call       instance class antlr.IToken antlr.TokenQueue::elementAt(int32)
    IL_001f:  stelem.ref
    IL_0020:  nop
    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.1
    IL_0023:  add
    IL_0024:  stloc.1
    IL_0025:  ldloc.1
    IL_0026:  ldarg.0
    IL_0027:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_002c:  ldlen
    IL_002d:  conv.i4
    IL_002e:  clt
    IL_0030:  stloc.2
    IL_0031:  ldloc.2
    IL_0032:  brtrue.s   IL_0015

    IL_0034:  ldarg.0
    IL_0035:  ldloc.0
    IL_0036:  stfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_003b:  ldarg.0
    IL_003c:  ldarg.0
    IL_003d:  ldfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_0042:  ldlen
    IL_0043:  conv.i4
    IL_0044:  ldc.i4.1
    IL_0045:  sub
    IL_0046:  stfld      int32 antlr.TokenQueue::sizeLessOne
    IL_004b:  ldarg.0
    IL_004c:  ldc.i4.0
    IL_004d:  stfld      int32 antlr.TokenQueue::offset
    IL_0052:  ret
  } // end of method TokenQueue::expand

  .method private hidebysig instance void 
          'init'(int32 size) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  newarr     antlr.IToken
    IL_0008:  stfld      class antlr.IToken[] antlr.TokenQueue::buffer
    IL_000d:  ldarg.0
    IL_000e:  ldarg.1
    IL_000f:  ldc.i4.1
    IL_0010:  sub
    IL_0011:  stfld      int32 antlr.TokenQueue::sizeLessOne
    IL_0016:  ldarg.0
    IL_0017:  ldc.i4.0
    IL_0018:  stfld      int32 antlr.TokenQueue::offset
    IL_001d:  ldarg.0
    IL_001e:  ldc.i4.0
    IL_001f:  stfld      int32 antlr.TokenQueue::nbrEntries
    IL_0024:  ret
  } // end of method TokenQueue::'init'

  .method public hidebysig instance void 
          reset() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldc.i4.0
    IL_0003:  stfld      int32 antlr.TokenQueue::offset
    IL_0008:  ldarg.0
    IL_0009:  ldc.i4.0
    IL_000a:  stfld      int32 antlr.TokenQueue::nbrEntries
    IL_000f:  ret
  } // end of method TokenQueue::reset

  .method public hidebysig instance void 
          removeFirst() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.0
    IL_0003:  ldfld      int32 antlr.TokenQueue::offset
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  ldarg.0
    IL_000b:  ldfld      int32 antlr.TokenQueue::sizeLessOne
    IL_0010:  and
    IL_0011:  stfld      int32 antlr.TokenQueue::offset
    IL_0016:  ldarg.0
    IL_0017:  dup
    IL_0018:  ldfld      int32 antlr.TokenQueue::nbrEntries
    IL_001d:  ldc.i4.1
    IL_001e:  sub
    IL_001f:  stfld      int32 antlr.TokenQueue::nbrEntries
    IL_0024:  ret
  } // end of method TokenQueue::removeFirst

} // end of class antlr.TokenQueue

.class public auto ansi serializable beforefieldinit antlr.SemanticException
       extends antlr.RecognitionException
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.RecognitionException::.ctor(string)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method SemanticException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s,
                               string fileName,
                               int32 line) cil managed
  {
    .custom instance void [mscorlib]System.ObsoleteAttribute::.ctor(string,
                                                                    bool) = ( 01 00 4D 52 65 70 6C 61 63 65 64 20 62 79 20 53   // ..MReplaced by S
                                                                              65 6D 61 6E 74 69 63 45 78 63 65 70 74 69 6F 6E   // emanticException
                                                                              28 73 74 72 69 6E 67 2C 20 73 74 72 69 6E 67 2C   // (string, string,
                                                                              20 69 6E 74 2C 20 69 6E 74 29 20 73 69 6E 63 65   //  int, int) since
                                                                              20 76 65 72 73 69 6F 6E 20 32 2E 37 2E 32 2E 36   //  version 2.7.2.6
                                                                              00 00 00 ) 
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldc.i4.m1
    IL_0005:  call       instance void antlr.SemanticException::.ctor(string,
                                                                      string,
                                                                      int32,
                                                                      int32)
    IL_000a:  nop
    IL_000b:  nop
    IL_000c:  nop
    IL_000d:  ret
  } // end of method SemanticException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string s,
                               string fileName,
                               int32 line,
                               int32 column) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.3
    IL_0004:  ldarg.s    column
    IL_0006:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_000b:  nop
    IL_000c:  nop
    IL_000d:  nop
    IL_000e:  ret
  } // end of method SemanticException::.ctor

} // end of class antlr.SemanticException

.class public auto ansi serializable beforefieldinit antlr.MismatchedTokenException
       extends antlr.RecognitionException
{
  .class auto ansi sealed nested public TokenTypeEnum
         extends [mscorlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum TokenType = int32(0x00000001)
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum NotTokenType = int32(0x00000002)
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum RangeType = int32(0x00000003)
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum NotRangeType = int32(0x00000004)
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum SetType = int32(0x00000005)
    .field public static literal valuetype antlr.MismatchedTokenException/TokenTypeEnum NotSetType = int32(0x00000006)
  } // end of class TokenTypeEnum

  .field assembly string[] tokenNames
  .field public class antlr.IToken token
  .field public class antlr.collections.AST node
  .field assembly string tokenText
  .field public valuetype antlr.MismatchedTokenException/TokenTypeEnum mismatchType
  .field public int32 expecting
  .field public int32 upper
  .field public class antlr.collections.impl.BitSet bset
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token: expecting any AST node"
    IL_000d:  ldstr      "<AST>"
    IL_0012:  ldc.i4.m1
    IL_0013:  ldc.i4.m1
    IL_0014:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  nop
    IL_001c:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.collections.AST node_,
                               int32 lower,
                               int32 upper_,
                               bool matchNot) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldstr      "<AST>"
    IL_0012:  ldc.i4.m1
    IL_0013:  ldc.i4.m1
    IL_0014:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0022:  ldarg.0
    IL_0023:  ldarg.2
    IL_0024:  stfld      class antlr.collections.AST antlr.MismatchedTokenException::node
    IL_0029:  ldarg.2
    IL_002a:  ldnull
    IL_002b:  ceq
    IL_002d:  ldc.i4.0
    IL_002e:  ceq
    IL_0030:  stloc.0
    IL_0031:  ldloc.0
    IL_0032:  brtrue.s   IL_0043

    IL_0034:  nop
    IL_0035:  ldarg.0
    IL_0036:  ldstr      "<empty tree>"
    IL_003b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0040:  nop
    IL_0041:  br.s       IL_0051

    IL_0043:  nop
    IL_0044:  ldarg.0
    IL_0045:  ldarg.2
    IL_0046:  callvirt   instance string antlr.collections.AST::ToString()
    IL_004b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  ldarg.s    matchNot
    IL_0054:  brtrue.s   IL_0059

    IL_0056:  ldc.i4.3
    IL_0057:  br.s       IL_005a

    IL_0059:  ldc.i4.4
    IL_005a:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_005f:  ldarg.0
    IL_0060:  ldarg.3
    IL_0061:  stfld      int32 antlr.MismatchedTokenException::expecting
    IL_0066:  ldarg.0
    IL_0067:  ldarg.s    upper_
    IL_0069:  stfld      int32 antlr.MismatchedTokenException::upper
    IL_006e:  nop
    IL_006f:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.collections.AST node_,
                               int32 expecting_,
                               bool matchNot) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldstr      "<AST>"
    IL_0012:  ldc.i4.m1
    IL_0013:  ldc.i4.m1
    IL_0014:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0022:  ldarg.0
    IL_0023:  ldarg.2
    IL_0024:  stfld      class antlr.collections.AST antlr.MismatchedTokenException::node
    IL_0029:  ldarg.2
    IL_002a:  ldnull
    IL_002b:  ceq
    IL_002d:  ldc.i4.0
    IL_002e:  ceq
    IL_0030:  stloc.0
    IL_0031:  ldloc.0
    IL_0032:  brtrue.s   IL_0043

    IL_0034:  nop
    IL_0035:  ldarg.0
    IL_0036:  ldstr      "<empty tree>"
    IL_003b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0040:  nop
    IL_0041:  br.s       IL_0051

    IL_0043:  nop
    IL_0044:  ldarg.0
    IL_0045:  ldarg.2
    IL_0046:  callvirt   instance string antlr.collections.AST::ToString()
    IL_004b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  ldarg.s    matchNot
    IL_0054:  brtrue.s   IL_0059

    IL_0056:  ldc.i4.1
    IL_0057:  br.s       IL_005a

    IL_0059:  ldc.i4.2
    IL_005a:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_005f:  ldarg.0
    IL_0060:  ldarg.3
    IL_0061:  stfld      int32 antlr.MismatchedTokenException::expecting
    IL_0066:  nop
    IL_0067:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.collections.AST node_,
                               class antlr.collections.impl.BitSet set_,
                               bool matchNot) cil managed
  {
    // 
    .maxstack  5
    .locals init (bool V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldstr      "<AST>"
    IL_0012:  ldc.i4.m1
    IL_0013:  ldc.i4.m1
    IL_0014:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0019:  nop
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0022:  ldarg.0
    IL_0023:  ldarg.2
    IL_0024:  stfld      class antlr.collections.AST antlr.MismatchedTokenException::node
    IL_0029:  ldarg.2
    IL_002a:  ldnull
    IL_002b:  ceq
    IL_002d:  ldc.i4.0
    IL_002e:  ceq
    IL_0030:  stloc.0
    IL_0031:  ldloc.0
    IL_0032:  brtrue.s   IL_0043

    IL_0034:  nop
    IL_0035:  ldarg.0
    IL_0036:  ldstr      "<empty tree>"
    IL_003b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0040:  nop
    IL_0041:  br.s       IL_0051

    IL_0043:  nop
    IL_0044:  ldarg.0
    IL_0045:  ldarg.2
    IL_0046:  callvirt   instance string antlr.collections.AST::ToString()
    IL_004b:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  ldarg.s    matchNot
    IL_0054:  brtrue.s   IL_0059

    IL_0056:  ldc.i4.5
    IL_0057:  br.s       IL_005a

    IL_0059:  ldc.i4.6
    IL_005a:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_005f:  ldarg.0
    IL_0060:  ldarg.3
    IL_0061:  stfld      class antlr.collections.impl.BitSet antlr.MismatchedTokenException::bset
    IL_0066:  nop
    IL_0067:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.IToken token_,
                               int32 lower,
                               int32 upper_,
                               bool matchNot,
                               string fileName_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldarg.s    fileName_
    IL_000f:  ldarg.2
    IL_0010:  callvirt   instance int32 antlr.IToken::getLine()
    IL_0015:  ldarg.2
    IL_0016:  callvirt   instance int32 antlr.IToken::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.1
    IL_0024:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0029:  ldarg.0
    IL_002a:  ldarg.2
    IL_002b:  stfld      class antlr.IToken antlr.MismatchedTokenException::token
    IL_0030:  ldarg.0
    IL_0031:  ldarg.2
    IL_0032:  callvirt   instance string antlr.IToken::getText()
    IL_0037:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_003c:  ldarg.0
    IL_003d:  ldarg.s    matchNot
    IL_003f:  brtrue.s   IL_0044

    IL_0041:  ldc.i4.3
    IL_0042:  br.s       IL_0045

    IL_0044:  ldc.i4.4
    IL_0045:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_004a:  ldarg.0
    IL_004b:  ldarg.3
    IL_004c:  stfld      int32 antlr.MismatchedTokenException::expecting
    IL_0051:  ldarg.0
    IL_0052:  ldarg.s    upper_
    IL_0054:  stfld      int32 antlr.MismatchedTokenException::upper
    IL_0059:  nop
    IL_005a:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.IToken token_,
                               int32 expecting_,
                               bool matchNot,
                               string fileName_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldarg.s    fileName_
    IL_000f:  ldarg.2
    IL_0010:  callvirt   instance int32 antlr.IToken::getLine()
    IL_0015:  ldarg.2
    IL_0016:  callvirt   instance int32 antlr.IToken::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.1
    IL_0024:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0029:  ldarg.0
    IL_002a:  ldarg.2
    IL_002b:  stfld      class antlr.IToken antlr.MismatchedTokenException::token
    IL_0030:  ldarg.0
    IL_0031:  ldarg.2
    IL_0032:  callvirt   instance string antlr.IToken::getText()
    IL_0037:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_003c:  ldarg.0
    IL_003d:  ldarg.s    matchNot
    IL_003f:  brtrue.s   IL_0044

    IL_0041:  ldc.i4.1
    IL_0042:  br.s       IL_0045

    IL_0044:  ldc.i4.2
    IL_0045:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_004a:  ldarg.0
    IL_004b:  ldarg.3
    IL_004c:  stfld      int32 antlr.MismatchedTokenException::expecting
    IL_0051:  nop
    IL_0052:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(string[] tokenNames_,
                               class antlr.IToken token_,
                               class antlr.collections.impl.BitSet set_,
                               bool matchNot,
                               string fileName_) cil managed
  {
    // 
    .maxstack  5
    IL_0000:  ldarg.0
    IL_0001:  ldnull
    IL_0002:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_0007:  ldarg.0
    IL_0008:  ldstr      "Mismatched Token"
    IL_000d:  ldarg.s    fileName_
    IL_000f:  ldarg.2
    IL_0010:  callvirt   instance int32 antlr.IToken::getLine()
    IL_0015:  ldarg.2
    IL_0016:  callvirt   instance int32 antlr.IToken::getColumn()
    IL_001b:  call       instance void antlr.RecognitionException::.ctor(string,
                                                                         string,
                                                                         int32,
                                                                         int32)
    IL_0020:  nop
    IL_0021:  nop
    IL_0022:  ldarg.0
    IL_0023:  ldarg.1
    IL_0024:  stfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0029:  ldarg.0
    IL_002a:  ldarg.2
    IL_002b:  stfld      class antlr.IToken antlr.MismatchedTokenException::token
    IL_0030:  ldarg.0
    IL_0031:  ldarg.2
    IL_0032:  callvirt   instance string antlr.IToken::getText()
    IL_0037:  stfld      string antlr.MismatchedTokenException::tokenText
    IL_003c:  ldarg.0
    IL_003d:  ldarg.s    matchNot
    IL_003f:  brtrue.s   IL_0044

    IL_0041:  ldc.i4.5
    IL_0042:  br.s       IL_0045

    IL_0044:  ldc.i4.6
    IL_0045:  stfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_004a:  ldarg.0
    IL_004b:  ldarg.3
    IL_004c:  stfld      class antlr.collections.impl.BitSet antlr.MismatchedTokenException::bset
    IL_0051:  nop
    IL_0052:  ret
  } // end of method MismatchedTokenException::.ctor

  .method public hidebysig specialname virtual 
          instance string  get_Message() cil managed
  {
    // 
    .maxstack  5
    .locals init (class [mscorlib]System.Text.StringBuilder V_0,
             int32[] V_1,
             int32 V_2,
             string V_3,
             valuetype antlr.MismatchedTokenException/TokenTypeEnum V_4,
             string[] V_5,
             bool V_6)
    IL_0000:  nop
    IL_0001:  newobj     instance void [mscorlib]System.Text.StringBuilder::.ctor()
    IL_0006:  stloc.0
    IL_0007:  ldarg.0
    IL_0008:  ldfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_000d:  stloc.s    V_4
    IL_000f:  ldloc.s    V_4
    IL_0011:  ldc.i4.1
    IL_0012:  sub
    IL_0013:  switch     ( 
                          IL_0035,
                          IL_0085,
                          IL_00ac,
                          IL_0115,
                          IL_017e,
                          IL_017e)
    IL_0030:  br         IL_0205

    IL_0035:  ldloc.0
    IL_0036:  ldc.i4.5
    IL_0037:  newarr     [mscorlib]System.String
    IL_003c:  stloc.s    V_5
    IL_003e:  ldloc.s    V_5
    IL_0040:  ldc.i4.0
    IL_0041:  ldstr      "expecting "
    IL_0046:  stelem.ref
    IL_0047:  ldloc.s    V_5
    IL_0049:  ldc.i4.1
    IL_004a:  ldarg.0
    IL_004b:  ldarg.0
    IL_004c:  ldfld      int32 antlr.MismatchedTokenException::expecting
    IL_0051:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_0056:  stelem.ref
    IL_0057:  ldloc.s    V_5
    IL_0059:  ldc.i4.2
    IL_005a:  ldstr      ", found '"
    IL_005f:  stelem.ref
    IL_0060:  ldloc.s    V_5
    IL_0062:  ldc.i4.3
    IL_0063:  ldarg.0
    IL_0064:  ldfld      string antlr.MismatchedTokenException::tokenText
    IL_0069:  stelem.ref
    IL_006a:  ldloc.s    V_5
    IL_006c:  ldc.i4.4
    IL_006d:  ldstr      "'"
    IL_0072:  stelem.ref
    IL_0073:  ldloc.s    V_5
    IL_0075:  call       string [mscorlib]System.String::Concat(string[])
    IL_007a:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_007f:  pop
    IL_0080:  br         IL_0214

    IL_0085:  ldloc.0
    IL_0086:  ldstr      "expecting anything but "
    IL_008b:  ldarg.0
    IL_008c:  ldarg.0
    IL_008d:  ldfld      int32 antlr.MismatchedTokenException::expecting
    IL_0092:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_0097:  ldstr      "; got it anyway"
    IL_009c:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_00a1:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_00a6:  pop
    IL_00a7:  br         IL_0214

    IL_00ac:  ldloc.0
    IL_00ad:  ldc.i4.7
    IL_00ae:  newarr     [mscorlib]System.String
    IL_00b3:  stloc.s    V_5
    IL_00b5:  ldloc.s    V_5
    IL_00b7:  ldc.i4.0
    IL_00b8:  ldstr      "expecting token in range: "
    IL_00bd:  stelem.ref
    IL_00be:  ldloc.s    V_5
    IL_00c0:  ldc.i4.1
    IL_00c1:  ldarg.0
    IL_00c2:  ldarg.0
    IL_00c3:  ldfld      int32 antlr.MismatchedTokenException::expecting
    IL_00c8:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_00cd:  stelem.ref
    IL_00ce:  ldloc.s    V_5
    IL_00d0:  ldc.i4.2
    IL_00d1:  ldstr      ".."
    IL_00d6:  stelem.ref
    IL_00d7:  ldloc.s    V_5
    IL_00d9:  ldc.i4.3
    IL_00da:  ldarg.0
    IL_00db:  ldarg.0
    IL_00dc:  ldfld      int32 antlr.MismatchedTokenException::upper
    IL_00e1:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_00e6:  stelem.ref
    IL_00e7:  ldloc.s    V_5
    IL_00e9:  ldc.i4.4
    IL_00ea:  ldstr      ", found '"
    IL_00ef:  stelem.ref
    IL_00f0:  ldloc.s    V_5
    IL_00f2:  ldc.i4.5
    IL_00f3:  ldarg.0
    IL_00f4:  ldfld      string antlr.MismatchedTokenException::tokenText
    IL_00f9:  stelem.ref
    IL_00fa:  ldloc.s    V_5
    IL_00fc:  ldc.i4.6
    IL_00fd:  ldstr      "'"
    IL_0102:  stelem.ref
    IL_0103:  ldloc.s    V_5
    IL_0105:  call       string [mscorlib]System.String::Concat(string[])
    IL_010a:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_010f:  pop
    IL_0110:  br         IL_0214

    IL_0115:  ldloc.0
    IL_0116:  ldc.i4.7
    IL_0117:  newarr     [mscorlib]System.String
    IL_011c:  stloc.s    V_5
    IL_011e:  ldloc.s    V_5
    IL_0120:  ldc.i4.0
    IL_0121:  ldstr      "expecting token NOT in range: "
    IL_0126:  stelem.ref
    IL_0127:  ldloc.s    V_5
    IL_0129:  ldc.i4.1
    IL_012a:  ldarg.0
    IL_012b:  ldarg.0
    IL_012c:  ldfld      int32 antlr.MismatchedTokenException::expecting
    IL_0131:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_0136:  stelem.ref
    IL_0137:  ldloc.s    V_5
    IL_0139:  ldc.i4.2
    IL_013a:  ldstr      ".."
    IL_013f:  stelem.ref
    IL_0140:  ldloc.s    V_5
    IL_0142:  ldc.i4.3
    IL_0143:  ldarg.0
    IL_0144:  ldarg.0
    IL_0145:  ldfld      int32 antlr.MismatchedTokenException::upper
    IL_014a:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_014f:  stelem.ref
    IL_0150:  ldloc.s    V_5
    IL_0152:  ldc.i4.4
    IL_0153:  ldstr      ", found '"
    IL_0158:  stelem.ref
    IL_0159:  ldloc.s    V_5
    IL_015b:  ldc.i4.5
    IL_015c:  ldarg.0
    IL_015d:  ldfld      string antlr.MismatchedTokenException::tokenText
    IL_0162:  stelem.ref
    IL_0163:  ldloc.s    V_5
    IL_0165:  ldc.i4.6
    IL_0166:  ldstr      "'"
    IL_016b:  stelem.ref
    IL_016c:  ldloc.s    V_5
    IL_016e:  call       string [mscorlib]System.String::Concat(string[])
    IL_0173:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0178:  pop
    IL_0179:  br         IL_0214

    IL_017e:  ldloc.0
    IL_017f:  ldstr      "expecting "
    IL_0184:  ldarg.0
    IL_0185:  ldfld      valuetype antlr.MismatchedTokenException/TokenTypeEnum antlr.MismatchedTokenException::mismatchType
    IL_018a:  ldc.i4.6
    IL_018b:  beq.s      IL_0194

    IL_018d:  ldstr      ""
    IL_0192:  br.s       IL_0199

    IL_0194:  ldstr      "NOT "
    IL_0199:  ldstr      "one of ("
    IL_019e:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_01a3:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_01a8:  pop
    IL_01a9:  ldarg.0
    IL_01aa:  ldfld      class antlr.collections.impl.BitSet antlr.MismatchedTokenException::bset
    IL_01af:  callvirt   instance int32[] antlr.collections.impl.BitSet::toArray()
    IL_01b4:  stloc.1
    IL_01b5:  ldc.i4.0
    IL_01b6:  stloc.2
    IL_01b7:  br.s       IL_01db

    IL_01b9:  nop
    IL_01ba:  ldloc.0
    IL_01bb:  ldstr      " "
    IL_01c0:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_01c5:  pop
    IL_01c6:  ldloc.0
    IL_01c7:  ldarg.0
    IL_01c8:  ldloc.1
    IL_01c9:  ldloc.2
    IL_01ca:  ldelem.i4
    IL_01cb:  call       instance string antlr.MismatchedTokenException::tokenName(int32)
    IL_01d0:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_01d5:  pop
    IL_01d6:  nop
    IL_01d7:  ldloc.2
    IL_01d8:  ldc.i4.1
    IL_01d9:  add
    IL_01da:  stloc.2
    IL_01db:  ldloc.2
    IL_01dc:  ldloc.1
    IL_01dd:  ldlen
    IL_01de:  conv.i4
    IL_01df:  clt
    IL_01e1:  stloc.s    V_6
    IL_01e3:  ldloc.s    V_6
    IL_01e5:  brtrue.s   IL_01b9

    IL_01e7:  ldloc.0
    IL_01e8:  ldstr      "), found '"
    IL_01ed:  ldarg.0
    IL_01ee:  ldfld      string antlr.MismatchedTokenException::tokenText
    IL_01f3:  ldstr      "'"
    IL_01f8:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_01fd:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0202:  pop
    IL_0203:  br.s       IL_0214

    IL_0205:  ldloc.0
    IL_0206:  ldarg.0
    IL_0207:  call       instance string [mscorlib]System.Exception::get_Message()
    IL_020c:  callvirt   instance class [mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    IL_0211:  pop
    IL_0212:  br.s       IL_0214

    IL_0214:  ldloc.0
    IL_0215:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_021a:  stloc.3
    IL_021b:  br.s       IL_021d

    IL_021d:  ldloc.3
    IL_021e:  ret
  } // end of method MismatchedTokenException::get_Message

  .method private hidebysig instance string 
          tokenName(int32 tokenType) cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  ldc.i4.0
    IL_0003:  ceq
    IL_0005:  ldc.i4.0
    IL_0006:  ceq
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  brtrue.s   IL_0015

    IL_000c:  nop
    IL_000d:  ldstr      "<Set of tokens>"
    IL_0012:  stloc.0
    IL_0013:  br.s       IL_0051

    IL_0015:  ldarg.1
    IL_0016:  ldc.i4.0
    IL_0017:  blt.s      IL_0026

    IL_0019:  ldarg.1
    IL_001a:  ldarg.0
    IL_001b:  ldfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_0020:  ldlen
    IL_0021:  conv.i4
    IL_0022:  clt
    IL_0024:  br.s       IL_0027

    IL_0026:  ldc.i4.0
    IL_0027:  stloc.1
    IL_0028:  ldloc.1
    IL_0029:  brtrue.s   IL_0045

    IL_002b:  nop
    IL_002c:  ldstr      "<"
    IL_0031:  ldarga.s   tokenType
    IL_0033:  call       instance string [mscorlib]System.Int32::ToString()
    IL_0038:  ldstr      ">"
    IL_003d:  call       string [mscorlib]System.String::Concat(string,
                                                                string,
                                                                string)
    IL_0042:  stloc.0
    IL_0043:  br.s       IL_0051

    IL_0045:  nop
    IL_0046:  ldarg.0
    IL_0047:  ldfld      string[] antlr.MismatchedTokenException::tokenNames
    IL_004c:  ldarg.1
    IL_004d:  ldelem.ref
    IL_004e:  stloc.0
    IL_004f:  br.s       IL_0051

    IL_0051:  ldloc.0
    IL_0052:  ret
  } // end of method MismatchedTokenException::tokenName

  .property instance string Message()
  {
    .get instance string antlr.MismatchedTokenException::get_Message()
  } // end of property MismatchedTokenException::Message
} // end of class antlr.MismatchedTokenException

.class public auto ansi beforefieldinit antlr.debug.SyntacticPredicateEventArgs
       extends antlr.debug.GuessingEventArgs
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void antlr.debug.GuessingEventArgs::.ctor()
    IL_0006:  nop
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  ret
  } // end of method SyntacticPredicateEventArgs::.ctor

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(int32 'type') cil managed
  {
    // 
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  call       instance void antlr.debug.GuessingEventArgs::.ctor(int32)
    IL_0007:  nop
    IL_0008:  nop
    IL_0009:  nop
    IL_000a:  ret
  } // end of method SyntacticPredicateEventArgs::.ctor

  .method public hidebysig virtual instance string 
          ToString() cil managed
  {
    // 
    .maxstack  3
    .locals init (string V_0)
    IL_0000:  nop
    IL_0001:  ldstr      "SyntacticPredicateEvent ["
    IL_0006:  ldarg.0
    IL_0007:  callvirt   instance int32 antlr.debug.GuessingEventArgs::get_Guessing()
    IL_000c:  box        [mscorlib]System.Int32
    IL_0011:  ldstr      "]"
    IL_0016:  call       string [mscorlib]System.String::Concat(object,
                                                                object,
                                                                object)
    IL_001b:  stloc.0
    IL_001c:  br.s       IL_001e

    IL_001e:  ldloc.0
    IL_001f:  ret
  } // end of method SyntacticPredicateEventArgs::ToString

} // end of class antlr.debug.SyntacticPredicateEventArgs

.class public auto ansi beforefieldinit antlr.debug.ScannerEventSupport
       extends [mscorlib]System.Object
{
  .field private object source
  .field private class [mscorlib]System.Collections.Hashtable listeners
  .field private class antlr.debug.MatchEventArgs matchEvent
  .field private class antlr.debug.MessageEventArgs messageEvent
  .field private class antlr.debug.TokenEventArgs tokenEvent
  .field private class antlr.debug.SemanticPredicateEventArgs semPredEvent
  .field private class antlr.debug.SyntacticPredicateEventArgs synPredEvent
  .field private class antlr.debug.TraceEventArgs traceEvent
  .field private class antlr.debug.NewLineEventArgs newLineEvent
  .field private int32 ruleDepth
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(object source) cil managed
  {
    // 
    .maxstack  2
    IL_0000:  ldarg.0
    IL_0001:  ldc.i4.0
    IL_0002:  stfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_0007:  ldarg.0
    IL_0008:  call       instance void [mscorlib]System.Object::.ctor()
    IL_000d:  nop
    IL_000e:  nop
    IL_000f:  ldarg.0
    IL_0010:  newobj     instance void antlr.debug.MatchEventArgs::.ctor()
    IL_0015:  stfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_001a:  ldarg.0
    IL_001b:  newobj     instance void antlr.debug.MessageEventArgs::.ctor()
    IL_0020:  stfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0025:  ldarg.0
    IL_0026:  newobj     instance void antlr.debug.TokenEventArgs::.ctor()
    IL_002b:  stfld      class antlr.debug.TokenEventArgs antlr.debug.ScannerEventSupport::tokenEvent
    IL_0030:  ldarg.0
    IL_0031:  newobj     instance void antlr.debug.TraceEventArgs::.ctor()
    IL_0036:  stfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_003b:  ldarg.0
    IL_003c:  newobj     instance void antlr.debug.SemanticPredicateEventArgs::.ctor()
    IL_0041:  stfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ScannerEventSupport::semPredEvent
    IL_0046:  ldarg.0
    IL_0047:  newobj     instance void antlr.debug.SyntacticPredicateEventArgs::.ctor()
    IL_004c:  stfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0051:  ldarg.0
    IL_0052:  newobj     instance void antlr.debug.NewLineEventArgs::.ctor()
    IL_0057:  stfld      class antlr.debug.NewLineEventArgs antlr.debug.ScannerEventSupport::newLineEvent
    IL_005c:  ldarg.0
    IL_005d:  newobj     instance void [mscorlib]System.Collections.Hashtable::.ctor()
    IL_0062:  stfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ScannerEventSupport::listeners
    IL_0067:  ldarg.0
    IL_0068:  ldarg.1
    IL_0069:  stfld      object antlr.debug.ScannerEventSupport::source
    IL_006e:  nop
    IL_006f:  ret
  } // end of method ScannerEventSupport::.ctor

  .method public hidebysig newslot virtual 
          instance void  checkController() cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ret
  } // end of method ScannerEventSupport::checkController

  .method public hidebysig newslot virtual 
          instance void  addDoneListener(class antlr.debug.Listener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.Listener::doneParsing(object,
                                                                         class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_Done(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ScannerEventSupport::listeners
    IL_0025:  ldarg.1
    IL_0026:  ldarg.1
    IL_0027:  callvirt   instance void [mscorlib]System.Collections.Hashtable::set_Item(object,
                                                                                        object)
    IL_002c:  nop
    IL_002d:  ret
  } // end of method ScannerEventSupport::addDoneListener

  .method public hidebysig newslot virtual 
          instance void  addMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.MessageListener::reportError(object,
                                                                                class antlr.debug.MessageEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_ErrorReported(class antlr.debug.MessageEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.MessageListener::reportWarning(object,
                                                                                  class antlr.debug.MessageEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::add_WarningReported(class antlr.debug.MessageEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::addMessageListener

  .method public hidebysig newslot virtual 
          instance void  addNewLineListener(class antlr.debug.NewLineListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.NewLineListener::hitNewLine(object,
                                                                               class antlr.debug.NewLineEventArgs)
    IL_0014:  newobj     instance void antlr.debug.NewLineEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_HitNewLine(class antlr.debug.NewLineEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ScannerEventSupport::addNewLineListener

  .method public hidebysig newslot virtual 
          instance void  addParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  2
    .locals init (bool V_0)
    IL_0000:  nop
    IL_0001:  ldarg.1
    IL_0002:  isinst     antlr.debug.ParserController
    IL_0007:  ldnull
    IL_0008:  cgt.un
    IL_000a:  ldc.i4.0
    IL_000b:  ceq
    IL_000d:  stloc.0
    IL_000e:  ldloc.0
    IL_000f:  brtrue.s   IL_0013

    IL_0011:  nop
    IL_0012:  nop
    IL_0013:  ldarg.0
    IL_0014:  ldarg.1
    IL_0015:  callvirt   instance void antlr.debug.ScannerEventSupport::addParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_001a:  nop
    IL_001b:  ldarg.0
    IL_001c:  ldarg.1
    IL_001d:  callvirt   instance void antlr.debug.ScannerEventSupport::addParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_0022:  nop
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  callvirt   instance void antlr.debug.ScannerEventSupport::addMessageListener(class antlr.debug.MessageListener)
    IL_002a:  nop
    IL_002b:  ldarg.0
    IL_002c:  ldarg.1
    IL_002d:  callvirt   instance void antlr.debug.ScannerEventSupport::addTraceListener(class antlr.debug.TraceListener)
    IL_0032:  nop
    IL_0033:  ldarg.0
    IL_0034:  ldarg.1
    IL_0035:  callvirt   instance void antlr.debug.ScannerEventSupport::addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_003a:  nop
    IL_003b:  ldarg.0
    IL_003c:  ldarg.1
    IL_003d:  callvirt   instance void antlr.debug.ScannerEventSupport::addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_0042:  nop
    IL_0043:  ret
  } // end of method ScannerEventSupport::addParserListener

  .method public hidebysig newslot virtual 
          instance void  addParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatch(object,
                                                                                    class antlr.debug.MatchEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_MatchedChar(class antlr.debug.MatchEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatchNot(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::add_MatchedNotChar(class antlr.debug.MatchEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  castclass  antlr.CharScanner
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatch(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0050:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0055:  callvirt   instance void antlr.CharScanner::add_MisMatchedChar(class antlr.debug.MatchEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0061:  castclass  antlr.CharScanner
    IL_0066:  ldarg.1
    IL_0067:  dup
    IL_0068:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatchNot(object,
                                                                                          class antlr.debug.MatchEventArgs)
    IL_006e:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0073:  callvirt   instance void antlr.CharScanner::add_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
    IL_0078:  nop
    IL_0079:  ldarg.0
    IL_007a:  ldarg.1
    IL_007b:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0080:  nop
    IL_0081:  ret
  } // end of method ScannerEventSupport::addParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  addParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserConsume(object,
                                                                                      class antlr.debug.TokenEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_ConsumedChar(class antlr.debug.TokenEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserLA(object,
                                                                                 class antlr.debug.TokenEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::add_CharLA(class antlr.debug.TokenEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::addParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  addSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SemanticPredicateListener::semanticPredicateEvaluated(object,
                                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SemanticPredicateEventHandler::.ctor(object,
                                                                                        native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ScannerEventSupport::addSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateStarted(object,
                                                                                                         class antlr.debug.SyntacticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateFailed(object,
                                                                                                        class antlr.debug.SyntacticPredicateEventArgs)
    IL_0032:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::add_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  castclass  antlr.CharScanner
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateSucceeded(object,
                                                                                                           class antlr.debug.SyntacticPredicateEventArgs)
    IL_0050:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0055:  callvirt   instance void antlr.CharScanner::add_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldarg.1
    IL_005d:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0062:  nop
    IL_0063:  ret
  } // end of method ScannerEventSupport::addSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  addTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.TraceListener::enterRule(object,
                                                                            class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::add_EnterRule(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.TraceListener::exitRule(object,
                                                                           class antlr.debug.TraceEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::add_ExitRule(class antlr.debug.TraceEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::addDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::addTraceListener

  .method public hidebysig newslot virtual 
          instance void  fireConsume(int32 c) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.debug.TokenEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::LAEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TokenEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0051

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ScannerEventSupport::tokenEvent
    IL_0030:  ldsfld     int32 antlr.debug.TokenEventArgs::CONSUME
    IL_0035:  ldc.i4.1
    IL_0036:  ldarg.1
    IL_0037:  callvirt   instance void antlr.debug.TokenEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32)
    IL_003c:  nop
    IL_003d:  ldloc.0
    IL_003e:  ldarg.0
    IL_003f:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0044:  ldarg.0
    IL_0045:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ScannerEventSupport::tokenEvent
    IL_004a:  callvirt   instance void antlr.debug.TokenEventHandler::Invoke(object,
                                                                             class antlr.debug.TokenEventArgs)
    IL_004f:  nop
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0057:  nop
    IL_0058:  ret
  } // end of method ScannerEventSupport::fireConsume

  .method public hidebysig newslot virtual 
          instance void  fireDoneParsing() cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::DoneEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TraceEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0052

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_0030:  ldsfld     int32 antlr.debug.TraceEventArgs::DONE_PARSING
    IL_0035:  ldc.i4.0
    IL_0036:  ldc.i4.0
    IL_0037:  ldc.i4.0
    IL_0038:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_003d:  nop
    IL_003e:  ldloc.0
    IL_003f:  ldarg.0
    IL_0040:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0045:  ldarg.0
    IL_0046:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_004b:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_0050:  nop
    IL_0051:  nop
    IL_0052:  ldarg.0
    IL_0053:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0058:  nop
    IL_0059:  ret
  } // end of method ScannerEventSupport::fireDoneParsing

  .method public hidebysig newslot virtual 
          instance void  fireEnterRule(int32 ruleNum,
                                       int32 guessing,
                                       int32 data) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  dup
    IL_0003:  ldfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_0008:  ldc.i4.1
    IL_0009:  add
    IL_000a:  stfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_000f:  ldarg.0
    IL_0010:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0015:  castclass  antlr.CharScanner
    IL_001a:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_001f:  ldsfld     object antlr.Parser::EnterRuleEventKey
    IL_0024:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_0029:  castclass  antlr.debug.TraceEventHandler
    IL_002e:  stloc.0
    IL_002f:  ldloc.0
    IL_0030:  ldnull
    IL_0031:  ceq
    IL_0033:  stloc.1
    IL_0034:  ldloc.1
    IL_0035:  brtrue.s   IL_0060

    IL_0037:  nop
    IL_0038:  ldarg.0
    IL_0039:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_003e:  ldsfld     int32 antlr.debug.TraceEventArgs::ENTER
    IL_0043:  ldarg.1
    IL_0044:  ldarg.2
    IL_0045:  ldarg.3
    IL_0046:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_004b:  nop
    IL_004c:  ldloc.0
    IL_004d:  ldarg.0
    IL_004e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0053:  ldarg.0
    IL_0054:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_0059:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_005e:  nop
    IL_005f:  nop
    IL_0060:  ldarg.0
    IL_0061:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0066:  nop
    IL_0067:  ret
  } // end of method ScannerEventSupport::fireEnterRule

  .method public hidebysig newslot virtual 
          instance void  fireExitRule(int32 ruleNum,
                                      int32 guessing,
                                      int32 data) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.TraceEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ExitRuleEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TraceEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0052

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_0030:  ldsfld     int32 antlr.debug.TraceEventArgs::EXIT
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  callvirt   instance void antlr.debug.TraceEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32,
                                                                             int32)
    IL_003d:  nop
    IL_003e:  ldloc.0
    IL_003f:  ldarg.0
    IL_0040:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0045:  ldarg.0
    IL_0046:  ldfld      class antlr.debug.TraceEventArgs antlr.debug.ScannerEventSupport::traceEvent
    IL_004b:  callvirt   instance void antlr.debug.TraceEventHandler::Invoke(object,
                                                                             class antlr.debug.TraceEventArgs)
    IL_0050:  nop
    IL_0051:  nop
    IL_0052:  ldarg.0
    IL_0053:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0058:  nop
    IL_0059:  ldarg.0
    IL_005a:  dup
    IL_005b:  ldfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_0060:  ldc.i4.1
    IL_0061:  sub
    IL_0062:  stfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_0067:  ldarg.0
    IL_0068:  ldfld      int32 antlr.debug.ScannerEventSupport::ruleDepth
    IL_006d:  ldc.i4.0
    IL_006e:  ceq
    IL_0070:  ldc.i4.0
    IL_0071:  ceq
    IL_0073:  stloc.1
    IL_0074:  ldloc.1
    IL_0075:  brtrue.s   IL_007e

    IL_0077:  ldarg.0
    IL_0078:  callvirt   instance void antlr.debug.ScannerEventSupport::fireDoneParsing()
    IL_007d:  nop
    IL_007e:  ret
  } // end of method ScannerEventSupport::fireExitRule

  .method public hidebysig newslot virtual 
          instance void  fireLA(int32 k,
                                int32 la) cil managed
  {
    // 
    .maxstack  4
    .locals init (class antlr.debug.TokenEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::LAEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.TokenEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0051

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ScannerEventSupport::tokenEvent
    IL_0030:  ldsfld     int32 antlr.debug.TokenEventArgs::LA
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  callvirt   instance void antlr.debug.TokenEventArgs::setValues(int32,
                                                                             int32,
                                                                             int32)
    IL_003c:  nop
    IL_003d:  ldloc.0
    IL_003e:  ldarg.0
    IL_003f:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0044:  ldarg.0
    IL_0045:  ldfld      class antlr.debug.TokenEventArgs antlr.debug.ScannerEventSupport::tokenEvent
    IL_004a:  callvirt   instance void antlr.debug.TokenEventHandler::Invoke(object,
                                                                             class antlr.debug.TokenEventArgs)
    IL_004f:  nop
    IL_0050:  nop
    IL_0051:  ldarg.0
    IL_0052:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0057:  nop
    IL_0058:  ret
  } // end of method ScannerEventSupport::fireLA

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.1
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.2
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   class antlr.collections.impl.BitSet b,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(char c,
                                   string target,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_RANGE
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(int32 c,
                                   class antlr.collections.impl.BitSet b,
                                   string text,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0056

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  ldarg.s    guessing
    IL_003a:  ldc.i4.0
    IL_003b:  ldc.i4.1
    IL_003c:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0041:  nop
    IL_0042:  ldloc.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0049:  ldarg.0
    IL_004a:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004f:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldarg.0
    IL_0057:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005c:  nop
    IL_005d:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(int32 n,
                                   string text,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.1
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.2
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatch(string s,
                                   int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::STRING
    IL_0035:  ldc.i4.0
    IL_0036:  ldarg.1
    IL_0037:  ldnull
    IL_0038:  ldarg.2
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMatch

  .method public hidebysig newslot virtual 
          instance void  fireMatchNot(char c,
                                      char n,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.1
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ScannerEventSupport::fireMatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMatchNot(int32 c,
                                      int32 n,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.1
    IL_0040:  ldc.i4.1
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ScannerEventSupport::fireMatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      char n,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.0
    IL_003f:  ldc.i4.0
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      class antlr.collections.impl.BitSet b,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(char c,
                                      string target,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR_RANGE
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldnull
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(int32 i,
                                      int32 n,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.0
    IL_0040:  ldc.i4.0
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(int32 i,
                                      class antlr.collections.impl.BitSet b,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0056

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::BITSET
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  ldarg.3
    IL_0038:  ldarg.s    guessing
    IL_003a:  ldc.i4.0
    IL_003b:  ldc.i4.1
    IL_003c:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0041:  nop
    IL_0042:  ldloc.0
    IL_0043:  ldarg.0
    IL_0044:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0049:  ldarg.0
    IL_004a:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004f:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0054:  nop
    IL_0055:  nop
    IL_0056:  ldarg.0
    IL_0057:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005c:  nop
    IL_005d:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatch(string s,
                                      string text,
                                      int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::STRING
    IL_0035:  ldc.i4.0
    IL_0036:  ldarg.2
    IL_0037:  ldarg.1
    IL_0038:  ldarg.3
    IL_0039:  ldc.i4.0
    IL_003a:  ldc.i4.1
    IL_003b:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_004e:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireMismatch

  .method public hidebysig newslot virtual 
          instance void  fireMismatchNot(char v,
                                         char c,
                                         int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005a

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::CHAR
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Char
    IL_003c:  ldnull
    IL_003d:  ldarg.3
    IL_003e:  ldc.i4.1
    IL_003f:  ldc.i4.1
    IL_0040:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0045:  nop
    IL_0046:  ldloc.0
    IL_0047:  ldarg.0
    IL_0048:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004d:  ldarg.0
    IL_004e:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0053:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0058:  nop
    IL_0059:  nop
    IL_005a:  ldarg.0
    IL_005b:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0060:  nop
    IL_0061:  ret
  } // end of method ScannerEventSupport::fireMismatchNot

  .method public hidebysig newslot virtual 
          instance void  fireMismatchNot(int32 i,
                                         int32 n,
                                         string text,
                                         int32 guessing) cil managed
  {
    // 
    .maxstack  8
    .locals init (class antlr.debug.MatchEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::MisMatchNotEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MatchEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_005b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0030:  ldsfld     int32 antlr.debug.MatchEventArgs::TOKEN
    IL_0035:  ldarg.1
    IL_0036:  ldarg.2
    IL_0037:  box        [mscorlib]System.Int32
    IL_003c:  ldarg.3
    IL_003d:  ldarg.s    guessing
    IL_003f:  ldc.i4.1
    IL_0040:  ldc.i4.1
    IL_0041:  callvirt   instance void antlr.debug.MatchEventArgs::setValues(int32,
                                                                             int32,
                                                                             object,
                                                                             string,
                                                                             int32,
                                                                             bool,
                                                                             bool)
    IL_0046:  nop
    IL_0047:  ldloc.0
    IL_0048:  ldarg.0
    IL_0049:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_004e:  ldarg.0
    IL_004f:  ldfld      class antlr.debug.MatchEventArgs antlr.debug.ScannerEventSupport::matchEvent
    IL_0054:  callvirt   instance void antlr.debug.MatchEventHandler::Invoke(object,
                                                                             class antlr.debug.MatchEventArgs)
    IL_0059:  nop
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0061:  nop
    IL_0062:  ret
  } // end of method ScannerEventSupport::fireMismatchNot

  .method public hidebysig newslot virtual 
          instance void  fireNewLine(int32 line) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.NewLineEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::NewLineEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.NewLineEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004b

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.NewLineEventArgs antlr.debug.ScannerEventSupport::newLineEvent
    IL_0030:  ldarg.1
    IL_0031:  callvirt   instance void antlr.debug.NewLineEventArgs::set_Line(int32)
    IL_0036:  nop
    IL_0037:  ldloc.0
    IL_0038:  ldarg.0
    IL_0039:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_003e:  ldarg.0
    IL_003f:  ldfld      class antlr.debug.NewLineEventArgs antlr.debug.ScannerEventSupport::newLineEvent
    IL_0044:  callvirt   instance void antlr.debug.NewLineEventHandler::Invoke(object,
                                                                               class antlr.debug.NewLineEventArgs)
    IL_0049:  nop
    IL_004a:  nop
    IL_004b:  ldarg.0
    IL_004c:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0051:  nop
    IL_0052:  ret
  } // end of method ScannerEventSupport::fireNewLine

  .method public hidebysig newslot virtual 
          instance void  fireReportError(class [mscorlib]System.Exception e) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0055

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::ERROR
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance string [mscorlib]System.Object::ToString()
    IL_003b:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_0040:  nop
    IL_0041:  ldloc.0
    IL_0042:  ldarg.0
    IL_0043:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0048:  ldarg.0
    IL_0049:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_004e:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_0053:  nop
    IL_0054:  nop
    IL_0055:  ldarg.0
    IL_0056:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_005b:  nop
    IL_005c:  ret
  } // end of method ScannerEventSupport::fireReportError

  .method public hidebysig newslot virtual 
          instance void  fireReportError(string s) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportErrorEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0050

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::ERROR
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_003b:  nop
    IL_003c:  ldloc.0
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0049:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_004e:  nop
    IL_004f:  nop
    IL_0050:  ldarg.0
    IL_0051:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0056:  nop
    IL_0057:  ret
  } // end of method ScannerEventSupport::fireReportError

  .method public hidebysig newslot virtual 
          instance void  fireReportWarning(string s) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.MessageEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::ReportWarningEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.MessageEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_0050

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0030:  ldsfld     int32 antlr.debug.MessageEventArgs::WARNING
    IL_0035:  ldarg.1
    IL_0036:  callvirt   instance void antlr.debug.MessageEventArgs::setValues(int32,
                                                                               string)
    IL_003b:  nop
    IL_003c:  ldloc.0
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  ldarg.0
    IL_0044:  ldfld      class antlr.debug.MessageEventArgs antlr.debug.ScannerEventSupport::messageEvent
    IL_0049:  callvirt   instance void antlr.debug.MessageEventHandler::Invoke(object,
                                                                               class antlr.debug.MessageEventArgs)
    IL_004e:  nop
    IL_004f:  nop
    IL_0050:  ldarg.0
    IL_0051:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0056:  nop
    IL_0057:  ret
  } // end of method ScannerEventSupport::fireReportWarning

  .method public hidebysig newslot virtual 
          instance bool  fireSemanticPredicateEvaluated(int32 'type',
                                                        int32 condition,
                                                        bool result,
                                                        int32 guessing) cil managed
  {
    // 
    .maxstack  5
    .locals init (class antlr.debug.SemanticPredicateEventHandler V_0,
             bool V_1,
             bool V_2)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SemPredEvaluatedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SemanticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.2
    IL_0026:  ldloc.2
    IL_0027:  brtrue.s   IL_004f

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ScannerEventSupport::semPredEvent
    IL_0030:  ldarg.1
    IL_0031:  ldarg.2
    IL_0032:  ldarg.3
    IL_0033:  ldarg.s    guessing
    IL_0035:  callvirt   instance void antlr.debug.SemanticPredicateEventArgs::setValues(int32,
                                                                                         int32,
                                                                                         bool,
                                                                                         int32)
    IL_003a:  nop
    IL_003b:  ldloc.0
    IL_003c:  ldarg.0
    IL_003d:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0042:  ldarg.0
    IL_0043:  ldfld      class antlr.debug.SemanticPredicateEventArgs antlr.debug.ScannerEventSupport::semPredEvent
    IL_0048:  callvirt   instance void antlr.debug.SemanticPredicateEventHandler::Invoke(object,
                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_004d:  nop
    IL_004e:  nop
    IL_004f:  ldarg.0
    IL_0050:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0055:  nop
    IL_0056:  ldarg.3
    IL_0057:  stloc.1
    IL_0058:  br.s       IL_005a

    IL_005a:  ldloc.1
    IL_005b:  ret
  } // end of method ScannerEventSupport::fireSemanticPredicateEvaluated

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateFailed(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredFailedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ScannerEventSupport::fireSyntacticPredicateFailed

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateStarted(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredStartedEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ScannerEventSupport::fireSyntacticPredicateStarted

  .method public hidebysig newslot virtual 
          instance void  fireSyntacticPredicateSucceeded(int32 guessing) cil managed
  {
    // 
    .maxstack  3
    .locals init (class antlr.debug.SyntacticPredicateEventHandler V_0,
             bool V_1)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  callvirt   instance class [System]System.ComponentModel.EventHandlerList antlr.CharScanner::get_Events()
    IL_0011:  ldsfld     object antlr.Parser::SynPredSucceededEventKey
    IL_0016:  callvirt   instance class [mscorlib]System.Delegate [System]System.ComponentModel.EventHandlerList::get_Item(object)
    IL_001b:  castclass  antlr.debug.SyntacticPredicateEventHandler
    IL_0020:  stloc.0
    IL_0021:  ldloc.0
    IL_0022:  ldnull
    IL_0023:  ceq
    IL_0025:  stloc.1
    IL_0026:  ldloc.1
    IL_0027:  brtrue.s   IL_004c

    IL_0029:  nop
    IL_002a:  ldarg.0
    IL_002b:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0030:  ldc.i4.0
    IL_0031:  ldarg.1
    IL_0032:  callvirt   instance void antlr.debug.GuessingEventArgs::setValues(int32,
                                                                                int32)
    IL_0037:  nop
    IL_0038:  ldloc.0
    IL_0039:  ldarg.0
    IL_003a:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_003f:  ldarg.0
    IL_0040:  ldfld      class antlr.debug.SyntacticPredicateEventArgs antlr.debug.ScannerEventSupport::synPredEvent
    IL_0045:  callvirt   instance void antlr.debug.SyntacticPredicateEventHandler::Invoke(object,
                                                                                          class antlr.debug.SyntacticPredicateEventArgs)
    IL_004a:  nop
    IL_004b:  nop
    IL_004c:  ldarg.0
    IL_004d:  callvirt   instance void antlr.debug.ScannerEventSupport::checkController()
    IL_0052:  nop
    IL_0053:  ret
  } // end of method ScannerEventSupport::fireSyntacticPredicateSucceeded

  .method public hidebysig newslot virtual 
          instance void  refreshListeners() cil managed
  {
    // 
    .maxstack  2
    .locals init (class [mscorlib]System.Collections.Hashtable V_0,
             class antlr.debug.Listener V_1,
             object V_2,
             class [mscorlib]System.Collections.IDictionaryEnumerator V_3,
             bool V_4,
             class [mscorlib]System.IDisposable V_5)
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ScannerEventSupport::listeners
    IL_0007:  callvirt   instance object [mscorlib]System.Collections.Hashtable::get_SyncRoot()
    IL_000c:  dup
    IL_000d:  stloc.2
    IL_000e:  call       void [mscorlib]System.Threading.Monitor::Enter(object)
    IL_0013:  nop
    .try
    {
      IL_0014:  nop
      IL_0015:  ldarg.0
      IL_0016:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ScannerEventSupport::listeners
      IL_001b:  callvirt   instance object [mscorlib]System.Collections.Hashtable::Clone()
      IL_0020:  castclass  [mscorlib]System.Collections.Hashtable
      IL_0025:  stloc.0
      IL_0026:  nop
      IL_0027:  leave.s    IL_0031

    }  // end .try
    finally
    {
      IL_0029:  ldloc.2
      IL_002a:  call       void [mscorlib]System.Threading.Monitor::Exit(object)
      IL_002f:  nop
      IL_0030:  endfinally
    }  // end handler
    IL_0031:  nop
    IL_0032:  nop
    IL_0033:  ldloc.0
    IL_0034:  callvirt   instance class [mscorlib]System.Collections.IDictionaryEnumerator [mscorlib]System.Collections.Hashtable::GetEnumerator()
    IL_0039:  stloc.3
    .try
    {
      IL_003a:  br.s       IL_0051

      IL_003c:  ldloc.3
      IL_003d:  callvirt   instance object [mscorlib]System.Collections.IEnumerator::get_Current()
      IL_0042:  castclass  antlr.debug.Listener
      IL_0047:  stloc.1
      IL_0048:  nop
      IL_0049:  ldloc.1
      IL_004a:  callvirt   instance void antlr.debug.Listener::refresh()
      IL_004f:  nop
      IL_0050:  nop
      IL_0051:  ldloc.3
      IL_0052:  callvirt   instance bool [mscorlib]System.Collections.IEnumerator::MoveNext()
      IL_0057:  stloc.s    V_4
      IL_0059:  ldloc.s    V_4
      IL_005b:  brtrue.s   IL_003c

      IL_005d:  leave.s    IL_007b

    }  // end .try
    finally
    {
      IL_005f:  ldloc.3
      IL_0060:  isinst     [mscorlib]System.IDisposable
      IL_0065:  stloc.s    V_5
      IL_0067:  ldloc.s    V_5
      IL_0069:  ldnull
      IL_006a:  ceq
      IL_006c:  stloc.s    V_4
      IL_006e:  ldloc.s    V_4
      IL_0070:  brtrue.s   IL_007a

      IL_0072:  ldloc.s    V_5
      IL_0074:  callvirt   instance void [mscorlib]System.IDisposable::Dispose()
      IL_0079:  nop
      IL_007a:  endfinally
    }  // end handler
    IL_007b:  nop
    IL_007c:  ret
  } // end of method ScannerEventSupport::refreshListeners

  .method public hidebysig newslot virtual 
          instance void  removeDoneListener(class antlr.debug.Listener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.Listener::doneParsing(object,
                                                                         class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_Done(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      class [mscorlib]System.Collections.Hashtable antlr.debug.ScannerEventSupport::listeners
    IL_0025:  ldarg.1
    IL_0026:  callvirt   instance void [mscorlib]System.Collections.Hashtable::Remove(object)
    IL_002b:  nop
    IL_002c:  ret
  } // end of method ScannerEventSupport::removeDoneListener

  .method public hidebysig newslot virtual 
          instance void  removeMessageListener(class antlr.debug.MessageListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.MessageListener::reportError(object,
                                                                                class antlr.debug.MessageEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_ErrorReported(class antlr.debug.MessageEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.MessageListener::reportWarning(object,
                                                                                  class antlr.debug.MessageEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MessageEventHandler::.ctor(object,
                                                                              native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::remove_WarningReported(class antlr.debug.MessageEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::removeMessageListener

  .method public hidebysig newslot virtual 
          instance void  removeNewLineListener(class antlr.debug.NewLineListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.NewLineListener::hitNewLine(object,
                                                                               class antlr.debug.NewLineEventArgs)
    IL_0014:  newobj     instance void antlr.debug.NewLineEventHandler::.ctor(object,
                                                                              native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_HitNewLine(class antlr.debug.NewLineEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ScannerEventSupport::removeNewLineListener

  .method public hidebysig newslot virtual 
          instance void  removeParserListener(class antlr.debug.ParserListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldarg.1
    IL_0003:  callvirt   instance void antlr.debug.ScannerEventSupport::removeParserMatchListener(class antlr.debug.ParserMatchListener)
    IL_0008:  nop
    IL_0009:  ldarg.0
    IL_000a:  ldarg.1
    IL_000b:  callvirt   instance void antlr.debug.ScannerEventSupport::removeMessageListener(class antlr.debug.MessageListener)
    IL_0010:  nop
    IL_0011:  ldarg.0
    IL_0012:  ldarg.1
    IL_0013:  callvirt   instance void antlr.debug.ScannerEventSupport::removeParserTokenListener(class antlr.debug.ParserTokenListener)
    IL_0018:  nop
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  callvirt   instance void antlr.debug.ScannerEventSupport::removeTraceListener(class antlr.debug.TraceListener)
    IL_0020:  nop
    IL_0021:  ldarg.0
    IL_0022:  ldarg.1
    IL_0023:  callvirt   instance void antlr.debug.ScannerEventSupport::removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener)
    IL_0028:  nop
    IL_0029:  ldarg.0
    IL_002a:  ldarg.1
    IL_002b:  callvirt   instance void antlr.debug.ScannerEventSupport::removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener)
    IL_0030:  nop
    IL_0031:  ret
  } // end of method ScannerEventSupport::removeParserListener

  .method public hidebysig newslot virtual 
          instance void  removeParserMatchListener(class antlr.debug.ParserMatchListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatch(object,
                                                                                    class antlr.debug.MatchEventArgs)
    IL_0014:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_MatchedChar(class antlr.debug.MatchEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMatchNot(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0032:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::remove_MatchedNotChar(class antlr.debug.MatchEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  castclass  antlr.CharScanner
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatch(object,
                                                                                       class antlr.debug.MatchEventArgs)
    IL_0050:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0055:  callvirt   instance void antlr.CharScanner::remove_MisMatchedChar(class antlr.debug.MatchEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0061:  castclass  antlr.CharScanner
    IL_0066:  ldarg.1
    IL_0067:  dup
    IL_0068:  ldvirtftn  instance void antlr.debug.ParserMatchListener::parserMismatchNot(object,
                                                                                          class antlr.debug.MatchEventArgs)
    IL_006e:  newobj     instance void antlr.debug.MatchEventHandler::.ctor(object,
                                                                            native int)
    IL_0073:  callvirt   instance void antlr.CharScanner::remove_MisMatchedNotChar(class antlr.debug.MatchEventHandler)
    IL_0078:  nop
    IL_0079:  ldarg.0
    IL_007a:  ldarg.1
    IL_007b:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0080:  nop
    IL_0081:  ret
  } // end of method ScannerEventSupport::removeParserMatchListener

  .method public hidebysig newslot virtual 
          instance void  removeParserTokenListener(class antlr.debug.ParserTokenListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserConsume(object,
                                                                                      class antlr.debug.TokenEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_ConsumedChar(class antlr.debug.TokenEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.ParserTokenListener::parserLA(object,
                                                                                 class antlr.debug.TokenEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TokenEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::remove_CharLA(class antlr.debug.TokenEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::removeParserTokenListener

  .method public hidebysig newslot virtual 
          instance void  removeSemanticPredicateListener(class antlr.debug.SemanticPredicateListener l) cil managed
  {
    // 
    .maxstack  8
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SemanticPredicateListener::semanticPredicateEvaluated(object,
                                                                                                         class antlr.debug.SemanticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SemanticPredicateEventHandler::.ctor(object,
                                                                                        native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_SemPredEvaluated(class antlr.debug.SemanticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldarg.1
    IL_0021:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0026:  nop
    IL_0027:  ret
  } // end of method ScannerEventSupport::removeSemanticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeSyntacticPredicateListener(class antlr.debug.SyntacticPredicateListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateStarted(object,
                                                                                                         class antlr.debug.SyntacticPredicateEventArgs)
    IL_0014:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_SynPredStarted(class antlr.debug.SyntacticPredicateEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateFailed(object,
                                                                                                        class antlr.debug.SyntacticPredicateEventArgs)
    IL_0032:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::remove_SynPredFailed(class antlr.debug.SyntacticPredicateEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0043:  castclass  antlr.CharScanner
    IL_0048:  ldarg.1
    IL_0049:  dup
    IL_004a:  ldvirtftn  instance void antlr.debug.SyntacticPredicateListener::syntacticPredicateSucceeded(object,
                                                                                                           class antlr.debug.SyntacticPredicateEventArgs)
    IL_0050:  newobj     instance void antlr.debug.SyntacticPredicateEventHandler::.ctor(object,
                                                                                         native int)
    IL_0055:  callvirt   instance void antlr.CharScanner::remove_SynPredSucceeded(class antlr.debug.SyntacticPredicateEventHandler)
    IL_005a:  nop
    IL_005b:  ldarg.0
    IL_005c:  ldarg.1
    IL_005d:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0062:  nop
    IL_0063:  ret
  } // end of method ScannerEventSupport::removeSyntacticPredicateListener

  .method public hidebysig newslot virtual 
          instance void  removeTraceListener(class antlr.debug.TraceListener l) cil managed
  {
    // 
    .maxstack  4
    IL_0000:  nop
    IL_0001:  ldarg.0
    IL_0002:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0007:  castclass  antlr.CharScanner
    IL_000c:  ldarg.1
    IL_000d:  dup
    IL_000e:  ldvirtftn  instance void antlr.debug.TraceListener::enterRule(object,
                                                                            class antlr.debug.TraceEventArgs)
    IL_0014:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0019:  callvirt   instance void antlr.CharScanner::remove_EnterRule(class antlr.debug.TraceEventHandler)
    IL_001e:  nop
    IL_001f:  ldarg.0
    IL_0020:  ldfld      object antlr.debug.ScannerEventSupport::source
    IL_0025:  castclass  antlr.CharScanner
    IL_002a:  ldarg.1
    IL_002b:  dup
    IL_002c:  ldvirtftn  instance void antlr.debug.TraceListener::exitRule(object,
                                                                           class antlr.debug.TraceEventArgs)
    IL_0032:  newobj     instance void antlr.debug.TraceEventHandler::.ctor(object,
                                                                            native int)
    IL_0037:  callvirt   instance void antlr.CharScanner::remove_ExitRule(class antlr.debug.TraceEventHandler)
    IL_003c:  nop
    IL_003d:  ldarg.0
    IL_003e:  ldarg.1
    IL_003f:  callvirt   instance void antlr.debug.ScannerEventSupport::removeDoneListener(class antlr.debug.Listener)
    IL_0044:  nop
    IL_0045:  ret
  } // end of method ScannerEventSupport::removeTraceListener

} // end of class antlr.debug.ScannerEventSupport


// =============================================================

// 
// 
